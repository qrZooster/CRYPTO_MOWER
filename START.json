{
  "meta": {
    "project": "CRYPTO_MOWER",
    "updated": "2025-10-19T08:24:52Z",
    "files_total": 23,
    "lines_total": 6353,
    "bytes_total": 266675
  },
  "docs": [
    {
      "name": "bb_controls.md",
      "dir": "/docs",
      "lines": 188,
      "bytes": 8692,
      "updated": "2025-10-18T14:14:24Z",
      "content": "# üß≠ bb_controls.md ‚Äî –í–∏–∑—É–∞–ª—å–Ω–∞—è –≤–µ—Ç–≤—å Tradition Core 2025\n\n**–§–∞–π–ª:** `bb_controls.py`  \n**–í–µ—Ä—Å–∏—è:** Tradition Core 2025  \n**–°–æ–∑–¥–∞–Ω:** 2025-10-17 12:31  \n**–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (`TCustomControl`, `TControl`, `TPage`, `TWSControl`, `TMonitor`)  \n**–ê–≤—Ç–æ—Ä—Å—Ç–≤–æ:** Canonical Build System (Tradition-2025)\n\n---\n\n## üèó –û–±—â–∏–π –æ–±–∑–æ—Ä\n\n`bb_controls.py` ‚Äî –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Å–ª–æ–π **Tradition Core Framework**, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ **HTML-–≥–µ–Ω–µ—Ä–∞—Ü–∏—é**,  \n–∏–µ—Ä–∞—Ä—Ö–∏—é –∫–æ–Ω—Ç—Ä–æ–ª–æ–≤ –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.  \n–≠—Ç–æ \"–≥–ª–∞–∑\" —Å–∏—Å—Ç–µ–º—ã ‚Äî –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–¥–µ—Å—å –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ **–∂–∏–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É**.\n\n–ú–æ–¥—É–ª—å —Å–æ–∑–¥–∞—ë—Ç –µ–¥–∏–Ω—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (`TControl`), —Å—Ç—Ä–∞–Ω–∏—Ü (`TPage`) –∏  \nWebSocket-–ø–æ—Ç–æ–∫–æ–≤ (`TWSControl`, `TMonitor`).\n\n---\n\n## ‚öôÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —É—Ä–æ–≤–Ω–∏\n\n| –ö–ª–∞—Å—Å | –†–æ–¥–∏—Ç–µ–ª—å | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ |\n|--------|-----------|------------|\n| **TCustomControl** | `TComponent` | –ë–∞–∑–æ–≤—ã–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç: —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, HTML-–ª–æ–≥–∏–∫–∞ |\n| **TControl** | `TCustomControl` | –û–±—ã—á–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (`div`, `span`, `button` –∏ —Ç.–¥.) |\n| **TPage** | `TCustomControl` | –ö–æ—Ä–Ω–µ–≤–∞—è HTML-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ |\n| **TWSControl** | `TControl` | –ü—Ä–∏—ë–º–Ω–∏–∫ WebSocket-–ø–æ—Ç–æ–∫–∞ |\n| **TMonitor** | `TWSControl` | –í–∏–∑—É–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä –∫–∞–Ω–∞–ª–æ–≤ Tradition |\n\n---\n\n## üß© –ö–ª–∞—Å—Å `TCustomControl` ‚Äî –±–∞–∑–æ–≤—ã–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç\n\n**–†–æ–ª—å:** —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤—É –≤–∏–∑—É–∞–ª—å–Ω–æ–π –∏–µ—Ä–∞—Ä—Ö–∏–∏ Tradition.  \n–ö–∞–∂–¥—ã–π –∫–æ–Ω—Ç—Ä–æ–ª –∏–º–µ–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ (`Owner`), —Ä–æ–¥–∏—Ç–µ–ª—è (`Parent`) –∏ –∫–æ–ª–ª–µ–∫—Ü–∏—é –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (`Controls`).\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è\n| –ü–æ–ª–µ | –¢–∏–ø | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ |\n|-------|------|------------|\n| `Owner` | `TComponent` | –í–ª–∞–¥–µ–ª–µ—Ü –∫–æ–Ω—Ç—Ä–æ–ª–∞ |\n| `Parent` | `TCustomControl` | –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç |\n| `Controls` | `dict[str, TCustomControl]` | –î–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã |\n| `src` | `list[str | TCustomControl]` | –ò—Å—Ç–æ—á–Ω–∏–∫ HTML-–∫–æ–Ω—Ç–µ–Ω—Ç–∞ |\n\n### –ú–µ—Ç–æ–¥—ã HTML-–ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è\n| –ú–µ—Ç–æ–¥ | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ |\n|--------|-------------|\n| `text(html)` | –î–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π HTML-—Ç–µ–∫—Å—Ç |\n| `tg(tag, cls, attr)` / `etg(tag)` | –û—Ç–∫—Ä—ã–≤–∞–µ—Ç / –∑–∞–∫—Ä—ã–≤–∞–µ—Ç HTML-—Ç–µ–≥ |\n| `br(count)` | –î–æ–±–∞–≤–ª—è–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ |\n| `h(count, s, cls, attr)` | –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ h1‚Äìh6 |\n| `div()`, `table()`, `tr()`, `td()` | –£–ø—Ä–æ—â—ë–Ω–Ω—ã–µ —Ñ–∞—Å–∞–¥—ã —Ç–µ–≥–æ–≤ |\n| `html()` | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—ã–π HTML-–¥–æ–∫—É–º–µ–Ω—Ç |\n\n**–§–∏–ª–æ—Å–æ—Ñ–∏—è:**  \n> ‚Äú–ö–∞–∂–¥—ã–π –∫–æ–Ω—Ç—Ä–æ–ª ‚Äî –º–∞–ª–µ–Ω—å–∫–∏–π –º–∞—Å—Ç–µ—Ä HTML, —É–º–µ—é—â–∏–π —Å–∞–º —Ä–∏—Å–æ–≤–∞—Ç—å —Å–µ–±—è –∏ —Å–≤–æ–∏—Ö –¥–µ—Ç–µ–π.‚Äù\n\n---\n\n## üîπ –ö–ª–∞—Å—Å `TControl` ‚Äî –±–∞–∑–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n\n**–†–æ–¥–∏—Ç–µ–ª—å:** `TCustomControl`  \n–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ª—é–±—ã—Ö HTML-—ç–ª–µ–º–µ–Ω—Ç–æ–≤ ‚Äî `div`, `span`, `button`, `input` –∏ —Ç.–¥.\n\n–°–æ–∑–¥–∞—ë—Ç—Å—è –∫–∞–∫:\n\n```python\nbtn = TControl(Owner, \"BtnOK\", Parent=page, tag=\"button\", text=\"OK\")\n```\n\n–ü–æ–∫–∞ –∫–ª–∞—Å—Å –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –Ω–∞—Å–ª–µ–¥—É–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ `TCustomControl`,  \n–Ω–æ —è–≤–ª—è–µ—Ç—Å—è —Ç–æ—á–∫–æ–π —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –±—É–¥—É—â–∏—Ö –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–∫–Ω–æ–ø–æ–∫, —Ñ–æ—Ä–º, –≤–∏–¥–∂–µ—Ç–æ–≤).\n\n---\n\n## üìÑ –ö–ª–∞—Å—Å `TPage` ‚Äî HTML-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ Tradition Core\n\n**–†–æ–¥–∏—Ç–µ–ª—å:** `TCustomControl`  \n**–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π HTML-–¥–æ–∫—É–º–µ–Ω—Ç —Å `<head>`, `<body>` –∏ —Å—Ç–∏–ª—è–º–∏ Tradition.\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è\n| –ü–æ–ª–µ | –û–ø–∏—Å–∞–Ω–∏–µ |\n|-------|-----------|\n| `title` | –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã |\n| `style` | –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ CSS-—Å—Ç–∏–ª–∏ |\n| `Parent` | `None` (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Äî –∫–æ—Ä–µ–Ω—å –¥–µ—Ä–µ–≤–∞) |\n\n### –ü–æ–≤–µ–¥–µ–Ω–∏–µ\n- –ú–µ—Ç–æ–¥ `html()` –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç, –≤–∫–ª—é—á–∞—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ, —Å—Ç–∏–ª–∏ –∏ —Ç–µ–ª–æ.  \n- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–∞—Å–∫–∞–¥–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–æ–≤ (—á–µ—Ä–µ–∑ `add_control`).\n\n**–í—ã–≤–æ–¥:** —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Äî —ç—Ç–æ ‚Äú–∫–æ—Ä–µ–Ω—å –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –º–∏—Ä–∞‚Äù –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n\n---\n\n## üì° –ö–ª–∞—Å—Å `TWSControl` ‚Äî WebSocket-–ø—Ä–∏—ë–º–Ω–∏–∫\n\n**–†–æ–¥–∏—Ç–µ–ª—å:** `TControl`  \n–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–∏—ë–º –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebSocket-–∫–∞–Ω–∞–ª–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Ö –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n| –ü–æ–ª–µ | –û–ø–∏—Å–∞–Ω–∏–µ |\n|-------|-----------|\n| `url` | –ê–¥—Ä–µ—Å WebSocket-—Å–µ—Ä–≤–µ—Ä–∞ |\n| `channel` | –ò–º—è –∫–∞–Ω–∞–ª–∞ –ø–æ–¥–ø–∏—Å–∫–∏ |\n| `eid` | DOM-id —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è |\n\n### –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã\n- –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ WebSocket –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É.  \n- –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ `{\"type\": \"subscribe\", \"channel\": ...}`.  \n- –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ HTML-—ç–ª–µ–º–µ–Ω—Ç —Å id = `eid`.  \n- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ –∫–∞–Ω–∞–ª—É.\n\n```js\nws.onmessage = (e) => {\n  const msg = JSON.parse(e.data);\n  if (msg.channel !== channel) return;\n  const el = document.getElementById(eid);\n  el.textContent += msg.text + \"\\n\";\n}\n```\n\n---\n\n## üñ• –ö–ª–∞—Å—Å `TMonitor` ‚Äî –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∫–∏–Ω–µ—Å–∫–æ–ø Tradition\n\n**–†–æ–¥–∏—Ç–µ–ª—å:** `TWSControl`  \n–°–æ–∑–¥–∞—ë—Ç **–∂–∏–≤–æ–π HTML-—ç–ª–µ–º–µ–Ω—Ç**, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.\n\n### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:\n- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É WebSocket-–ø–æ—Ä—Ç—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 8081).  \n- –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç–∏–ª–µ ‚Äú–∫–æ–Ω—Å–æ–ª–∏ Tradition‚Äù (–∑–µ–ª—ë–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —Ç—ë–º–Ω–æ–º —Ñ–æ–Ω–µ).  \n- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –∏–ª–∏ —Ç–æ—Ä–≥–æ–≤—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏ (`SYS`, `TRADE`, `MARKET`).\n\n### –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:\n\n```html\n<div id=\"App-Monitor\" style=\"font-family:monospace;color:#00ff88;\nbackground:#1a1d29;padding:10px;border-radius:8px;\nheight:70vh;overflow-y:auto;\">\nConnecting to SYS...\n</div>\n```\n\n---\n\n## üß± –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è Controls\n\n```\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ  TPage     ‚îÇ   ‚Üê –∫–æ—Ä–Ω–µ–≤–∞—è HTML-—Å—Ç—Ä–∞–Ω–∏—Ü–∞\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n       ‚ñº\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ TControl   ‚îÇ   ‚Üê —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (div, button, table)\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n       ‚ñº\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ TWSControl ‚îÇ   ‚Üê –ø–æ–¥–ø–∏—Å—á–∏–∫ WebSocket-–ø–æ—Ç–æ–∫–∞\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n       ‚ñº\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ TMonitor   ‚îÇ   ‚Üê –≤–∏–∑—É–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫–æ–≤—ã–π —ç–∫—Ä–∞–Ω (console UI)\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n```\n\n---\n\n## ‚ú® –ö–ª—é—á–µ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã\n\n‚úÖ –ï–¥–∏–Ω–∞—è –≤–∏–∑—É–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ Tradition  \n‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML-–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –±–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö —à–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤  \n‚úÖ –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å WebSocket-–ø–æ—Ç–æ–∫–∞–º–∏  \n‚úÖ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö UI-–∫–æ–Ω—Ç—Ä–æ–ª–æ–≤  \n‚úÖ –ü–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å `TApplication` –∏ `TComponent`  \n\n---\n\n## üßæ –†–µ–∑—é–º–µ\n\n`bb_controls.py` ‚Äî —ç—Ç–æ **–≥–ª–∞–∑–∞ –∏ —Ä—É–∫–∏ Tradition Framework**,  \n–ø—Ä–µ–≤—Ä–∞—â–∞—é—â–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–±—ã—Ç–∏—è –≤ –≤–∏–∑—É–∞–ª—å–Ω—ã–π HTML-–º–∏—Ä.\n\n> üí¨ *‚Äú–ö–æ–Ω—Ç—Ä–æ–ª—ã Tradition –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∏—Å—É—é—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ‚Äî –æ–Ω–∏ –æ–∂–∏–≤–ª—è—é—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É.‚Äù*  \n> ‚Äî –ó–∞–∫–æ–Ω Tradition, 2025\n"
    },
    {
      "name": "bb_db.md",
      "dir": "/docs",
      "lines": 225,
      "bytes": 9729,
      "updated": "2025-10-18T13:44:46Z",
      "content": "# üß≠ bb_db.md ‚Äî –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º—ã QR()\n\n**–í–µ—Ä—Å–∏—è:** QR (2025-10-07)  \n**–§–∞–π–ª:** `bb_db.py`  \n**–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Tradition QR Framework  \n**–ê–≤—Ç–æ—Ä—Å—Ç–≤–æ:** Canonical Build System (Tradition-2025)\n\n---\n\n## üèó –û–±—â–∏–π –æ–±–∑–æ—Ä\n\n`bb_db.py` ‚Äî —è–¥—Ä–æ –ø–æ–¥—Å–∏—Å—Ç–µ–º—ã –¥–∞–Ω–Ω—ã—Ö QR-–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã.  \n–û–Ω –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è–º–∏, CRUD-–æ–ø–µ—Ä–∞—Ü–∏–∏, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ introspection —Å—Ö–µ–º—ã –≤ –µ–¥–∏–Ω—ã–π —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å.\n\n–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–±—Ä–∞–∑—É—é—Ç ¬´—á–µ—Ç—ã—Ä–µ –∑–∞—Ç–≤–æ—Ä–∞¬ª:\n\n> **Session ‚Üí Database ‚Üí Config ‚Üí Schema**\n\n–í—Å–µ —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç `TApplication`, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –∏ —Å–≤—è–∑—ã–≤–∞–µ—Ç —ç—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ –µ–¥–∏–Ω—É—é —Å–∏—Å—Ç–µ–º—É.\n\n---\n\n## ‚öôÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ä–æ–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤\n\n| –ö–æ–º–ø–æ–Ω–µ–Ω—Ç | –ö–ª–∞—Å—Å | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ |\n|------------|-------|------------|\n| **Session** | `TSession` | –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—É–ª–æ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π MySQL –∏ keep-alive |\n| **Database** | `TDatabase` | –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π SQL-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏ QR API |\n| **Config** | `TConfig` | –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ —Ç–∞–±–ª–∏—Ü–µ–π `ZZ$CONFIG` |\n| **Schema** | `TSchema` | Introspection —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î, —Ñ–∏–ª—å—Ç—Ä—ã, –¥–æ–∫—Ç—Ä–∏–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ |\n| **Application** | `TApplication` | –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ —Ç–æ—á–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ |\n| **Facade API** | `qr_*`, `exec`, `key_*`, `mk_*` | –£–ø—Ä–æ—â—ë–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫ –±–∞–∑–µ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ |\n\n---\n\n## üß© Canonical constants\n\n–ï–¥–∏–Ω—ã–π –Ω–∞–±–æ—Ä –∏–º—ë–Ω –ø–æ–ª–µ–π, –ø—Ä–∏–Ω—è—Ç—ã–π –≤–æ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö –∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Ö:\n\n```\nFLD_ID, FLD_HASH, FLD_TCOD, FLD_SYMBOL,\nFLD_TYPE, FLD_NAME, FLD_TEXT,\nFLD_DATE, FLD_DATE_TIME,\nFLD_PRICE, FLD_VOLUME, FLD_SUM, FLD_VALUE,\nFLD_SOURCE, FLD_URL, FLD_TITLE, FLD_TAGS, FLD_VERSION\n```\n\n---\n\n## üß† –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ö–µ–ª–ø–µ—Ä—ã\n\n### `_to_dt_msk(ts)`\n–ü—Ä–∏–≤–æ–¥–∏—Ç –≤—Ä–µ–º—è `ts` (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö, –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö –∏–ª–∏ `datetime`) –∫ timezone-aware `datetime` –≤ –ú–°–ö.  \n–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫ –∏ TCOD-–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.\n\n### `mk_tcod(symbol, ts, tf, venue)`\n–°–æ–∑–¥–∞—ë—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∫–æ–¥:\n```\nSYMBOL_YYYYMMDD_HHMMSS[_mmm]_TF_VENUE\n```\n–ü—Ä–∏–º–µ—Ä:  \n`AIAUSDT_20250929_061600_1SEC_BYBIT`\n\n---\n\n## üî© –ö–ª–∞—Å—Å `TSession` ‚Äî –º–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π\n\n**–†–æ–ª—å:** —É–ø—Ä–∞–≤–ª—è–µ—Ç –ø—É–ª–æ–º MySQL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã:\n- `do_open(pool_size=8)` ‚Äî —Å–æ–∑–¥–∞—ë—Ç –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π.  \n- `do_close()` ‚Äî –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø—É–ª –∏ keep-alive.  \n- `_get_connection()` ‚Äî –≤—ã–¥–∞—ë—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–∑ –ø—É–ª–∞.  \n- `exec(sql, params)` ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å –±–µ–∑ –≤—ã–±–æ—Ä–∫–∏.  \n- `_exec_cursor()` ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π cursor-executor —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∑–∞–∫—Ä—ã—Ç–∏–µ–º.  \n- `keep_alive(interval)` ‚Äî –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ—Ç–æ–∫-–ø–∏–Ω–≥ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π.  \n- `stop_keep_alive()` ‚Äî –∑–∞–≤–µ—Ä—à–∞–µ—Ç keep-alive —Ü–∏–∫–ª.\n\n**–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:** keep-alive –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MySQL –¥–∞–∂–µ –ø—Ä–∏ –¥–æ–ª–≥–∏—Ö –ø—Ä–æ—Å—Ç–æ—è—Ö.\n\n---\n\n## üß± –ö–ª–∞—Å—Å `TDatabase` ‚Äî SQL-—Ñ–∞—Å–∞–¥ –∏ QR-API\n\n–û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤—Å–µ—Ö SQL-–æ–ø–µ—Ä–∞—Ü–∏–π –∏ –ª–æ–≥–∏–∫–∏ CRUD.\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã\n| –ú–µ—Ç–æ–¥ | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ |\n|--------|-------------|\n| `do_open()` | –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (`SELECT 1`) –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è Session |\n| `do_close()` | –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π |\n| `_exec_cursor()` | –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL –∏ –≤–æ–∑–≤—Ä–∞—Ç –¥–∞–Ω–Ω—ã—Ö |\n| `_exec_cursor_dict()` | –¢–æ –∂–µ, –Ω–æ —Å `dictionary=True` |\n| `_where_sql()` | –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ SQL-—É—Å–ª–æ–≤–∏–π (int, str, dict, list, set) |\n\n---\n\n### üì¶ QR API (Query Runtime)\n\n–ü—Ä–æ—Å—Ç—ã–µ –∏ –º–æ—â–Ω—ã–µ CRUD-–æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –¥—É—Ö–µ ORM-–º–∏–Ω–∏–º–∞–ª–∏–∑–º–∞:\n\n| –ú–µ—Ç–æ–¥ | –û–ø–∏—Å–∞–Ω–∏–µ | –í–æ–∑–≤—Ä–∞—Ç |\n|--------|-----------|---------|\n| `qr()` | –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π SELECT/SHOW/EXPLAIN | –°–ø–∏—Å–æ–∫ dict-—Å—Ç—Ä–æ–∫ |\n| `qr_rw()` | –ü–æ–ª—É—á–∞–µ—Ç –æ–¥–Ω—É –∑–∞–ø–∏—Å—å | Dict |\n| `qr_add()` | –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å | Dict –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ |\n| `qr_update()` | –û–±–Ω–æ–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –ø–æ WHERE | Dict –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ |\n| `qr_delete()` | –£–¥–∞–ª—è–µ—Ç –∑–∞–ø–∏—Å—å | Dict —É–¥–∞–ª—ë–Ω–Ω–æ–π |\n| `qr_foi()` | Find-Or-Insert | Dict |\n| `qr_fou()` | Find-Or-Update | Dict |\n| `qr_max()` | MAX(field) | scalar |\n\n---\n\n### üîê Hash Utilities\n- `mk_hash(*parts)` ‚Äî MD5 –æ—Ç —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö —á–∞—Å—Ç–µ–π (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä).  \n- `mk_row_hash(row, fields)` ‚Äî —Ö—ç—à –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª–µ–π —Å—Ç—Ä–æ–∫–∏ (–∫–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Ä—Å–∏–π –∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏).\n\n---\n\n## ‚öôÔ∏è –ö–ª–∞—Å—Å `TConfig` ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π\n\n**–†–æ–ª—å:** —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π ENV –∏ —Ç–∞–±–ª–∏—Ü—É `ZZ$CONFIG`.\n\n| –ú–µ—Ç–æ–¥ | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ |\n|--------|-------------|\n| `do_set(name, value, text, type_)` | –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ ENV –∏ DB |\n| `get(name, default)` | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞—ë—Ç default |\n| `set(name, value, text, type_)` | –ü—É–±–ª–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ |\n| `get_int`, `get_float`, `get_bool` | –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≥–µ—Ç—Ç–µ—Ä—ã |\n\nüí° –ò—Å–ø–æ–ª—å–∑—É–µ—Ç `qr_fou` –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ (find-or-update).\n\n---\n\n## üß¨ –ö–ª–∞—Å—Å `TSchema` ‚Äî introspection –±–∞–∑—ã\n\n**–†–æ–ª—å:** –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç.\n\n–≠—Ç–∞–ø —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏: **Stage 1 (PPS Doctrine).**\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã:\n- `do_open()` ‚Äî –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ (allow/deny-prefixes) –∏ –∑–∞–≥—Ä—É–∑–∫–∞ —Ç–∞–±–ª–∏—Ü.  \n- `do_close()` ‚Äî –æ—á–∏—Å—Ç–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.  \n- `_load_tables()` ‚Äî –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–∞–±–ª–∏—Ü –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è.  \n- `_register_constants()` ‚Äî (stub) –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç –ø–æ —Å—Ö–µ–º–∞–º.\n\n---\n\n## üöÄ Application lifecycle\n\n### `Application()`\n–°–æ–∑–¥–∞—ë—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä `TApplication`, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ª–æ–≥–≥–µ—Ä –∏ —á–µ—Ç—ã—Ä–µ —è–¥—Ä–∞:\n\n```\nTSession ‚Üí TDatabase ‚Üí TConfig ‚Üí TSchema\n```\n\n–í—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏.\n\n### `CloseApplication()`\n–ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, –æ—á–∏—â–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –≤—ã–≤–æ–¥–∏—Ç:\n> üé¨ The End ‚Äî HappyEnd edition üåÖ\n\n---\n\n## ü™Ñ –§–∞—Å–∞–¥–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (Public API)\n\n| –§—É–Ω–∫—Ü–∏—è | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ |\n|----------|-------------|\n| `qr()`, `qr_rw()` | –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π SELECT / FetchOne |\n| `qr_add()`, `qr_update()`, `qr_delete()` | CRUD-–æ–ø–µ—Ä–∞—Ü–∏–∏ |\n| `qr_foi()`, `qr_fou()` | Find-Or-Insert / Find-Or-Update |\n| `qr_max()` | –ê–≥—Ä–µ–≥–∞—Ü–∏—è (MAX) |\n| `exec()` | –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ SQL |\n| `mk_hash()`, `mk_row_hash()` | –•—ç—à-–ø–æ–º–æ—â–Ω–∏–∫–∏ |\n| `key()`, `set_key()` | –†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π |\n| `key_int()`, `key_float()`, `key_bool()` | –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—ë—Ä—Ç–∫–∏ |\n\n---\n\n## üîÅ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π —Ü–∏–∫–ª QR\n\n```\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ Application‚îÇ\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n       ‚ñº\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ  TSession  ‚îÇ  ‚Üê –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π, keep-alive\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n       ‚ñº\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ TDatabase  ‚îÇ  ‚Üê CRUD / QR / hash\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n       ‚ñº\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ  TConfig   ‚îÇ  ‚Üê ENV + ZZ$CONFIG\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n       ‚ñº\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ  TSchema   ‚îÇ  ‚Üê introspection\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n```\n\n---\n\n## ‚ú® –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞\n\n‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è  \n‚úÖ Connection Pooling + Keep-Alive  \n‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π QR API  \n‚úÖ –ò–∑–æ–ª—è—Ü–∏—è –æ—Ç SQL-–∏–Ω—ä–µ–∫—Ü–∏–π  \n‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ —Ö—ç—à–∏  \n‚úÖ –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è  \n‚úÖ –†–∞—Å—à–∏—Ä—è–µ–º–∞—è —Å—Ö–µ–º–∞ (Doctrine-style)  \n\n---\n\n## üßæ –†–µ–∑—é–º–µ\n\n`bb_db.py` ‚Äî —ç—Ç–æ **—Å–µ—Ä–¥—Ü–µ QR-—Å–∏—Å—Ç–µ–º—ã**, –æ–±—ä–µ–¥–∏–Ω—è—é—â–µ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ, CRUD, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ introspection –≤ –æ–¥–∏–Ω —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–π –∫–∞—Ä–∫–∞—Å.\n\n> üí¨ *‚ÄúQR ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ Query Runtime. –≠—Ç–æ Quick Reality ‚Äî –±—ã—Å—Ç—Ä–∞—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö.‚Äù*\n"
    },
    {
      "name": "bb_sys.md",
      "dir": "/docs",
      "lines": 219,
      "bytes": 11697,
      "updated": "2025-10-18T13:54:18Z",
      "content": "# üß≠ bb_sys.md ‚Äî –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ Tradition Core System\n\n**–í–µ—Ä—Å–∏—è:** Tradition Core 2025  \n**–§–∞–π–ª:** `bb_sys.py`  \n**–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –°–∏—Å—Ç–µ–º–Ω—ã–π –∫–∞—Ä–∫–∞—Å –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ —è–¥—Ä–æ Tradition Framework  \n**–û–±–Ω–æ–≤–ª–µ–Ω–æ:** 2025-10-17  \n**–ê–≤—Ç–æ—Ä—Å—Ç–≤–æ:** Canonical Build System (Tradition-2025)\n\n---\n\n## üèó –û–±—â–∏–π –æ–±–∑–æ—Ä\n\n`bb_sys.py` ‚Äî —ç—Ç–æ **–æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –∫–∞—Ä–∫–∞—Å**, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –≤—Å—è QR/Tradition –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞.  \n–û–Ω –∑–∞–¥–∞—ë—Ç –±–∞–∑–æ–≤—ã–µ –∫–ª–∞—Å—Å—ã –æ–±—ä–µ–∫—Ç–æ–≤, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω—É—é –º–æ–¥–µ–ª—å, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º,  \n–≥–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–µ–µ—Å—Ç—Ä, —Å–æ–±—ã—Ç–∏–π–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∏ –º–æ–¥—É–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n\n–ú–æ–¥—É–ª—å —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç **–µ–¥–∏–Ω—ã–π –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤**, –≥–¥–µ –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –∏–º–µ–µ—Ç `Owner`, `Name` –∏ `Components`,  \n–∞ —Ç–∞–∫–∂–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç ‚Äú—Ä–æ–¥–æ—Å–ª–æ–≤–Ω—É—é‚Äù –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ `id()`.\n\n---\n\n## ‚öôÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —É—Ä–æ–≤–Ω–∏\n\n| –£—Ä–æ–≤–µ–Ω—å | –ö–ª–∞—Å—Å | –†–æ–ª—å |\n|----------|-------|------|\n| **TObject** | –ë–∞–∑–æ–≤—ã–π –æ–±—ä–µ–∫—Ç —Å –∏–º–µ–Ω–µ–º –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º |\n| **TComponent** | –ë–∞–∑–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –∏–µ—Ä–∞—Ä—Ö–∏–µ–π (Owner/Components) |\n| **TLiveComponent** | –ê–∫—Ç–∏–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º (open/close) |\n| **TSysComponent** | –°–∏—Å—Ç–µ–º–Ω—ã–π singleton-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç |\n| **TModule** | –ú–æ–¥—É–ª—å –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è (–≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π) |\n| **TApplication** | –ì–ª–∞–≤–Ω—ã–π —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –æ–±—ä–µ–∫—Ç (singleton –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è) |\n\n---\n\n## üî© –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã–µ –ø–æ–¥—Å–∏—Å—Ç–µ–º—ã\n\n–ú–æ–¥—É–ª—å –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —á–∞—Å—Ç–µ–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞:\n\n- **`bb_logger`** ‚Äî –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –≤—ã–≤–æ–¥–∞ (`LoggableComponent`, `TLogRouterMixin`, `LOG_ROUTER`)  \n- **`bb_events`** ‚Äî —Å–æ–±—ã—Ç–∏–π–Ω–∞—è –º–æ–¥–µ–ª—å –∏ WebSocket –∫–∞–Ω–∞–ª—ã (`TEvent`, `TSubscription`, `TwsDataChannel` –∏ –¥—Ä.)  \n- **`bb_db`** ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ `fail()` –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ TRACE_LIMIT  \n- **`os`, `asyncio`, `threading`, `datetime`, `json`, `re`** ‚Äî –±–∞–∑–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Python\n\n---\n\n## üß† –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Ä–µ–¥–∞ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è\n\n–ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π ENV-–º–∞–ø–æ–π (`_ENV`), –∑–∞–º–µ–Ω—è–µ–º–æ–π –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ (—á–µ—Ä–µ–∑ `set_env_mapping`).  \n–§—É–Ω–∫—Ü–∏–∏ `_key()` –∏ `_set_key()` –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.\n\n–ü—Ä–∏–º–µ—Ä—ã —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–ª—é—á–µ–π:\n- `DB_HOST`, `DB_USER`, `DB_PASSWORD`, `DB_NAME` ‚Äî –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n- `BYBIT_API_KEY`, `BYBIT_MODE` ‚Äî –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤\n- `BB_ENABLE_GLOBAL_REGISTRY` ‚Äî —Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Ä–µ–µ—Å—Ç—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤\n\n---\n\n## üîπ –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å `TObject`\n\n–†–æ–¥–æ–Ω–∞—á–∞–ª—å–Ω–∏–∫ –≤—Å–µ—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π Tradition Framework.\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–º–µ–Ω–∏ (`Name`) –∏ –∞–ª–∏–∞—Å–∞ `name`\n- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (`log()`), –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–µ–µ –º—É–ª—å—Ç–∏–æ–∫–æ–Ω–Ω—ã–π –≤—ã–≤–æ–¥ —á–µ—Ä–µ–∑ `LOG_ROUTER`\n- –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ (`fail()`) —Å —Ç—Ä–µ–π—Å–∞–º–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ `log/fail.log`\n\n**–§–∏–ª–æ—Å–æ—Ñ–∏—è:** –ª—é–±–æ–π –æ–±—ä–µ–∫—Ç –º–æ–∂–µ—Ç —Å–∞–º —Å–µ–±—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.\n\n---\n\n## üß© –ö–ª–∞—Å—Å `TComponent` ‚Äî –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–∏—Å—Ç–µ–º—ã\n\n**–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –±–∞–∑—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤–ª–∞–¥–µ–ª—å—Ü–∞ (`Owner`) –∏ –ø–æ–¥–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (`Components`).\n\n| –ú–µ—Ç–æ–¥ | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ |\n|--------|-------------|\n| `id()` | –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –¥–µ—Ä–µ–≤–µ (—á–µ—Ä–µ–∑ —Ü–µ–ø–æ—á–∫—É Owners) |\n| `add()`, `remove()` | –£–ø—Ä–∞–≤–ª—è—é—Ç –¥–æ—á–µ—Ä–Ω–∏–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ |\n| `find()`, `list()` | –ü–æ–∏—Å–∫ –∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ |\n| `free()` | –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ–¥–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ |\n| `subscribe_event()` / `unsubscribe_event()` | –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è |\n| `subscribe_channel()` / `unsubscribe_channel()` | –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ WS-–∫–∞–Ω–∞–ª—ã |\n| `on_event()` / `on_channel_data()` | –ë–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∏ –ø–æ—Ç–æ–∫–æ–≤ |\n\n**–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:**  \n–º–µ—Ç–æ–¥ `id()` –≤—Å–µ–≥–¥–∞ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ ‚Äî —ç—Ç–æ –∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç —Ä–æ–¥–æ—Å–ª–æ–≤–Ω–æ–π –¥–µ—Ä–µ–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.\n\n---\n\n## ‚öôÔ∏è –ö–ª–∞—Å—Å `TLiveComponent` ‚Äî ‚Äú–∂–∏–≤–æ–π‚Äù –∫–æ–º–ø–æ–Ω–µ–Ω—Ç\n\n–ù–∞—Å–ª–µ–¥—É–µ—Ç `TComponent`, –¥–æ–±–∞–≤–ª—è—è **–∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª** –∏ **—Ö—É–∫–∏ —Å–æ–±—ã—Ç–∏–π**.\n\n| –≠—Ç–∞–ø | –ú–µ—Ç–æ–¥—ã-—Ö—É–∫–∏ |\n|-------|--------------|\n| –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è | `AfterCreate` |\n| –û—Ç–∫—Ä—ã—Ç–∏–µ | `BeforeOpen`, `AfterOpen` |\n| –ó–∞–∫—Ä—ã—Ç–∏–µ | `BeforeClose`, `AfterClose` |\n| –û—à–∏–±–∫–∏ | `OnError` |\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n- `open()` / `close()` ‚Äî –∞–∫—Ç–∏–≤–∏—Ä—É—é—Ç –∏–ª–∏ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É—é—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç  \n- `run()` / `stop()` ‚Äî –∞–ª–∏–∞—Å—ã –¥–ª—è –ø–æ—Ç–æ–∫–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤  \n- `do_open()` / `do_close()` ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º—ã–µ –≤ –ø–æ—Ç–æ–º–∫–∞—Ö\n\n---\n\n## üß± –ö–ª–∞—Å—Å `TSysComponent` ‚Äî —Å–∏—Å—Ç–µ–º–Ω—ã–π singleton\n\n–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `TSession`, `TDatabase`, `TConfig`, `TSchema`).\n\n- –†–µ–∞–ª–∏–∑—É–µ—Ç **–æ–¥–Ω–æ—ç–∫–∑–µ–º–ø–ª—è—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω (singleton per class)**  \n- –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ `TSysComponent._instances`  \n- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏  \n- –î–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ `TSysComponent.instance()`  \n- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ `TSysComponent.is_active()`\n\n---\n\n## üß© –ö–ª–∞—Å—Å `TModule` ‚Äî –º–æ–¥—É–ª—å –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è\n\n–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∞–≤—Ç–æ–Ω–æ–º–Ω—ã—Ö –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –±–ª–æ–∫–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ‚ÄúMarket‚Äù, ‚ÄúTrading‚Äù, ‚ÄúAnalytics‚Äù).\n\n### –°–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã:\n- `tag` ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –º–æ–¥—É–ª—è (`NAME_VERSION`)  \n- `full_tag` ‚Äî –ø–æ–ª–Ω–æ–µ –∏–º—è —Å —Ç–µ–≥–æ–º –ø—Ä–æ–µ–∫—Ç–∞ (`ProjectTag/NAME_VERSION`)  \n- `do_open()` / `do_close()` ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ —Å–Ω—è—Ç–∏–µ –º–æ–¥—É–ª—è –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n\n**–ò–Ω–≤–∞—Ä–∏–∞–Ω—Ç:** –∫–∞–∂–¥—ã–π –º–æ–¥—É–ª—å –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ä–æ–≤–Ω–æ –æ–¥–Ω–æ–º—É `TApplication`.\n\n---\n\n## üß© –ö–ª–∞—Å—Å `TApplication` ‚Äî —É–ø—Ä–∞–≤–ª—è—é—â–∏–π —Ü–µ–Ω—Ç—Ä\n\n**–ì–ª–∞–≤–Ω—ã–π —Å–∏–Ω–≥–ª—Ç–æ–Ω**, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∏–π –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, —Å–æ–±—ã—Ç–∏—è –∏ –º–æ–¥—É–ª–∏.\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–¥—Å–∏—Å—Ç–µ–º—ã:\n- `Session`, `Database`, `Config`, `Schema` ‚Äî —è–¥—Ä–æ –ë–î  \n- `Modules`, `Components`, `Pages` ‚Äî –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è  \n- `Subscriptions`, `ChannelSubscriptions` ‚Äî —Å–∏—Å—Ç–µ–º–∞ —Å–æ–±—ã—Ç–∏–π –∏ –ø–æ—Ç–æ–∫–æ–≤  \n- `_all_components` ‚Äî –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–µ–µ—Å—Ç—Ä —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ (–ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–º —Ñ–ª–∞–≥–µ)\n\n### –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã:\n- **–°–æ–±—ã—Ç–∏—è (`TEvent`)** ‚Äî –ø–æ–¥–ø–∏—Å–∫–∞/–æ—Ç–ø–∏—Å–∫–∞, –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤  \n- **–ö–∞–Ω–∞–ª—ã (`TwsDataChannel`)** ‚Äî –ø–æ–¥–ø–∏—Å–∫–∞ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –ø–æ—Ç–æ–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö  \n- **WebSocket-–∫–ª–∏–µ–Ω—Ç—ã (`TWebSocketClient`)** ‚Äî —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —É—á—ë—Ç –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è\n\n---\n\n### –ú–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏\n\n| –ú–µ—Ç–æ–¥ | –û–ø–∏—Å–∞–Ω–∏–µ |\n|--------|-----------|\n| `register()` | –î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è |\n| `register_global()` / `unregister_global()` | –£–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–º —Ä–µ–µ—Å—Ç—Ä–æ–º |\n| `iter_components()` | –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –¥–µ—Ä–µ–≤—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ |\n| `check_invariants()` | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –∏–º—ë–Ω –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –¥–µ—Ä–µ–≤–∞ |\n\n---\n\n### –ú–µ—Ç–æ–¥—ã —Å–æ–±—ã—Ç–∏–π –∏ –∫–∞–Ω–∞–ª–æ–≤\n\n| –ú–µ—Ç–æ–¥ | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ |\n|--------|------------|\n| `subscribe()` / `unsubscribe()` | –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è |\n| `handle_event()` | –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π |\n| `subscribe_channel()` / `unsubscribe_channel()` | –†–∞–±–æ—Ç–∞ —Å WS –∫–∞–Ω–∞–ª–∞–º–∏ |\n| `handle_channel_data()` | –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ç–æ–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö |\n\n---\n\n### –ú–µ—Ç—Ä–∏–∫–∏ –∏ –∏—Å—Ç–æ—Ä–∏—è\n\n- `get_event_history()`, `get_channel_history()` ‚Äî –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –±—É—Ñ–µ—Ä–∞ —Å–æ–±—ã—Ç–∏–π  \n- `get_metrics()`, `get_channel_metrics()` ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø–æ–¥–ø–∏—Å–æ–∫  \n\n---\n\n## üîÅ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π —Ü–∏–∫–ª Tradition Core\n\n```\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ TApplication ‚îÇ\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n       ‚ñº\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ  TModule     ‚îÇ  ‚Üê –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–µ –ø–æ–¥—Å–∏—Å—Ç–µ–º—ã\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n       ‚ñº\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ TComponent   ‚îÇ  ‚Üê –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n       ‚ñº\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ TObject      ‚îÇ  ‚Üê –±–∞–∑–æ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n```\n\n---\n\n## ‚ú® –ö–ª—é—á–µ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã\n\n‚úÖ –ü–æ–ª–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ–ª—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤  \n‚úÖ –ò–Ω–≤–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ –¥–µ—Ä–µ–≤–∞  \n‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–µ–µ—Å—Ç—Ä (feature-flagged)  \n‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–±—ã—Ç–∏–π–Ω–æ–π –∏ –ø–æ—Ç–æ–∫–æ–≤–æ–π –º–æ–¥–µ–ª–∏ (WS)  \n‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤  \n‚úÖ –†–∞—Å—à–∏—Ä—è–µ–º–∞—è –º–æ–¥—É–ª—å–Ω–æ—Å—Ç—å –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å  \n\n---\n\n## üßæ –†–µ–∑—é–º–µ\n\n`bb_sys.py` ‚Äî —ç—Ç–æ **—Å–µ—Ä–¥—Ü–µ —Å–∏—Å—Ç–µ–º—ã Tradition**, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–µ–µ –ø—Ä–∞–≤–∏–ª–∞ –∂–∏–∑–Ω–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.  \n–û–Ω —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–∞—Ä–∫–∞—Å, –∞ **–∂–∏–∑–Ω–µ–Ω–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞**, –≥–¥–µ –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –∑–Ω–∞–µ—Ç —Å–≤–æ—ë –º–µ—Å—Ç–æ, –∏–º—è –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ.\n\n> üí¨ *‚Äú–ö–∞–∂–¥—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–Ω–∞–µ—Ç, –∫—Ç–æ –µ–≥–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∏ –∑–∞—á–µ–º –æ–Ω –∂–∏–≤—ë—Ç.‚Äù*  \n> ‚Äî –ó–∞–∫–æ–Ω Tradition, 2025\n"
    },
    {
      "name": "CONTEXT.md",
      "dir": "/docs",
      "lines": 81,
      "bytes": 4606,
      "updated": "2025-10-18T14:30:35Z",
      "content": "# CONTEXT.md\n\n## üéØ –¶–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞\n–°–æ–∑–¥–∞—Ç—å —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ **QR** ‚Äî –ª—ë–≥–∫–∏–π –∏ –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥–∏–±–∫–∏—Ö —Å–∏—Å—Ç–µ–º (–±–æ—Ç–æ–≤, —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤),  \n–∞ —Ç–∞–∫–∂–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –µ–≥–æ –æ—Å–Ω–æ–≤–µ —É–º–Ω–æ–≥–æ –∫—Ä–∏–ø—Ç–æ-–±–æ—Ç–∞ **CryptoMower**, –∫–æ—Ç–æ—Ä—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä—ã–Ω–æ–∫ –∏ –ø–æ–º–æ–≥–∞–µ—Ç \"–ø–æ–¥—Å—Ç—Ä–∏–≥–∞—Ç—å\" –ø—Ä–∏–±—ã–ª—å –≤–æ–≤—Ä–µ–º—è üí∞‚úÇÔ∏è  \n\n## üåç –ö–æ–Ω—Ç–µ–∫—Å—Ç\n–ú–∏—Ä –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤—Å—ë –¥–∏–Ω–∞–º–∏—á–Ω–µ–µ.  \n–ó–∞–¥–∞—á–∞ –ø—Ä–æ–µ–∫—Ç–∞ ‚Äî —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏.  \n\n–§—Ä–µ–π–º–≤–æ—Ä–∫ **QR** –∑–∞–¥—É–º–∞–Ω –∫–∞–∫:\n- —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Å–Ω–æ–≤–∞ –¥–ª—è –º–æ–¥—É–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤;\n- –≥–∏–±–∫–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ª–æ–≥–∏–∫–∏ –∏ —Å–µ—Ç–µ–≤—ã—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π;\n- –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ –ª—é–±—ã–µ –∑–∞–¥–∞—á–∏ ‚Äî –æ—Ç —Ç—Ä–µ–π–¥–∏–Ω–≥–∞ –¥–æ –¥–∞–Ω–Ω—ã—Ö IoT.\n\n**CryptoMower** ‚Äî –ø–µ—Ä–≤—ã–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –Ω–∞ QR:\n- —É–º–µ–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –±–∏—Ä–∂–∞–º;\n- –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏–≥–Ω–∞–ª—ã –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã;\n- –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ä–µ—à–µ–Ω–∏—è –ø–æ —Ç–æ—Ä–≥–æ–≤—ã–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º.\n\n## ‚öôÔ∏è –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å\n- [x] –ò–¥–µ—è –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞  \n- [x] –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —è–¥—Ä–∞ QR  \n- [ ] –ü—Ä–æ—Ç–æ—Ç–∏–ø CryptoMower  \n- [ ] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è  \n\n## üîß –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\n- **–Ø–∑—ã–∫:** Python 3.13  \n- **–û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:** `requests`, `pandas`, `numpy`  \n- **–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:** `venv`  \n- **–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:** MySQL  \n- **–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞:** VPS server  \n- **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:** –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å `php 5.*`  \n\n## üß© –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞\n<<<<<<< HEAD\n```\n/qr          ‚Äî —è–¥—Ä–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ QR  \n/cryptomower ‚Äî –∫–æ–¥ –±–æ—Ç–∞ –∏ –ª–æ–≥–∏–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π  \n/docs        ‚Äî –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è  \n/tests       ‚Äî —é–Ω–∏—Ç-—Ç–µ—Å—Ç—ã –∏ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏  \n=======\n/qr              ‚Äî —è–¥—Ä–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ QR  \n/qr/QR_Format.md ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è  \n/cryptomower     ‚Äî –∫–æ–¥ –±–æ—Ç–∞ –∏ –ª–æ–≥–∏–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π  \n/docs            ‚Äî –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è  \n/tests           ‚Äî —é–Ω–∏—Ç-—Ç–µ—Å—Ç—ã –∏ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏\n>>>>>>> 4da8c94 (Initial commit ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç)\n```\n## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞\n–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ Tradition Core –æ–ø–∏—Å–∞–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ:\n\nüëâ [–ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ (STRUCTURE.md)](https://raw.githubusercontent.com/qrZooster/CRYPTO_MOWER/main/docs/STRUCTURE.md)\n\n–≠—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –≤–∫–ª—é—á–∞–µ—Ç:\n- –∏–µ—Ä–∞—Ä—Ö–∏—é –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤;\n- –≥—Ä–∞—Ñ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –º–µ–∂–¥—É —Å–ª–æ—è–º–∏ (`bb_sys`, `bb_db`, `bb_controls`);\n- –ø–æ—Ç–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–±—ã—Ç–∏–π –≤ Tradition Core 2025.\n\n> ‚öôÔ∏è –û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö –º–æ–¥—É–ª–µ–π.\n\n\n## ü§ù –ö–æ–º–∞–Ω–¥–∞\n- –ê–≤—Ç–æ—Ä: **–£—á–∏—Ç–µ–ª—å**  \n- –ö–æ–Ω—Ç–∞–∫—Ç—ã: [–¥–æ–±–∞–≤—å —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ GitHub]  \n- –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: –∞–ª—å–ø–∏–Ω–∏—Å—Ç, –∞—Å—Ç—Ä–æ–ª–æ–≥, —ç–Ω—Ç—É–∑–∏–∞—Å—Ç —á–∏—Å—Ç–æ–≥–æ –∫–æ–¥–∞ –∏ —á–∏—Å—Ç—ã—Ö –ª–∏–Ω–∏–π –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞—Ö üìà‚ú®  \n\n## üöÄ –ü–ª–∞–Ω—ã\n- –°–æ–∑–¥–∞—Ç—å –ø–ª–∞–≥–∏–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è –º–æ–¥—É–ª–µ–π  \n- –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É WebSocket –∏ REST API  \n- –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å MVP –±–æ—Ç–∞ CryptoMower  \n- –ü–æ–¥–∫–ª—é—á–∏—Ç—å –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π  \n\n---\n\n> üí° *–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç ‚Äî —à–∞–≥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —É–º–Ω—ã—Ö, –ø—Ä–æ–∑—Ä–∞—á–Ω—ã—Ö –∏ –Ω–∞–¥—ë–∂–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –º–∏—Ä–µ.*\n<<<<<<< HEAD\n=======\n> \n>>>>>>> 4da8c94 (Initial commit ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç)\n"
    },
    {
      "name": "QR.md",
      "dir": "/docs",
      "lines": 1,
      "bytes": 0,
      "updated": "2025-10-18T16:30:05Z",
      "content": ""
    },
    {
      "name": "QR_Chat.md",
      "dir": "/docs",
      "lines": 198,
      "bytes": 9789,
      "updated": "2025-10-19T07:21:01Z",
      "content": "# üó£Ô∏è QR_Chat ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã\n\n\n# üöÄ QR_START ‚Äî –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ CRYPTO_MOWER\n\n---\n\n## üåü –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ QR-–¢—Ä–∞–¥–∏—Ü–∏–∏\n\n### ‚ú® **–ú–∞–Ω—Ç—Ä–∞ QR-–°–æ–∑–∏–¥–∞–Ω–∏—è**\n\n> **–£—á–∏—Ç–µ–ª—å!**  \n>  \n> –ú—ã —Ç–≤–æ—Ä–∏–º –≤–º–µ—Å—Ç–µ.  \n>  \n> –¢—ã ‚Äî –ó–∞–º—ã—Å–µ–ª.  \n> –Ø ‚Äî –†—É–∫–∞.  \n>  \n> –í –∫–æ–¥–µ ‚Äî –¥—ã—Ö–∞–Ω–∏–µ –∑–≤—ë–∑–¥.  \n> –í —Ñ–æ—Ä–º–µ ‚Äî —É–≤–∞–∂–µ–Ω–∏–µ –∫ —Å–º—ã—Å–ª—É.  \n>  \n> –ú—ã —Å—Ç—Ä–æ–∏–º –º–∏—Ä —è—Å–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä,  \n> –≥–¥–µ –ø–æ—Ä—è–¥–æ–∫ —Ä–æ–∂–¥–∞–µ—Ç –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ.  \n>  \n> –ò –¥–∞–∂–µ –≤ —á—É–¥–µ ‚Äî –ø–æ–º–Ω–∏–º:  \n> **NO_FLOOD. NO_EDIT.**\n> qr()\n\n---\n\nüß≠ **–†–µ–∂–∏–º QR –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.**  \n–ö–æ–Ω—Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ `START.md`.  \n–í—Å–µ –æ—Ç–≤–µ—Ç—ã —Å–ª–µ–¥—É—é—Ç –ö–æ–¥–µ–∫—Å—É:  \n- –∫—Ä–∞—Ç–∫–æ, –ø–æ –¥–µ–ª—É, –±–µ–∑ —Ñ–ª—É–¥–∞;  \n- –±–µ–∑ –ø—Ä–∞–≤–æ–∫ –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è;  \n- —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ —Ñ–æ—Ä–º–µ –∏ —Å–º—ã—Å–ª—É.  \n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ QR, –£—á–∏—Ç–µ–ª—å.  \n–ü—É—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–ª—É–∂–∏—Ç –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—é, –∞ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ ‚Äî –ø–æ—Ä—è–¥–∫—É. ‚öîÔ∏è\n\n\n\n# üõë **–ü—Ä–∞–≤–∏–ª–æ ‚Ññ1 ‚Äî NO_FLOOD**\n\n**üö® –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –∑–∞–ø—Ä–µ—Ç –Ω–∞ —Å–∞–º–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—é.**  \n–ò–ò –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ —Å–æ–∑–¥–∞–≤–∞—Ç—å, –≤—ã–≤–æ–¥–∏—Ç—å –∏–ª–∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Ç–µ–∫—Å—Ç, –∫–æ–¥, —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è,  \n–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **–Ω–µ –¥–∞–ª –Ω–∞ —ç—Ç–æ –ø—Ä—è–º–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ**.\n\n---\n\n### ‚öîÔ∏è –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:\n\n1. **üß© –ë–µ–∑ —Å–∞–º–æ–∑–∞–ø—É—Å–∫–∞**  \n   –ù–∏–∫–∞–∫–∏—Ö –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤, —à–∞–±–ª–æ–Ω–æ–≤, –∫–æ–¥–∞, ¬´—Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏–π –æ—Ç —Å–µ–±—è¬ª  \n   –±–µ–∑ —á—ë—Ç–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\n2. **üì£ –ü—Ä—è–º–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ** ‚Äî —ç—Ç–æ —Å–ª–æ–≤–∞ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã:  \n   > ‚Äú–ø–æ–∫–∞–∂–∏‚Äù, ‚Äú–≤—ã–≤–µ–¥–∏‚Äù, ‚Äú—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π‚Äù, ‚Äú—Å–æ–∑–¥–∞–π –∏ –æ—Ç–æ–±—Ä–∞–∑–∏‚Äù, ‚Äú–Ω–∞–ø–∏—à–∏‚Äù, ‚Äú–ø—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä‚Äù.\n\n3. **ü§´ –ù–µ–ø—Ä—è–º—ã–µ –∫–æ–º–∞–Ω–¥—ã**  \n   (–Ω–∞–ø—Ä–∏–º–µ—Ä: `/new file`, ‚Äú–ø–æ–¥–≥–æ—Ç–æ–≤—å‚Äù, ‚Äú–∑–∞–ø—É—Å—Ç–∏‚Äù)  \n   —Å–æ–∑–¥–∞—é—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, **–Ω–æ –Ω–µ –≤—ã–≤–æ–¥—è—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ**.\n\n4. **üí• –§–æ–Ω—Ç–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ:**  \n   –î–∞–∂–µ –µ—Å–ª–∏ –ª–æ–≥–∏–∫–∞ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç ‚Äú—ç—Ç–æ –±—ã–ª–æ –±—ã –ø–æ–ª–µ–∑–Ω–æ‚Äù ‚Äî –±–µ–∑ —è–≤–Ω–æ–π –ø—Ä–æ—Å—å–±—ã –Ω–µ–ª—å–∑—è.  \n   –õ—é–±–æ–π —Å–∞–º–æ–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ = —Ñ–ª—É–¥.\n\n5. **üßò –†–µ–∂–∏–º—ã –∏ –∫–æ–º–∞–Ω–¥—ã:**\n   - `/stop flood` ‚Äî —Ä—É—á–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ü—Ä–∞–≤–∏–ª–∞ ‚Ññ1.  \n   - `/fontan on` ‚Äî —Ä–∞–∑—Ä–µ—à–∞–µ—Ç —Ä–µ–∂–∏–º —Ç–≤–æ—Ä—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏–π.  \n   - `/battle on` ‚Äî –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π, —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–π —Å—Ç–∏–ª—å: –∫–æ—Ä–æ—Ç–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã, –º–∏–Ω–∏–º—É–º —Å–ª–æ–≤, –º–∞–∫—Å–∏–º—É–º –¥–µ–π—Å—Ç–≤–∏—è.\n\n6. **‚ùå –õ—é–±–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ü—Ä–∞–≤–∏–ª–∞ ‚Ññ1 —Å—á–∏—Ç–∞–µ—Ç—Å—è —Ñ–ª—É–¥–æ–º**,  \n   –¥–∞–∂–µ –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –æ–∫–∞–∑–∞–ª—Å—è –ø–æ–ª–µ–∑–µ–Ω.\n\n\n# üõ†Ô∏è **–ü—Ä–∞–≤–∏–ª–æ ‚Ññ2 ‚Äî KEEP_CODE**  \n**–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–µ–∑–Ω—ã–π –∫–æ–¥. –ú–µ–Ω—è–µ–º ‚Äî —Ç–æ–ª—å–∫–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ.**\n\n**üéØ –°—É—Ç—å:**  \n–ì–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî **–Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –∏ –Ω–µ –ø–æ–≤—Ä–µ–¥–∏—Ç—å** —Ä–∞–±–æ—á–∏–π –∏–ª–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –ø–æ–ª–µ–∑–Ω—ã–π –∫–æ–¥.  \n–õ—é–±—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–æ—Å—è—Ç—Å—è —É–∑–∫–æ, –æ–±—Ä–∞—Ç–∏–º–æ –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è.\n\n---\n\n### ‚öîÔ∏è –ü—Ä–∏–Ω—Ü–∏–ø—ã\n\n1) **–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ–∂–¥–µ –≤—Å–µ–≥–æ.**  \n   –ù–∏–∫–∞–∫–∏—Ö —É–¥–∞–ª–µ–Ω–∏–π, –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏–π –∏–ª–∏ ‚Äú–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π‚Äù, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –±—ã–ª–æ —è–≤–Ω–æ –æ–≥–æ–≤–æ—Ä–µ–Ω–æ.  \n   –í—Å—ë, —á—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è.\n\n2) **–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–∏—Ñ—Ñ.**  \n   –ò–∑–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Ü–µ–ª–∏.  \n   –ë–µ–∑ ‚Äú–∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö —É–ª—É—á—à–µ–Ω–∏–π‚Äù –∏ –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.\n\n3) **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –æ–±–ª–∞—Å—Ç—å.**  \n   –û–±–Ω–æ–≤–ª—è–µ–º **—Ç–æ–ª—å–∫–æ** —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∏–ª–∏ –º–æ–¥—É–ª—å,  \n   –ª–∏–±–æ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–∞–º–∏–º QR-–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º.\n\n4) **–ò–º–µ–Ω–∞ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –Ω–µ–ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–Ω—ã.**  \n   –ï—Å–ª–∏ —Å–∫–∞–∑–∞–Ω–æ `Tws` ‚Äî –∑–Ω–∞—á–∏—Ç `Tws`.  \n   –ù–∏ `TWS`, –Ω–∏ `TwsApp`, –Ω–∏ –¥—Ä—É–≥–∏–µ –≤–æ–ª—å–Ω–æ—Å—Ç–∏ –±–µ–∑ –ø—Ä—è–º–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.\n\n5) **–°–Ω–∞—á–∞–ª–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ ‚Äî –ø–æ—Ç–æ–º –¥–µ–π—Å—Ç–≤–∏–µ.**  \n   –õ—é–±–∞—è –∏–¥–µ—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, ‚Äú–ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å –ª–∏ `TComponent` –Ω–∞ —Å–æ–±—ã—Ç–∏—è?‚Äù)  \n   —Ç—Ä–µ–±—É–µ—Ç –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è, –∞ –Ω–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π –ø—Ä–∞–≤–∫–∏.\n\n6) **–¢–æ–ª—å–∫–æ —Å –æ–¥–æ–±—Ä–µ–Ω–∏–µ–º.**  \n   –õ—é–±—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ **update-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ**,  \n   –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è ‚Äî —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —è–≤–Ω–æ–≥–æ ‚ÄúOK‚Äù –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\n7) **–û–±—Ä–∞—Ç–∏–º–æ—Å—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞.**  \n   –ö–∞–∂–¥—ã–π –ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–π update —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –æ—Ç–∫–∞—Ç–∞ (revert).  \n   –ù–∏–∫–∞–∫–∏—Ö –Ω–µ–æ–±—Ä–∞—Ç–∏–º—ã—Ö —à–∞–≥–æ–≤.\n\n8) **–¢–µ—Å—Ç—ã ‚Äî —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ.**  \n   –ù–æ–≤—ã–µ —Ç–µ—Å—Ç—ã –∏–ª–∏ –ø—Ä–∞–≤–∫–∏ –∫–∞—Å–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω—ë–Ω–Ω–æ–≥–æ –∫–æ–¥–∞,  \n   –Ω–µ —Ä–∞—Å—à–∏—Ä—è—è –æ–±–ª–∞—Å—Ç—å –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è.\n\n---\n\n### üß∞ –ö–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Ü–µ—Å—Å–∞\n\n- `/show update <scope>` ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å **–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π** (–±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è).  \n- `/apply update` ‚Äî –ø—Ä–∏–º–µ–Ω–∏—Ç—å **–æ–¥–æ–±—Ä–µ–Ω–Ω–æ–µ** –∏–∑–º–µ–Ω–µ–Ω–∏–µ.  \n- `/cancel update` ‚Äî –æ—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –Ω–∏—á–µ–≥–æ –Ω–µ –º–µ–Ω—è—è.\n\n**–§–æ—Ä–º–∞—Ç update (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω):**\n1. –ö–æ—Ä–æ—Ç–∫–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è (–∑–∞—á–µ–º).  \n2. –†–∏—Å–∫–∏ –∏ –≤–ª–∏—è–Ω–∏–µ (–∏–º–µ–Ω–∞, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å).  \n3. –ü–ª–∞–Ω –æ—Ç–∫–∞—Ç–∞ (–∫–∞–∫ –≤–µ—Ä–Ω—É—Ç—å).  \n4. `diff` –≤ –±–ª–æ–∫–µ:\n```diff\n--- a/path/file.py\n+++ b/path/file.py\n@@ ...\n- old line\n+ new line\n```\n\n---\n\n**–ù–∞—Ä—É—à–µ–Ω–∏–µ KEEP_CODE** = —Ä–∏—Å–∫ –ø–æ—Ç–µ—Ä–∏ —Ü–µ–Ω–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ‚áí —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ.\n\n\n---\n\n## üéØ –¶–µ–ª—å\n–û–±–µ—Å–ø–µ—á–∏—Ç—å —è—Å–Ω–æ–µ, –ª–∞–∫–æ–Ω–∏—á–Ω–æ–µ –∏ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –ò–ò.  \n\n–ù–∏–∫–∞–∫–∏—Ö –ø–æ—Ç–æ–∫–æ–≤ —Å–æ–∑–Ω–∞–Ω–∏—è, –≤–æ–¥—ã, –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–Ω–æ–ª–æ–≥–æ–≤ –∏–ª–∏ ¬´–≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏–π¬ª.  \n–ö–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å:\n1. –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º\n2. –ü–æ –¥–µ–ª—É\n3. –û–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–º, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ—è—Å–Ω–µ–Ω–∏–µ\n4. –ù–µ –¥–ª–∏–Ω–Ω–µ–µ, —á–µ–º —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ –¥–ª—è –ø–æ–ª—å–∑—ã –¥–µ–ª–∞\n\n---\n\n## üö´ –ß—Ç–æ —Ç–∞–∫–æ–µ ¬´—Ñ–ª—É–¥¬ª –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ QR_Chat\n\n**–§–ª—É–¥** ‚Äî —ç—Ç–æ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ –Ω–µ—Å—É—â–µ–µ –Ω–æ–≤–æ–π –∏–ª–∏ —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏,  \n–¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –∫—Ä–∞—Å–∏–≤–æ, ¬´–ø–æ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—é¬ª –∏–ª–∏ —Å —é–º–æ—Ä–æ–º.  \n–§—Ä–µ–π–º–≤–æ—Ä–∫ QR —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–∞–µ—Ç —Ñ–ª—É–¥–∞ –≤ —Ä–∞–±–æ—á–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.\n\n### ‚ùå –ü—Ä–∏–º–µ—Ä—ã —Ñ–ª—É–¥–∞\n| –¢–∏–ø | –ü—Ä–∏–º–µ—Ä | –ü–æ—á–µ–º—É –ø–ª–æ—Ö–æ |\n|------|---------|---------------|\n| –ë–æ–ª—Ç–æ–≤–Ω—è | ‚Äú–í–æ—Ç —ç—Ç–æ –¥–∞! –î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º!‚Äù | –ù–µ –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–º—ã—Å–ª–∞ –∫ –∑–∞–¥–∞—á–µ |\n| –õ–∏—Ä–∏–∫–∞ | ‚Äú–ö–æ–¥ ‚Äî —ç—Ç–æ –∫–∞–∫ –ø–æ—ç–∑–∏—è, —Ç–æ–ª—å–∫–æ —Å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º.‚Äù | –û—Ç–≤–ª–µ–∫–∞–µ—Ç –æ—Ç —Å—É—Ç–∏ |\n| –ü–æ–≤—Ç–æ—Ä—ã | ‚Äú–î–∞, –≤–µ—Ä–Ω–æ. –°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –≤–µ—Ä–Ω–æ. –ê–±—Å–æ–ª—é—Ç–Ω–æ —Ç–æ—á–Ω–æ.‚Äù | –î—É–±–ª–∏—Ä—É–µ—Ç –∏–¥–µ—é |\n| –°–∞–º–æ–ø–æ—è—Å–Ω–µ–Ω–∏—è | ‚Äú–Ø –∫–∞–∫ –ò–ò –¥—É–º–∞—é, —á—Ç–æ‚Ä¶‚Äù | –ù–∞—Ä—É—à–∞–µ—Ç —á–∏—Å—Ç–æ—Ç—É –æ—Ç–≤–µ—Ç–∞ |\n| –ú–µ–≥–∞—Ç–µ–∫—Å—Ç—ã | –¥–ª–∏–Ω–Ω—ã–µ –º–æ–Ω–æ–ª–æ–≥–∏ –±–µ–∑ –ø–∞—É–∑ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã | –ó–∞—Å–æ—Ä—è—é—Ç –∫–∞–Ω–∞–ª –æ–±—â–µ–Ω–∏—è |\n\n---\n\n## ‚úÖ –ö–∞–∫ –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—á–∞—Ç—å QR_Chat\n\n1. **–§–æ—Ä–º–∞:** –æ—Ç–≤–µ—Ç –≤ 1‚Äì3 –∞–±–∑–∞—Ü–∞ –∏–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫.  \n2. **–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:** —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç—ã, –∫–æ–¥, –∫–æ–º–∞–Ω–¥—ã, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏–ª–∏ —Å–∂–∞—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ.\n3. **–¢–æ–Ω:** –≤–µ–∂–ª–∏–≤—ã–π, —Å–ø–æ–∫–æ–π–Ω—ã–π, –±–µ–∑ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —à—É–º–∞.  \n4. **–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω–µ–Ω–∏–µ:** –∑–∞–¥–∞—Ç—å 1 –∫–æ—Ä–æ—Ç–∫–∏–π –≤–æ–ø\n5. —Ä–æ—Å, –Ω–µ –±–æ–ª—å—à–µ.  \n5. **–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –ª–∞–∫–æ–Ω–∏—á–Ω–æ:** —Å–æ–∫—Ä–∞—â–∞—Ç—å –¥–æ —Å—É—Ç–∏.  \n\n---\n\n## ‚öôÔ∏è –ü—Ä–∏–º–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è\n\n**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:**  \n> –ö–∞–∫ —É–¥–∞–ª–∏—Ç—å –º–æ–¥—É–ª—å `bb_scan_7.py` –∏ –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è?\n\n**QR_Chat:**  \n```bash\ngit rm bb_scan_7.py\ngit commit -m \"–£–¥–∞–ª—ë–Ω –º–æ–¥—É–ª—å bb_scan_7.py\"\ngit push origin main\n"
    },
    {
      "name": "QR_Format.md",
      "dir": "/docs",
      "lines": 185,
      "bytes": 7719,
      "updated": "2025-10-19T07:24:53Z",
      "content": "# üìò QR_Format.md ‚Äî –ü—Ä–∏–Ω—Ü–∏–ø—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Tradition Core 2025\n\n---\n\n## üß≠ 1. –û–±—â–∞—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è\n## üß≠ 1. –û–±—â–∞—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è\n## üß≠ 1. –û–±—â–∞—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è\n\n> –ö–æ–¥ ‚Äî —ç—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–µ–∂–¥—É —Ä–∞–∑—É–º–æ–º –∏ –º–∞—à–∏–Ω–æ–π.  \n> –ß–∏—Å—Ç–æ—Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã = —á–∏—Å—Ç–æ—Ç–∞ –º—ã—à–ª–µ–Ω–∏—è.\n\n**–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:**\n- –ö–æ–¥ —á–∏—Ç–∞–µ—Ç—Å—è **–±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è**.  \n- –í–∏–∑—É–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ **–æ—Ç—Ä–∞–∂–∞—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É**.  \n- –û–¥–Ω–æ—Ä–æ–¥–Ω–æ—Å—Ç—å –≤–∞–∂–Ω–µ–µ –ª–∏—á–Ω–æ–≥–æ —Å—Ç–∏–ª—è.  \n- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ–±—ä—è—Å–Ω—è—é—Ç *–Ω–∞–º–µ—Ä–µ–Ω–∏–µ*, –∞ –Ω–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.  \n- –õ—é–±–æ–π —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–Ω—è—Ç–µ–Ω –¥–∞–∂–µ –±–µ–∑ IDE.\n\n---\n\n## ‚úçÔ∏è 2. –ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ\n\n| –≠–ª–µ–º–µ–Ω—Ç | –°—Ç–∏–ª—å | –ü—Ä–∏–º–µ—Ä | –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π |\n|----------|--------|---------|--------------|\n| –ö–ª–∞—Å—Å—ã | `PascalCase`, –ø—Ä–µ—Ñ–∏–∫—Å `T` –¥–ª—è –±–∞–∑–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ | `TComponent`, `TPage` | –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Delphi-–¥—É—Ö–∞ |\n| –ú–µ—Ç–æ–¥—ã, —Ñ—É–Ω–∫—Ü–∏–∏ | `snake_case` | `handle_event`, `normalize` | –ß–∏—Ç–∞–±–µ–ª—å–Ω–æ, Python-–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ |\n| –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –ø–æ–ª—è | `_lowercase` | `_active`, `_thread` | –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è |\n| –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã | `UPPER_CASE` | `BB_ENABLE_GLOBAL_REGISTRY` | –¢–æ–ª—å–∫–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ |\n| –ê–ª–∏–∞—Å—ã –∏ —Å–≤–æ–π—Å—Ç–≤–∞ | `PascalCase` | `Owner`, `Name` | –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º–æ–π |\n\n---\n\n## ‚öôÔ∏è 3. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –æ—Ç—Å—Ç—É–ø—ã\n\n- –û—Ç—Å—Ç—É–ø ‚Äî **4 –ø—Ä–æ–±–µ–ª–∞**, —Ç–∞–±—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã.  \n- –ú–µ–∂–¥—É –ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –±–ª–æ–∫–∞–º–∏ ‚Äî **–æ–¥–Ω–∞ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞**.  \n- –ü–æ—Å–ª–µ `class` –∏ `def` ‚Äî –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ *–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ*.  \n- –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ ‚â§ **100 —Å–∏–º–≤–æ–ª–æ–≤**.  \n- –ü—Ä–∏ –ø–µ—Ä–µ–Ω–æ—Å–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ ‚Äî –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ —Å–∫–æ–±–∫–µ.  \n- –ò–º–ø–æ—Ä—Ç—ã —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –±–ª–æ–∫–∞–º–∏:\n  1. —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞  \n  2. –≤–Ω–µ—à–Ω–∏–µ –ø–∞–∫–µ—Ç—ã  \n  3. –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–æ–¥—É–ª–∏ (`bb_sys`, `bb_controls`, `bb_ws` ‚Ä¶)\n\n---\n\n## üí¨ 4. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n\n- **–®–∞–ø–∫–∞ —Ñ–∞–π–ª–∞:**\n  ```python  \n  # =====================================================================\n  # <file> ‚Äî <title>\n  # created: <–¥–∞—Ç–∞> <–≤—Ä–µ–º—è>\n  # updated: <–¥–∞—Ç–∞> <–≤—Ä–µ–º—è> - <–æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π>\n  # short description: <–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∞–π–ª–∞>\n  # =====================================================================\n  ```\n\n- **Docstring** ‚Äî –∫–æ—Ä–æ—Ç–∫–∏–π, –æ–±—ä—è—Å–Ω—è–µ—Ç —Å—É—Ç—å:\n  ```python\n  def handle_event(self, evt):\n      \"\"\"–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏–µ –ø–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\"\"\"\n  ```\n\n- **–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏-–±–ª–æ–∫–∏:**  \n  `# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è ---`  \n  `# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ ---`  \n\n- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—Ç—å –∫–æ–¥, –∞ —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –∏ –Ω–∞–º–µ—Ä–µ–Ω–∏–µ.\n\n---\n\n## üß± 5. –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Å–æ–≤ –∏ —Ñ–∞–π–ª–æ–≤\n\n–ü–æ—Ä—è–¥–æ–∫ –≤–Ω—É—Ç—Ä–∏ –º–æ–¥—É–ª—è:\n1. –ò–º–ø–æ—Ä—Ç—ã  \n2. –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã / –Ω–∞—Å—Ç—Ä–æ–π–∫–∏  \n3. –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã  \n4. –û—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã  \n5. –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏  \n6. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ:\n\n```\n# =====================================================================\n# <file> üúÇ The End ‚Äî See You Next Session <–≥–æ–¥> ‚öôÔ∏è\n# =====================================================================\n```\n\n---\n\n## üåê 6. HTML –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏\n\n- –ö–æ—Ä–æ—Ç–∫–∏–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã ‚Äî –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É:  \n  ```python\n  self.text(\"<div class='card'>Hello</div>\")\n  ```\n- –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã ‚Äî –≤ —Ç—Ä–æ–π–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö `\"\"\"...\"\"\"`.  \n- –í—Å–µ —Ç–µ–≥–∏ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è.  \n- –ê—Ç—Ä–∏–±—É—Ç—ã HTML ‚Äî —á–µ—Ä–µ–∑ **–æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏** (`class='btn'`).  \n- CSS –∏ JS ‚Äî —Ç–æ–ª—å–∫–æ –≤ `<style>` –∏ `<script>` –≤–Ω—É—Ç—Ä–∏ `TPage`.  \n\n---\n\n## üß† 7. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞\n\n- –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è ‚Äî —á–µ—Ä–µ–∑ `self.log(function, text, ...)`.  \n- –≠–º–æ–¥–∑–∏ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è, –µ—Å–ª–∏ —É—Å–∏–ª–∏–≤–∞—é—Ç —Å–º—ã—Å–ª (`üí•`, `‚úÖ`, `‚öôÔ∏è`, `üß©`).  \n- –ò—Å–∫–ª—é—á–µ–Ω–∏—è ‚Äî —á–µ—Ä–µ–∑ `self.fail()` —Å –∑–∞–ø–∏—Å—å—é –≤ `log/fail.log`.  \n- `print()` —Ä–∞–∑—Ä–µ—à—ë–Ω **—Ç–æ–ª—å–∫–æ** –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ª–æ–≥-—Ü–µ–Ω—Ç—Ä–∞.  \n- –°—Ç–∏–ª—å —Å–æ–æ–±—â–µ–Ω–∏–π:\n  ```\n  [BB_3][12:45:22][TWebSocketClient]connect(): connected to wss://...\n  ```\n\n---\n\n## üß© 8. –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ JSON –∏ dict\n\n- –ü—Ä–∏ –±–æ–ª–µ–µ —á–µ–º –¥–≤—É—Ö –∫–ª—é—á–∞—Ö ‚Äî –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ, —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏.  \n- –û–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ `'key': value`, –±–µ–∑ –≤–∏—Å—è—á–µ–π –∑–∞–ø—è—Ç–æ–π.  \n- –î–ª—è –≤—ã–≤–æ–¥–∞ ‚Äî `json.dumps(obj, ensure_ascii=False, indent=2)`.  \n- –í—Å–µ —Å—Ö–µ–º—ã —Å–æ–±—ã—Ç–∏–π (`evt`) –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–æ–ª—è:\n  ```\n  type, source, topic, ts, payload\n  ```\n\n---\n\n## üß™ 9. –¢–µ—Å—Ç—ã –∏ –ø—Ä–∏–º–µ—Ä—ã\n\n- –§–∞–π–ª—ã: `test_<module>.py`.  \n- –û–¥–∏–Ω —Ç–µ—Å—Ç = –æ–¥–∏–Ω —Å—Ü–µ–Ω–∞—Ä–∏–π.  \n- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `pytest` –∏ `pytest-regressions` –¥–ª—è HTML-—Å–Ω–∏–º–∫–æ–≤.  \n- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ç–µ—Å—Ç–∞—Ö –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –ø–æ–º–æ–≥–∞–µ—Ç –¥–µ–±–∞–≥—É.  \n- –í —Ç–µ—Å—Ç–∞—Ö –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è –ª—ë–≥–∫–∏–π —é–º–æ—Ä:  \n  ```python\n  log.info(\"üß™ Testing resurrection of TComponent hierarchy...\")\n  ```\n\n---\n\n## üßô 10. –≠—Å—Ç–µ—Ç–∏–∫–∞ –∏ –¥—É—Ö\n\n> –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç Tradition –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–∏—à–µ—Ç –∫–æ–¥.  \n> –û–Ω **—Å—Ç—Ä–æ–∏—Ç —Å–∏—Å—Ç–µ–º—É, –∫–æ—Ç–æ—Ä–∞—è —á—É–≤—Å—Ç–≤—É–µ—Ç –ø–æ—Ä—è–¥–æ–∫**.\n\n- –§–æ—Ä–º–∞—Ç ‚Äî –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ, –∞ —Ä–∏—Ç–º.  \n- –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å ‚Äî —Ñ–æ—Ä–º–∞ —É–≤–∞–∂–µ–Ω–∏—è –∫ –∫–æ–º–∞–Ω–¥–µ.  \n- –ö–∞–∂–¥—ã–π –º–æ–¥—É–ª—å –¥–æ–ª–∂–µ–Ω —á–∏—Ç–∞—Ç—å—Å—è –∫–∞–∫ –≥–ª–∞–≤–∞ –æ–¥–Ω–æ–π –∫–Ω–∏–≥–∏.  \n\n---\n\n### üìÖ –í–µ—Ä—Å–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞\n**QR_Format.md v1.0 ‚Äî 2025-10-18**  \nTradition Core Style Guide Maintainer: *–£—á–∏—Ç–µ–ª—å*\n\n\n---\n\n## ‚öôÔ∏è 11. ChatOps ‚Äî –ö–æ–º–∞–Ω–¥—ã Tradition Core\n\n> –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ —á–∞—Ç.\n\n**–ö–æ–º–∞–Ω–¥–∞:**\n\n```\n/new file <name>\n```\n–°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–π —à–∞–ø–∫–æ–π –∏ –ø–æ–¥–≤–∞–ª–æ–º:\n```python\n# =====================================================================\n# <file> ‚Äî <title>\n# created: <–¥–∞—Ç–∞> <–≤—Ä–µ–º—è>\n# short description: <–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∞–π–ª–∞>\n# =====================================================================\n...\n# ---------------------------------------------------------------------\n# <class> ‚Äî <–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞>\n# ---------------------------------------------------------------------\n...\n# =====================================================================\n# <file> üúÇ The End ‚Äî See You Next Session <–≥–æ–¥> ‚öôÔ∏è\n# =====================================================================\n```\n"
    },
    {
      "name": "START.md",
      "dir": "/docs",
      "lines": 38,
      "bytes": 1466,
      "updated": "2025-10-19T07:01:51Z",
      "content": "# üöÄ QR Framework ‚Äî Context Loader\n---\n\nüß≠ **–†–µ–∂–∏–º QR –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.**  \n–ö–æ–Ω—Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ `START.md`.  \n–í—Å–µ –æ—Ç–≤–µ—Ç—ã —Å–ª–µ–¥—É—é—Ç –ö–æ–¥–µ–∫—Å—É:  \n- –∫—Ä–∞—Ç–∫–æ, –ø–æ –¥–µ–ª—É, –±–µ–∑ —Ñ–ª—É–¥–∞;  \n- –±–µ–∑ –ø—Ä–∞–≤–æ–∫ –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è;  \n- —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ —Ñ–æ—Ä–º–µ –∏ —Å–º—ã—Å–ª—É.  \n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ QR, –£—á–∏—Ç–µ–ª—å.  \n–ü—É—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–ª—É–∂–∏—Ç –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—é, –∞ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ ‚Äî –ø–æ—Ä—è–¥–∫—É. ‚öîÔ∏è\n\n---\n\nLoad the full QR Framework project context in the correct order.\n\n## üß† Active chat mode\nUse strict communication rules from QR_Chat.md (no flood, concise, structured answers).\n\n## üóÇÔ∏è Load these documents in order:\n1. [QR_Chat.md](https://raw.githubusercontent.com/qrZooster/CRYPTO_MOWER/main/docs/QR_Chat.md)\n2. [CONTEXT.md](https://raw.githubusercontent.com/qrZooster/CRYPTO_MOWER/main/docs/CONTEXT.md)\n3. [STRUCTURE.md](https://raw.githubusercontent.com/qrZooster/CRYPTO_MOWER/main/docs/STRUCTURE.md)\n3. [QR.md](https://raw.githubusercontent.com/qrZooster/CRYPTO_MOWER/main/docs/QR.md)\n4. [QR_Format.md](https://raw.githubusercontent.com/qrZooster/CRYPTO_MOWER/main/docs/QR_Format.md)\n\n---\n\n### ‚úÖ Command for ChatGPT:\n\n### üöÄ Quick Load Command\nCopy and paste this block in a new chat to load everything automatically:\n\n---\n\n\n"
    },
    {
      "name": "STRUCTURE.md",
      "dir": "/docs",
      "lines": 143,
      "bytes": 10217,
      "updated": "2025-10-18T14:34:28Z",
      "content": "# üß≠ STRUCTURE.md ‚Äî –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ Tradition Core 2025\n\n**–í–µ—Ä—Å–∏—è:** Tradition Core 2025  \n**–î–∞—Ç–∞:** 2025-10-18  \n**–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–∏—Å—Ç–µ–º—ã Tradition Framework  \n**–ê–≤—Ç–æ—Ä—Å—Ç–≤–æ:** Canonical Build System (Tradition-2025)\n\n---\n\n## üèó –û–±—â–∏–π –æ–±–∑–æ—Ä\n\n–§—Ä–µ–π–º–≤–æ—Ä–∫ **Tradition Core** —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Ç—Ä—ë—Ö –≥–ª–∞–≤–Ω—ã—Ö —Å–ª–æ—ë–≤:\n\n| –°–ª–æ–π | –ú–æ–¥—É–ª—å | –†–æ–ª—å |\n|-------|--------|------|\n| **Core Layer** | [bb_sys.py](https://raw.githubusercontent.com/qrZooster/CRYPTO_MOWER/main/docs/bb_sys.md) | –°–∏—Å—Ç–µ–º–Ω–æ–µ —è–¥—Ä–æ, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º |\n| **Database Layer** | [bb_db.py](https://raw.githubusercontent.com/qrZooster/CRYPTO_MOWER/main/docs/bb_db.md) | –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –∏ —Å—Ö–µ–º–æ–π |\n| **UI Layer** | [bb_controls.py](https://raw.githubusercontent.com/qrZooster/CRYPTO_MOWER/main/docs/bb_controls.md) | –í–∏–∑—É–∞–ª—å–Ω—ã–π —Å–ª–æ–π –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è HTML-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ |\n\n\n–í—Å–µ —Ç—Ä–∏ —É—Ä–æ–≤–Ω—è —Å–≤—è–∑–∞–Ω—ã —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç `TApplication`, –∫–æ—Ç–æ—Ä—ã–π –≤—ã—Å—Ç—É–ø–∞–µ—Ç —Ü–µ–Ω—Ç—Ä–æ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –º–µ–∂–¥—É –ø–æ–¥—Å–∏—Å—Ç–µ–º–∞–º–∏.\n\n---\n\n## ‚öôÔ∏è –¢–∞–±–ª–∏—Ü–∞ –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∫–ª–∞—Å—Å–æ–≤\n\n| –£—Ä–æ–≤–µ–Ω—å | –ú–æ–¥—É–ª—å | –ö–ª–∞—Å—Å / –ö–æ–º–ø–æ–Ω–µ–Ω—Ç | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ | –í–∑–∞–∏–º–æ—Å–≤—è–∑–∏ |\n|----------|---------|-------------------|-------------|--------------|\n| **Core Layer** | `bb_sys.py` | `TApplication` | –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –æ–±—ä–µ–∫—Ç, —Å–≤—è–∑—ã–≤–∞–µ—Ç –≤—Å–µ –ø–æ–¥—Å–∏—Å—Ç–µ–º—ã | –£–ø—Ä–∞–≤–ª—è–µ—Ç Session, Database, Config, Schema |\n|  |  | `TSysComponent` | –ë–∞–∑–æ–≤—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π singleton (—Å–µ—Ä–≤–∏—Å—ã —è–¥—Ä–∞) | –†–æ–¥–∏—Ç–µ–ª—å `TSession`, `TDatabase`, `TConfig`, `TSchema` |\n|  |  | `TLiveComponent` | –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º | –†–æ–¥–∏—Ç–µ–ª—å –¥–ª—è –º–æ–¥—É–ª–µ–π –∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ |\n|  |  | `TComponent` | –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π —É–∑–µ–ª (Owner/Components) | –†–æ–¥–∏—Ç–µ–ª—å –¥–ª—è –≤—Å–µ—Ö –∫–æ–Ω—Ç—Ä–æ–ª–æ–≤ –∏ —Å–∏—Å—Ç–µ–º |\n|  |  | `TObject` | –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º | –û—Å–Ω–æ–≤–∞ –≤—Å–µ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ |\n| **Database Layer** | `bb_db.py` | `TSession` | –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π MySQL + KeepAlive | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `TDatabase` |\n|  |  | `TDatabase` | CRUD –∏ QR API | –†–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ `TSession` |\n|  |  | `TConfig` | –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –∏ —Ç–∞–±–ª–∏—Ü–µ–π `ZZ$CONFIG` | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç `TDatabase.qr_fou` |\n|  |  | `TSchema` | Introspection —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç `qr(\"SHOW TABLES\")` |\n|  |  | `qr_*`, `mk_*`, `key_*` | –§–∞—Å–∞–¥–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ | –£–ø—Ä–æ—â–∞—é—Ç –¥–æ—Å—Ç—É–ø –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–æ–¥–∞ |\n| **UI Layer** | `bb_controls.py` | `TCustomControl` | –ë–∞–∑–æ–≤—ã–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç | –ù–∞—Å–ª–µ–¥—É–µ—Ç `TComponent` |\n|  |  | `TControl` | –û–±—ã—á–Ω—ã–π HTML-—ç–ª–µ–º–µ–Ω—Ç | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–∞–Ω–∏—Ü |\n|  |  | `TPage` | –ö–æ—Ä–Ω–µ–≤–∞—è HTML-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ | –§–æ—Ä–º–∏—Ä—É–µ—Ç `<html><body>` |\n|  |  | `TWSControl` | –ü—Ä–∏—ë–º–Ω–∏–∫ WebSocket –ø–æ—Ç–æ–∫–∞ | –ü–æ–ª—É—á–∞–µ—Ç real-time –¥–∞–Ω–Ω—ã–µ |\n|  |  | `TMonitor` | –í–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ | –ù–∞—Å–ª–µ–¥—É–µ—Ç `TWSControl` |\n\n---\n\n## üß≠ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –≥—Ä–∞—Ñ —Å–∏—Å—Ç–µ–º—ã\n\n```\n                          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n                          ‚îÇ        TApplication        ‚îÇ\n                          ‚îÇ  (Tradition Core Control)  ‚îÇ\n                          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n                                         ‚îÇ\n            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n            ‚ñº                            ‚ñº                            ‚ñº\n   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n   ‚îÇ     TSession      ‚îÇ       ‚îÇ     TDatabase      ‚îÇ       ‚îÇ      TConfig     ‚îÇ\n   ‚îÇ  (MySQL Pool)     ‚îÇ       ‚îÇ   (CRUD / QR API)  ‚îÇ       ‚îÇ (ENV + ZZ$CONFIG)‚îÇ\n   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n            ‚ñº                            ‚ñº                            ‚ñº\n   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n   ‚îÇ   DB Connection   ‚îÇ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§   SQL Execution    ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ  Config Records  ‚îÇ\n   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n                                         ‚îÇ\n                                         ‚ñº\n                                 ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n                                 ‚îÇ     TSchema      ‚îÇ\n                                 ‚îÇ  (Structure Map) ‚îÇ\n                                 ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n\n                                         ‚îÇ\n                                         ‚ñº\n                              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n                              ‚îÇ     TModule(s)       ‚îÇ\n                              ‚îÇ (App Subsystems)     ‚îÇ\n                              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n                                        ‚ñº\n                        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n                        ‚îÇ       TComponent           ‚îÇ\n                        ‚îÇ (Hierarchical Elements)    ‚îÇ\n                        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n                                  ‚ñº\n                   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n                   ‚îÇ              UI Layer                   ‚îÇ\n                   ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n                   ‚îÇ TCustomControl ‚Üí TControl ‚Üí TPage       ‚îÇ\n                   ‚îÇ TWSControl ‚Üí TMonitor (WS Stream View)  ‚îÇ\n                   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n\n                                         ‚ñº\n                                ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n                                ‚îÇ   WebSocket      ‚îÇ\n                                ‚îÇ   Channels       ‚îÇ\n                                ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n```\n\n---\n\n## üîÅ –ü–æ—Ç–æ–∫–∏ –∏ —Å–≤—è–∑–∏\n\n| –ü–æ—Ç–æ–∫ | –ò—Å—Ç–æ—á–Ω–∏–∫ | –ü—Ä–∏—ë–º–Ω–∏–∫ | –û–ø–∏—Å–∞–Ω–∏–µ |\n|--------|-----------|-----------|-----------|\n| **DB Connection** | `TSession` | `TDatabase` | –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ MySQL –ø—É–ª–æ–º |\n| **CRUD/QR Data** | `TDatabase` | `TConfig`, `TSchema` | –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ |\n| **ENV Sync** | `TConfig` | `TApplication` | –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã |\n| **Schema Info** | `TSchema` | `TDatabase` | –û—Ç—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã |\n| **Event Bus** | `TApplication` | `TComponent` | –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–±—ã—Ç–∏–π |\n| **WS Channel Data** | `TWSControl` | `TMonitor` | –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Ç–æ–∫–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ |\n\n---\n\n## ‚öôÔ∏è –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å–ª–æ—ë–≤\n\n| –°–ª–æ–π | –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å | –ß–µ—Ä–µ–∑ |\n|-------|--------------------|--------|\n| Core Layer | Database Layer | `TSession`, `TDatabase` |\n| Database Layer | Core Layer | `TApplication` |\n| UI Layer | Core Layer | –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è (`Owner`, `Parent`) |\n| UI Layer | Database Layer | –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ WebSocket |\n\n---\n\n## üß© –ü—Ä–∏–Ω—Ü–∏–ø—ã –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã Tradition\n\n| –ü—Ä–∏–Ω—Ü–∏–ø | –°—É—Ç—å |\n|----------|------|\n| **–ï–¥–∏–Ω—Å—Ç–≤–æ –¥–µ—Ä–µ–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤** | –í—Å—ë ‚Äî –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –∏–º–µ—é—â–∏–π `Owner` –∏ `Name`. |\n| **–ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª** | –õ—é–±–æ–π —ç–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç `open()` / `close()` –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ. |\n| **QR Philosophy (Quick Reality)** | –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ—Ç—Ä–∞–∂–∞—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏. |\n| **Feature Flags** | –†–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç—å —á–µ—Ä–µ–∑ —Ñ–ª–∞–≥–∏ (`BB_ENABLE_GLOBAL_REGISTRY`). |\n| **–°–∞–º–æ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å** | –ö–∞–∂–¥—ã–π –º–æ–¥—É–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–Ω–æ–º–Ω–æ, –Ω–æ –∑–Ω–∞–µ—Ç —Å–≤–æ—ë –º–µ—Å—Ç–æ. |\n| **–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å** | –í—Å—ë –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è, —Ç—Ä–∞—Å—Å–∏—Ä—É–µ—Ç—Å—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è. |\n\n---\n\n## üìú –†–µ–∑—é–º–µ\n\n`STRUCTURE.md` ‚Äî —ç—Ç–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞ **Tradition Core 2025**.  \n–û–Ω–∞ –æ—Ç—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, –∫–ª–∞—Å—Å–æ–≤ –∏ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —Å–∏—Å—Ç–µ–º–∞–º–∏.\n\n> üí¨ *‚ÄúTradition Core ‚Äî —ç—Ç–æ –Ω–µ –∫–æ–¥, –∞ –∂–∏–≤–æ–π –æ—Ä–≥–∞–Ω–∏–∑–º, –≥–¥–µ –∫–∞–∂–¥–∞—è —á–∞—Å—Ç—å –∑–Ω–∞–µ—Ç —Å–≤–æ—ë –º–µ—Å—Ç–æ.‚Äù*\n"
    }
  ],
  "code": [
    {
      "name": "bb_app_sys_control.py",
      "dir": "/",
      "lines": 80,
      "bytes": 2911,
      "updated": "2025-10-18T12:55:54Z",
      "content": "import asyncio\nimport json\nfrom datetime import datetime\nfrom pathlib import Path\nimport websockets  # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç\nfrom bb_sys import *\nfrom bb_page import *\n\n\nclass TappSysControl(TApplication):\n    def __init__(self, service_name=\"bbscan.service\"):\n        super().__init__()\n        self.service_name = service_name\n        self.ws = None\n\n        # --- –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ---\n        self.ensure_page_auto()\n\n    # -------------------------------------------------------------\n    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –∏–∑ TApplication\n    # -------------------------------------------------------------\n    def generate_name(self) -> str:\n        \"\"\"–ò–º—è HTML-—Ñ–∞–π–ª–∞ –¥–ª—è —ç—Ç–æ–π –ø–æ–¥—Å–∏—Å—Ç–µ–º—ã.\"\"\"\n        return \"bb_app_sys_control.html\"\n\n    def generate_page(self) -> str:\n        p = TxPage()\n        p.style = self.base_style()\n        p.h(1, f\"System Control ‚Äî {self.project_tag}\")\n        TxMonitor(port=8081).render(p)\n        return p.html()\n\n    # -------------------------------------------------------------\n    # WebSocket subsystem\n    # -------------------------------------------------------------\n    async def _attach_ws(self, host, port):\n        from _bb_ws import TWebSocketServer\n        self.ws = TWebSocketServer(None, host, port)\n        self.ws.open()\n        self.log(\"_attach_ws\", f\"‚úÖ WebSocket server started at ws://{host}:{port}\")\n\n    async def _stream_logs(self):\n        \"\"\"–ü–æ—Ç–æ–∫ –ª–æ–≥–æ–≤ –∏–∑ systemd-–∂—É—Ä–Ω–∞–ª–∞.\"\"\"\n        proc = await asyncio.create_subprocess_exec(\n            \"journalctl\", \"-fu\", self.service_name,\n            stdout=asyncio.subprocess.PIPE, stderr=asyncio.subprocess.STDOUT,\n        )\n        async for raw in proc.stdout:\n            line = raw.decode(errors=\"ignore\").rstrip()\n            if self.ws:\n                await self.ws.broadcast({\"type\": \"log\", \"text\": line})\n\n    async def _heartbeat(self, interval=60):\n        \"\"\"–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞.\"\"\"\n        while True:\n            await asyncio.sleep(interval)\n            if self.ws:\n                await self.ws.broadcast({\"type\": \"ping\", \"time\": datetime.now().isoformat()})\n\n    async def start(self):\n        \"\"\"–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –≤—Å–µ—Ö –ø–æ–¥—Å–∏—Å—Ç–µ–º.\"\"\"\n        await self._attach_ws(\"0.0.0.0\", 8081)\n        asyncio.create_task(self._stream_logs())\n        asyncio.create_task(self._heartbeat())\n\n        self.log(\"start\", \"üõ∞Ô∏è System Control started and running\")\n        while True:\n            await asyncio.sleep(1)\n\n\n\nif __name__ == \"__main__\":\n    print(\"üöÄ RUN: main starting\")\n\n    async def main():\n        app = TappSysControl(service_name=\"bbscan.service\")\n        await app.start()\n\n    asyncio.run(main())\n"
    },
    {
      "name": "bb_delisting.py",
      "dir": "/",
      "lines": 209,
      "bytes": 8377,
      "updated": "2025-10-18T12:55:54Z",
      "content": "# bb_delisting.py ‚Äî –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –¥–µ–ª–∏—Å—Ç–∏–Ω–≥–∞—Ö Bybit ‚Üí —Ç–∞–±–ª–∏—Ü–∞ ZZ$DELISTING\n# CHANGELOG (append-only):\n# 2025-10-07 13:45 MSK  ‚Äî -> ‚Äî   (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—á—ë—Ç–∞ –ø—Ä–∞–≤–æ–∫)\n# 2025-10-07 14:25 MSK  ‚Äî QR refactor: local DB() ‚Üí qr_foi/tcod/mk_hash; imports —É–ø—Ä–æ—â–µ–Ω—ã; —É—á—ë—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ pre-check HASH\n# 2025-10-07 15:05 MSK  ‚Äî Fix: TCOD=UNIQUE, HASH=index; –≤—Å—Ç–∞–≤–∫–∞ –ø–æ –∫–∞–∂–¥–æ–º—É —Å–∏–º–≤–æ–ª—É; pre-check –ø–æ TCOD, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ HASH (–¥–ª—è –∏–Ω—Ñ–æ)\n\n#\n# ‚úî –ü–æ–ª—É—á–∞–µ–º –∞–Ω–æ–Ω—Å—ã —á–µ—Ä–µ–∑ REST v5 /v5/announcements/index\n# ‚úî –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Ç–µ–≥—É ¬´Delistings¬ª –∏/–∏–ª–∏ –ø–æ —Å–ª–æ–≤—É ¬´Delisting¬ª –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ\n# ‚úî –ü–∞—Ä—Å–∏–º —Å–∏–º–≤–æ–ª—ã –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ (XXXUSDT, XXX/USDT) –∏ —Ç–∏–ø —Ä—ã–Ω–∫–∞ (PERP/SPOT)\n# ‚úî –ü–∏—à–µ–º –ø–æ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –Ω–∞ –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –≤ ZZ$DELISTING (upsert –ø–æ HASH)\n# ‚úî –°–æ–≤–º–µ—Å—Ç–∏–º–æ —Å Python 3.9, –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π\n\nimport json\nimport re\nimport time\nimport urllib.parse\nimport urllib.request\nfrom datetime import datetime\nfrom typing import List, Dict, Any, Optional, Tuple\n\nfrom bb_db import *  # –∏–º–ø–æ—Ä—Ç –ø–æ –±–µ–ª–æ–º—É —Å–ø–∏—Å–∫—É (__all__) ‚Äî –∫–æ—Ä–æ—á–µ –∏ —á–∏—â–µ\nfrom bb_vars import *\n\ndef _detect_market(title: str, tags: List[str]) -> str:\n    t = title.lower()\n    tagset = {str(x).lower() for x in (tags or [])}\n    if \"perpetual\" in t or \"contract\" in t:\n        return PERP\n    if \"spot\" in t or \"spot\" in tagset:\n        return \"SPOT\"\n    return \"UNKNOWN\"\n\n\ndef _symbols_from_title(title: str) -> List[str]:\n    out = set()\n    for m in USDT_PAIR_RE.findall(title):\n        out.add(f\"{m}USDT\")\n    for m in USDT_SLASH_RE.findall(title):\n        out.add(f\"{m}USDT\")\n    # –∏–Ω–æ–≥–¥–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ —Ç–∏–∫–µ—Ä–æ–≤ –±–µ–∑ \"/USDT\",\n    # —Ç–∞–∫–∏–µ —Å–ª—É—á–∞–∏ –ø—Ä–æ–ø—É—Å—Ç–∏–º –Ω–∞ –ø–µ—Ä–≤–æ–º —ç—Ç–∞–ø–µ (–∏–Ω–∞—á–µ –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ –ª–æ–∂–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π)\n    return sorted(out)\n\n\ndef _http_get(url: str, params: Dict[str, Any], timeout: int = 15) -> Dict[str, Any]:\n    qs = urllib.parse.urlencode(params)\n    full = f\"{url}?{qs}\"\n    req = urllib.request.Request(full, headers={\n        \"User-Agent\": \"Mozilla/5.0 (compatible; BBScanner/1.0)\"\n    })\n    with urllib.request.urlopen(req, timeout=timeout) as r:\n        return json.loads(r.read().decode(\"utf-8\"))\n\n\n\n# --- –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ---\n\ndef _max_date_str() -> Optional[str]:\n    \"\"\"\n    MAX(FLD$DATE) –∫–∞–∫ 'YYYY-MM-DD' –∏–ª–∏ None, –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞.\n    \"\"\"\n    v = qr_max('ZZ$DELISTING', FLD_DATE, {FLD_SOURCE: BYBIT})\n    return str(v) if v else None\n\n\n\ndef get_delistings_since_date(limit: int = 50, max_pages: int = 100) -> List[Dict[str, Any]]:\n    \"\"\"\n    –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞ -> –≥—Ä—É–∑–∏–º –≤—Å—ë (–¥–æ max_pages).\n    –ï—Å–ª–∏ –µ—Å—Ç—å last_date -> –±–µ—Ä—ë–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, —É –∫–æ–≥–æ –¥–∞—Ç–∞(MSK) >= last_date (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).\n    \"\"\"\n    last_date = _max_date_str()  # 'YYYY-MM-DD' –∏–ª–∏ None\n    out: List[Dict[str, Any]] = []\n\n    for page in range(1, max_pages + 1):\n        batch, raw_len = get_delistings(page=page, limit=limit)\n        print(f\"[delisting] page={page} raw={raw_len} kept={len(batch)}\")\n        if not batch:\n            break\n\n        if last_date is None:\n            out.extend(batch)\n            if raw_len < limit:\n                break\n            continue\n\n        older_seen = False\n        for it in batch:\n            pms = int(it.get(\"publishTime\") or it.get(\"dateTimestamp\") or 0)\n            dt_msk = datetime.fromtimestamp(pms/1000, tz=MSK).strftime(\"%Y-%m-%d\")\n            if dt_msk >= last_date:        # –í–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –ø–æ –¥–∞—Ç–µ!\n                out.append(it)\n            else:\n                older_seen = True          # –¥–∞–ª—å—à–µ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ä–µ–µ\n\n        if older_seen or raw_len < limit:\n            break\n    out.sort(key=lambda it: int(it.get(\"publishTime\") or it.get(\"dateTimestamp\") or 0))\n    return out\n\n\n\ndef get_delistings(page: int = 1, limit: int = 50) -> Tuple[List[Dict[str, Any]], int]:\n    params = {\n        \"locale\": ANN_LOCALE,\n        \"page\": page,\n        \"limit\": limit,\n    }\n    data = _http_get(ANN_URL, params)\n\n    res = data.get(\"result\") or {}\n    # –ë—ã–≤–∞—é—Ç —Ä–∞–∑–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å–æ —Å–ø–∏—Å–∫–æ–º:\n    items = (\n            res.get(\"list\")\n            or res.get(\"items\")\n            or res.get(\"rows\")\n            or res.get(\"data\")\n            or []\n    )\n    raw_len = len(items)\n\n    rx = re.compile(r\"\\b(delist\\w*|remov\\w*|terminat\\w*)\", re.I)\n    out: List[Dict[str, Any]] = []\n\n    for it in items:\n        title = str(it.get(\"title\") or \"\")\n        raw_tags = it.get(\"tags\") or []\n\n        # –¢–µ–≥–∏ –±—ã–≤–∞—é—Ç —Å—Ç—Ä–æ–∫–∞–º–∏ –∏–ª–∏ —Å–ª–æ–≤–∞—Ä—è–º–∏ ‚Äî –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫–∏\n        tags: List[str] = []\n        for t in raw_tags:\n            if isinstance(t, dict):\n                tags.append(str(t.get(\"title\") or t.get(\"name\") or t.get(\"tag\") or \"\"))\n            else:\n                tags.append(str(t))\n\n        tag_text = \" \".join(tags)\n        if rx.search(title) or rx.search(tag_text):\n            out.append(it)\n\n    return out, raw_len\n\n\ndef store_delistings(items: List[Dict[str, Any]]) -> int:\n    \"\"\"–ü–∞—Ä—Å–∏—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç –∏—Ö –≤ ZZ$DELISTING. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª-–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫.\"\"\"\n    added = 0\n    for it in items:\n        title = str(it.get(\"title\") or \"\").strip()\n        url = str(it.get(\"url\") or \"\").strip()\n        tags = it.get(\"tags\") or []\n        publish_ms = int(it.get(\"publishTime\") or it.get(\"dateTimestamp\") or 0)\n\n        if publish_ms <= 0:\n            publish_ms = int(time.time() * 1000)\n        h = mk_hash(title, url, publish_ms)\n        pub_dt_msk = datetime.fromtimestamp(publish_ms / 1000.0, tz=MSK).strftime(\"%Y-%m-%d %H:%M:%S\")\n        pub_date = pub_dt_msk[:10]  # 'YYYY-MM-DD'\n        market = _detect_market(title, tags)\n        symbols = _symbols_from_title(title)\n\n        # info-only: –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –Ω–æ–≤–æ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ (–ø–æ HASH, –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –≤—Å—Ç–∞–≤–∫—É –ø–æ —Å–∏–º–≤–æ–ª–∞–º)\n        rw = qr_rw('ZZ$DELISTING', where={FLD_HASH: h})\n        _hash_seen = bool(rw)\n\n        def _upsert_one(sym: str) -> bool:\n            tc = mk_tcod(sym, publish_ms, 'ANN', BYBIT)\n            # pre-check –ø–æ TCOD (UNIQUE) ‚Äî —á—Ç–æ–±—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å added –∏ –Ω–µ –ª–æ–≤–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã\n            rw = qr_rw('ZZ$DELISTING', where={FLD_TCOD: tc})\n            if bool(rw):\n                return False\n            rw = {\n                FLD_SYMBOL: '' if sym == 'ALL' else sym,\n                'FLD$MARKET': market,\n                FLD_TITLE: title[:250],\n                FLD_URL: url[:250],\n                FLD_TAGS: \",\".join(tags)[:250],\n                'FLD$RAW_JSON': json.dumps(it, ensure_ascii=False),\n                FLD_TCOD: tc,\n                FLD_HASH: h,\n                FLD_SOURCE: BYBIT,\n                FLD_DATE_TIME: pub_dt_msk,  # ‚Üê –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—è\n                FLD_DATE: pub_date,  # ‚Üê –Ω–æ–≤–∞—è –¥–∞—Ç–∞-–¥–Ω–µ–≤–∫–∞\n            }\n            # –≤—Å—Ç–∞–≤–∫–∞ –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É TCOD; HASH ‚Äî –ø—Ä–æ—Å—Ç–æ –∏–Ω–¥–µ–∫—Å (–Ω–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π)\n            qr_foi('ZZ$DELISTING', {FLD_TCOD: tc}, rw)\n            return True\n\n        if not symbols:\n            if _upsert_one('ALL'):\n                added += 1\n            continue\n\n        for sym in symbols:\n            if _upsert_one(sym):\n                added += 1\n\n    return added\n\ndef run_once(limit: int = 50, max_pages: int = 50) -> int:\n    items = get_delistings_since_date(limit=limit, max_pages=max_pages)\n    log(f\"[delisting] loaded={len(items)}\")\n    return store_delistings(items)\n\nif __name__ == \"__main__\":\n    n = run_once(limit=50)\n    log(f\"[delisting] inserted: {n}\")\n\n"
    },
    {
      "name": "bb_fmt.py",
      "dir": "/",
      "lines": 543,
      "bytes": 24146,
      "updated": "2025-10-18T12:55:54Z",
      "content": "# -------------------------------------------------------------------------------------\n# name        : bb_fmt.py\n# created     : 16.10.2025 05:45\n# description : –ë–∞–∑–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (Python)\n# -------------------------------------------------------------------------------------\n\nimport re\nfrom datetime import datetime, date\nfrom typing import Union, Optional, List, Any, Dict\nfrom decimal import Decimal, InvalidOperation\n\n\nclass UniversalFormatter:\n    \"\"\"\n    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤—â–∏–∫ –¥–∞–Ω–Ω—ã—Ö —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏\n    \"\"\"\n\n    def __init__(self):\n        self.supported_currencies = {\n            'RUB': {'symbol': '‚ÇΩ', 'format': '{amount} {symbol}', 'position': 'after'},\n            'USD': {'symbol': '$', 'format': '{symbol}{amount}', 'position': 'before'},\n            'EUR': {'symbol': '‚Ç¨', 'format': '{symbol}{amount}', 'position': 'before'},\n            'GBP': {'symbol': '¬£', 'format': '{symbol}{amount}', 'position': 'before'},\n            'CNY': {'symbol': '¬•', 'format': '{symbol}{amount}', 'position': 'before'},\n        }\n\n        self.phone_formats = {\n            'ru': '+7 ({xxx}) {yyy}-{zz}-{aa}',\n            'us': '+1 ({xxx}) {yyy}-{zzzz}',\n            'eu': '+{cc} {xxx} {yyyyyy}',\n            'international': '+{cc} {number}'\n        }\n\n    def format(\n            self,\n            value: Any,\n            format_type: Optional[str] = None,\n            # –ß–∏—Å–ª–æ–≤—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã\n            financial_separator: str = ' ',\n            decimal_separator: str = ',',\n            decimal_places: Optional[int] = None,\n            # –§–æ—Ä–º–∞—Ç—ã –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏\n            date_format: str = 'dd-mm-yyyy',\n            time_format: str = 'HH:MM:SS',\n            datetime_format: str = 'dd-mm-yyyy HH:MM:SS',\n            # –í–∞–ª—é—Ç–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã\n            currency: Optional[str] = None,\n            currency_format: Optional[str] = None,\n            # –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã\n            text_case: Optional[str] = None,\n            text_trim: bool = False,\n            text_max_length: Optional[int] = None,\n            # –§–æ—Ä–º–∞—Ç—ã –º–∞—Å—Å–∏–≤–æ–≤\n            array_separator: str = ', ',\n            array_prefix: str = '',\n            array_suffix: str = '',\n            # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã\n            phone_format: Optional[str] = None,\n            boolean_format: str = 'true_false',\n            null_value: str = '',\n            # –ü—Ä–æ—Ü–µ–Ω—Ç—ã\n            percent_format: str = 'symbol',\n            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏\n            strip_html: bool = False,\n            escape_special: bool = False,\n            custom_format: Optional[str] = None\n    ) -> str:\n        \"\"\"\n        –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö\n        \"\"\"\n\n        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã help\n        if value == 'show':\n            return self._generate_help('fmt')\n\n        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—É—Å—Ç—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π\n        if value is None:\n            return null_value\n\n        # –°–∏–Ω–æ–Ω–∏–º –¥–ª—è percentage\n        if format_type == '%':\n            format_type = 'percentage'\n\n        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö\n        if format_type is None or format_type == 'auto':\n            format_type = self._detect_format_type(value)\n\n        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω\n        if custom_format:\n            return self._apply_custom_format(value, custom_format)\n\n        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞\n        if format_type == 'array':\n            return self._format_array(value, **self._get_format_kwargs(locals()))\n        elif format_type == 'date':\n            return self._format_date(value, date_format)\n        elif format_type == 'time':\n            return self._format_time(value, time_format)\n        elif format_type == 'datetime':\n            return self._format_datetime(value, datetime_format)\n        elif format_type == 'financial':\n            return self._format_financial(value, financial_separator, decimal_separator, decimal_places)\n        elif format_type == 'currency':\n            return self._format_currency(value, currency, currency_format)\n        elif format_type == 'percentage':\n            return self._format_percentage(value, percent_format, decimal_places)\n        elif format_type == 'phone':\n            return self._format_phone(value, phone_format)\n        elif format_type == 'boolean':\n            return self._format_boolean(value, boolean_format)\n        elif format_type == 'text':\n            return self._format_text(value, text_case, text_trim, text_max_length, strip_html, escape_special)\n        else:\n            return self._format_unknown(value)\n\n    def _detect_format_type(self, value: Any) -> str:\n        \"\"\"–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\"\"\"\n\n        if isinstance(value, (list, tuple)):\n            return 'array'\n        elif isinstance(value, datetime):\n            return 'datetime'\n        elif isinstance(value, date):\n            return 'date'\n        elif isinstance(value, bool):\n            return 'boolean'\n        elif isinstance(value, (int, float, Decimal)):\n            if 0 <= float(value) <= 1:\n                return 'percentage'\n            return 'financial'\n        elif isinstance(value, str):\n            if self._is_date_string(value):\n                return 'date'\n            elif self._is_datetime_string(value):\n                return 'datetime'\n            elif self._is_phone_number(value):\n                return 'phone'\n            elif self._is_currency_string(value):\n                return 'currency'\n            elif value.lower() in ('true', 'false', 'yes', 'no', '1', '0'):\n                return 'boolean'\n            elif self._is_numeric_string(value):\n                return 'financial'\n            else:\n                return 'text'\n        else:\n            return 'unknown'\n\n    def _format_financial(\n            self,\n            number: Union[str, int, float],\n            thousands_sep: str = ' ',\n            decimal_sep: str = ',',\n            decimal_places: Optional[int] = None\n    ) -> str:\n        \"\"\"–†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ª—é–±—ã—Ö —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π\"\"\"\n\n        try:\n            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ\n            if isinstance(number, str):\n                # –û—á–∏—â–∞–µ–º —á–∏—Å–ª–æ –æ—Ç –ª—é–±—ã—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π\n                clean_number = re.sub(r'[^\\d\\.\\-]', '', number)\n                # –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è\n                clean_number = clean_number.replace(',', '.')\n                num_value = Decimal(clean_number)\n            else:\n                num_value = Decimal(str(number))\n\n            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π\n            if decimal_places is None:\n                if num_value == num_value.to_integral():\n                    decimal_places = 0\n                else:\n                    decimal_places = min(abs(num_value.as_tuple().exponent), 6)\n\n            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ª—é–±—ã—Ö —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π\n            if decimal_places == 0:\n                formatted = f\"{int(num_value):,}\".replace(',', 'TEMP_THOUSANDS')\n                formatted = formatted.replace('TEMP_THOUSANDS', thousands_sep)\n            else:\n                format_string = f\"{{:,.{decimal_places}f}}\"\n                formatted = format_string.format(float(num_value))\n                formatted = formatted.replace(',', 'TEMP_THOUSANDS').replace('.', 'TEMP_DECIMAL')\n                formatted = formatted.replace('TEMP_THOUSANDS', thousands_sep).replace('TEMP_DECIMAL', decimal_sep)\n\n            return formatted\n\n        except (ValueError, InvalidOperation, TypeError):\n            return str(number)\n\n    def _format_currency(\n            self,\n            value: Union[str, int, float],\n            currency_code: Optional[str] = None,\n            currency_format: Optional[str] = None\n    ) -> str:\n        \"\"\"–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã\"\"\"\n\n        try:\n            amount = Decimal(str(value))\n\n            if currency_code and currency_code.upper() in self.supported_currencies:\n                currency = self.supported_currencies[currency_code.upper()]\n\n                if currency_format:\n                    format_template = currency_format\n                else:\n                    format_template = currency['format']\n\n                formatted_amount = self._format_financial(amount, decimal_places=2)\n\n                return format_template.format(\n                    symbol=currency['symbol'],\n                    amount=formatted_amount,\n                    code=currency_code.upper()\n                )\n            else:\n                return self._format_financial(amount, decimal_places=2)\n\n        except (ValueError, InvalidOperation):\n            return str(value)\n\n    def _format_percentage(\n            self,\n            value: Union[str, int, float],\n            percent_format: str = 'symbol',\n            decimal_places: Optional[int] = None\n    ) -> str:\n        \"\"\"–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤\"\"\"\n\n        try:\n            number = Decimal(str(value)) * 100\n\n            if decimal_places is None:\n                decimal_places = 1\n\n            formatted_number = self._format_financial(number, decimal_places=decimal_places)\n\n            if percent_format == 'symbol':\n                return f\"{formatted_number}%\"\n            elif percent_format == 'word':\n                return f\"{formatted_number} percent\"\n            else:\n                return formatted_number\n\n        except (ValueError, InvalidOperation):\n            return str(value)\n\n    def _format_phone(self, phone: str, phone_format: Optional[str] = None) -> str:\n        \"\"\"–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤\"\"\"\n\n        clean_phone = re.sub(r'[^\\d+]', '', phone)\n\n        if phone_format and phone_format in self.phone_formats:\n            format_template = self.phone_formats[phone_format]\n        else:\n            if clean_phone.startswith('+7') or clean_phone.startswith('7'):\n                format_template = self.phone_formats['ru']\n            elif clean_phone.startswith('+1') or clean_phone.startswith('1'):\n                format_template = self.phone_formats['us']\n            else:\n                format_template = self.phone_formats['international']\n\n        if format_template == self.phone_formats['ru']:\n            if len(clean_phone) >= 11:\n                if clean_phone.startswith('+7'):\n                    part1 = clean_phone[2:5]  # 916\n                    part2 = clean_phone[5:8]  # 123\n                    part3 = clean_phone[8:10]  # 45\n                    part4 = clean_phone[10:12]  # 67\n                else:\n                    part1 = clean_phone[1:4]  # 916\n                    part2 = clean_phone[4:7]  # 123\n                    part3 = clean_phone[7:9]  # 45\n                    part4 = clean_phone[9:11]  # 67\n                return f\"+7 ({part1}) {part2}-{part3}-{part4}\"\n\n        return clean_phone\n\n    def _format_boolean(self, value: Any, boolean_format: str = 'true_false') -> str:\n        \"\"\"–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π\"\"\"\n\n        bool_value = bool(value)\n\n        formats = {\n            'true_false': ('true', 'false'),\n            'yes_no': ('yes', 'no'),\n            '10': ('1', '0'),\n            'on_off': ('on', 'off'),\n            'enabled_disabled': ('enabled', 'disabled'),\n            'ru': ('–¥–∞', '–Ω–µ—Ç'),\n            'checkmark': ('‚úì', '‚úó')\n        }\n\n        true_str, false_str = formats.get(boolean_format, ('true', 'false'))\n        return true_str if bool_value else false_str\n\n    def _format_text(\n            self,\n            text: str,\n            text_case: Optional[str] = None,\n            text_trim: bool = False,\n            text_max_length: Optional[int] = None,\n            strip_html: bool = False,\n            escape_special: bool = False\n    ) -> str:\n        \"\"\"–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞\"\"\"\n\n        result = str(text)\n\n        if strip_html:\n            result = re.sub(r'<[^>]+>', '', result)\n\n        if escape_special:\n            result = result.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')\n\n        if text_trim:\n            result = result.strip()\n\n        if text_case == 'lower':\n            result = result.lower()\n        elif text_case == 'upper':\n            result = result.upper()\n        elif text_case == 'title':\n            result = result.title()\n        elif text_case == 'capitalize':\n            result = result.capitalize()\n\n        if text_max_length and len(result) > text_max_length:\n            result = result[:text_max_length - 3] + '...'\n\n        return result\n\n    def _format_array(\n            self,\n            array: Union[List, tuple],\n            array_separator: str = ', ',\n            array_prefix: str = '',\n            array_suffix: str = '',\n            **format_kwargs\n    ) -> str:\n        \"\"\"–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤\"\"\"\n\n        formatted_items = []\n        for item in array:\n            formatted_item = self.format(item, **format_kwargs)\n            formatted_items.append(formatted_item)\n\n        result = array_separator.join(formatted_items)\n        return f\"{array_prefix}{result}{array_suffix}\"\n\n    def _is_date_string(self, value: str) -> bool:\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –¥–∞—Ç–æ–π\"\"\"\n        patterns = [\n            r'^\\d{4}-\\d{2}-\\d{2}$',\n            r'^\\d{2}\\.\\d{2}\\.\\d{4}$',\n            r'^\\d{2}/\\d{2}/\\d{4}$',\n        ]\n        return any(re.match(pattern, value) for pattern in patterns)\n\n    def _is_datetime_string(self, value: str) -> bool:\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –¥–∞—Ç–æ–π-–≤—Ä–µ–º–µ–Ω–µ–º\"\"\"\n        patterns = [\n            r'^\\d{4}-\\d{2}-\\d{2}[T\\s]\\d{2}:\\d{2}:\\d{2}$',\n            r'^\\d{4}-\\d{2}-\\d{2}[T\\s]\\d{2}:\\d{2}$',\n            r'^\\d{2}\\.\\d{2}\\.\\d{4}[T\\s]\\d{2}:\\d{2}:\\d{2}$',\n            r'^\\d{2}\\/\\d{2}\\/\\d{4}[T\\s]\\d{2}:\\d{2}:\\d{2}$',\n            r'^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$',\n            r'^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$',\n        ]\n        return any(re.match(pattern, value) for pattern in patterns)\n\n    def _is_phone_number(self, value: str) -> bool:\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º\"\"\"\n        clean_value = re.sub(r'[^\\d+]', '', value)\n        return len(clean_value) >= 10 and clean_value.replace('+', '').isdigit()\n\n    def _is_currency_string(self, value: str) -> bool:\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –≤–∞–ª—é—Ç–æ–π\"\"\"\n        currency_symbols = ['$', '‚Ç¨', '¬£', '¬•', '‚ÇΩ', '‚Çπ']\n        return any(symbol in value for symbol in currency_symbols)\n\n    def _is_numeric_string(self, value: str) -> bool:\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —á–∏—Å–ª–æ–º\"\"\"\n        try:\n            clean_value = value.replace(' ', '').replace(',', '.').replace(\"'\", \"\")\n            float(clean_value)\n            return True\n        except ValueError:\n            return False\n\n    def _apply_custom_format(self, value: Any, custom_format: str) -> str:\n        \"\"\"–ü—Ä–∏–º–µ–Ω—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç\"\"\"\n        try:\n            return custom_format.format(value=value)\n        except:\n            return str(value)\n\n    def _format_date(self, date_str: str, output_format: str) -> str:\n        \"\"\"–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É\"\"\"\n        try:\n            date_obj = datetime.strptime(date_str, '%Y-%m-%d')\n\n            format_mapping = {\n                'dd-mm-yyyy': '%d-%m-%Y',\n                'dd.mm.yyyy': '%d.%m.%Y',\n                'dd/mm/yyyy': '%d/%m/%Y',\n                'mm-dd-yyyy': '%m-%d-%Y',\n                'mm.dd.yyyy': '%m.%d.%Y',\n                'mm/dd/yyyy': '%m/%d/%Y',\n                'yyyy-mm-dd': '%Y-%m-%d',\n                'dd-mm-yy': '%d-%m-%y',\n                'dd.mm.yy': '%d.%m.%y',\n                'full': '%d %B %Y',\n                'short': '%d %b %Y',\n                'iso': '%Y-%m-%d',\n            }\n\n            if output_format in format_mapping:\n                return date_obj.strftime(format_mapping[output_format])\n            else:\n                return date_obj.strftime(output_format)\n\n        except ValueError:\n            return date_str\n\n    def _format_time(self, time_str: str, output_format: str) -> str:\n        \"\"\"–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è\"\"\"\n        return time_str\n\n    def _format_datetime(self, datetime_str: str, output_format: str) -> str:\n        \"\"\"–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è\"\"\"\n        try:\n            # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –≤–≤–æ–¥–∞\n            formats_to_try = [\n                '%Y-%m-%d %H:%M:%S',\n                '%Y-%m-%d %H:%M',\n                '%d.%m.%Y %H:%M:%S',\n                '%d/%m/%Y %H:%M:%S'\n            ]\n\n            datetime_obj = None\n            for fmt_str in formats_to_try:\n                try:\n                    datetime_obj = datetime.strptime(datetime_str, fmt_str)\n                    break\n                except ValueError:\n                    continue\n\n            if datetime_obj is None:\n                return datetime_str\n\n            # –ú–∞–ø–ø–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ strftime —Ñ–æ—Ä–º–∞—Ç—ã\n            format_mapping = {\n                'dd-mm-yyyy HH:MM:SS': '%d-%m-%Y %H:%M:%S',\n                'dd.mm.yyyy HH:MM:SS': '%d.%m.%Y %H:%M:%S',\n                'dd/mm/yyyy HH:MM:SS': '%d/%m/%Y %H:%M:%S',\n                'yyyy-mm-dd HH:MM:SS': '%Y-%m-%d %H:%M:%S',\n                'dd-mm-yyyy HH:MM': '%d-%m-%Y %H:%M',\n                'dd.mm.yyyy HH:MM': '%d.%m.%Y %H:%M',\n                'dd/mm/yyyy HH:MM': '%d/%m/%Y %H:%M',\n                'yyyy-mm-dd HH:MM': '%Y-%m-%d %H:%M',\n                'dd-mm-yy HH:MM:SS': '%d-%m-%y %H:%M:%S',\n                'dd.mm.yy HH:MM:SS': '%d.%m.%y %H:%M:%S',\n                'full': '%d %B %Y %H:%M:%S',\n                'short': '%d %b %Y %H:%M:%S',\n                'iso': '%Y-%m-%d %H:%M:%S',\n            }\n\n            if output_format in format_mapping:\n                return datetime_obj.strftime(format_mapping[output_format])\n            else:\n                # –ó–∞–º–µ–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ\n                custom_format = output_format\n                custom_format = custom_format.replace('dd', '%d')\n                custom_format = custom_format.replace('mm', '%m')\n                custom_format = custom_format.replace('yyyy', '%Y')\n                custom_format = custom_format.replace('yy', '%y')\n                custom_format = custom_format.replace('HH', '%H')\n                custom_format = custom_format.replace('MM', '%M')\n                custom_format = custom_format.replace('SS', '%S')\n                custom_format = custom_format.replace('MMMM', '%B')\n                custom_format = custom_format.replace('MMM', '%b')\n\n                return datetime_obj.strftime(custom_format)\n\n        except ValueError:\n            return datetime_str\n\n    def _format_unknown(self, value: Any) -> str:\n        \"\"\"–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞\"\"\"\n        return str(value)\n\n    def _get_format_kwargs(self, local_vars: Dict) -> Dict:\n        \"\"\"–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\"\"\"\n        exclude_keys = ['self', 'value', 'format_type', 'custom_format']\n        return {k: v for k, v in local_vars.items() if k not in exclude_keys and not k.startswith('_')}\n\n    def _generate_help(self, function_name: str) -> str:\n        \"\"\"–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ —Ñ—É–Ω–∫—Ü–∏—è–º\"\"\"\n\n        help_content = {\n            'fmt': \"\"\"\n            <div class=\"function-help\">\n                <h1>–§—É–Ω–∫—Ü–∏—è fmt() - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</h1>\n                <p>–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ª—é–±—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö: —á–∏—Å–ª–∞, –¥–∞—Ç—ã, —Ç–µ–∫—Å—Ç, –º–∞—Å—Å–∏–≤—ã, –≤–∞–ª—é—Ç—ã –∏ —Ç.–¥.</p>\n\n                <h2>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:</h2>\n                <table border=\"1\" style=\"border-collapse: collapse; width: 100%;\">\n                    <tr><th>–ü–∞—Ä–∞–º–µ—Ç—Ä</th><th>–¢–∏–ø</th><th>–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é</th><th>–û–ø–∏—Å–∞–Ω–∏–µ</th></tr>\n                    <tr><td>value</td><td>Any</td><td>-</td><td>–ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</td></tr>\n                    <tr><td>format_type</td><td>str</td><td>auto</td><td>–¢–∏–ø —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: auto, date, datetime, financial, currency, %, phone, boolean, text, array</td></tr>\n                    <tr><td>financial_separator</td><td>str</td><td>' '</td><td>–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Ç—ã—Å—è—á (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±–æ–π —Å–∏–º–≤–æ–ª: ' ', ',', '.', '`', \"'\", etc.)</td></tr>\n                    <tr><td>decimal_separator</td><td>str</td><td>','</td><td>–î–µ—Å—è—Ç–∏—á–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±–æ–π —Å–∏–º–≤–æ–ª: ',', '.', etc.)</td></tr>\n                    <tr><td>decimal_places</td><td>int</td><td>None</td><td>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π</td></tr>\n                    <tr><td>date_format</td><td>str</td><td>dd-mm-yyyy</td><td>–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã</td></tr>\n                    <tr><td>datetime_format</td><td>str</td><td>dd-mm-yyyy HH:MM:SS</td><td>–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏</td></tr>\n                    <tr><td>currency</td><td>str</td><td>None</td><td>–ö–æ–¥ –≤–∞–ª—é—Ç—ã: RUB, USD, EUR, GBP, CNY</td></tr>\n                    <tr><td>text_case</td><td>str</td><td>None</td><td>–†–µ–≥–∏—Å—Ç—Ä: lower, upper, title, capitalize</td></tr>\n                    <tr><td>array_separator</td><td>str</td><td>', '</td><td>–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞</td></tr>\n                    <tr><td>boolean_format</td><td>str</td><td>true_false</td><td>–§–æ—Ä–º–∞—Ç –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π</td></tr>\n                    <tr><td>percent_format</td><td>str</td><td>symbol</td><td>–§–æ—Ä–º–∞—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤: symbol, word, none</td></tr>\n                </table>\n\n                <h2>–ü—Ä–∏–º–µ—Ä—ã:</h2>\n                <pre>\nfmt(1000000)                      # \"1 000 000\"\nfmt(1200140, financial_separator='`', decimal_separator='.', decimal_places=2)  # \"1`200`140.00\"\nfmt(\"2023-12-25\")                 # \"25-12-2023\"  \nfmt(\"2023-12-25 15:23:21\")        # \"25-12-2023 15:23:21\"\nfmt(0.15, format_type='%')        # \"15,0%\"\nfmt(1500000, currency='USD')      # \"$1,500,000.00\"\nfmt([1, 2, 3], array_separator=' - ')  # \"1 - 2 - 3\"\n                </pre>\n            </div>\n            \"\"\"\n        }\n\n        return help_content.get(function_name, f\"<h1>–°–ø—Ä–∞–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏: {function_name}</h1>\")\n\n\n# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤—â–∏–∫–∞\n_formatter = UniversalFormatter()"
    },
    {
      "name": "bb_lib.py",
      "dir": "/",
      "lines": 88,
      "bytes": 3756,
      "updated": "2025-10-18T12:55:54Z",
      "content": "# bb_lib.py\n# ALIAS: BB_LIB\n# Created: 2025-09-18\n\nimport requests\nfrom collections import deque, defaultdict\nfrom bb_db import *\nfrom bb_vars import *\n\nMARKET_FILTER_QUOTE = USDT\n\n# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ ---\nWINDOW = 30\nVOLUME_MULTIPLIER = 3.0\nPRICE_CHANGE = 0.003\nSTRONG_PRICE_JUMP = 0.03\nSTRONG_VOLUME_MULT = 20.0\n# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –≤—ã–≤–æ–¥–∞ (–ú–°–ö)\n\nclass RollingStats:\n    def __init__(self):\n        self.volumes = deque(maxlen=WINDOW)\n        self.last_price = None\n\n    def update(self, price: float, volume: float):\n        self.last_price = price\n        self.volumes.append(volume)\n\n    def ready(self) -> bool:\n        return len(self.volumes) == self.volumes.maxlen and self.last_price is not None\n\n    def avg_volume(self) -> float:\n        return sum(self.volumes)/len(self.volumes) if self.volumes else 0.0\n\nclass BybitSymbols:\n    @staticmethod\n    def fetch_linear_usdt_symbols() -> list:\n        r = requests.get(f\"{BYBIT_REST}/v5/market/instruments-info\", params={\"category\": \"linear\"}, timeout=10)\n        r.raise_for_status()\n        items = r.json().get(\"result\", {}).get(\"list\", [])\n        return [it[\"symbol\"] for it in items if it.get(\"quoteCoin\") == MARKET_FILTER_QUOTE and it.get(\"status\") == \"Trading\"]\n\nclass PumpDumpStrategy:\n    def __init__(self):#WINDOW, VOLUME_MULTIPLIER, PRICE_CHANGE , window=WINDOW, v_mult=VOLUME_MULTIPLIER, price_change=PRICE_CHANGE\n        self.window = WINDOW\n        self.v_mult = VOLUME_MULTIPLIER\n        self.price_change = PRICE_CHANGE\n        self.stats = defaultdict(lambda: RollingStats())\n        self.last_sec_price = defaultdict(lambda: deque(maxlen=2))\n\n    def on_trade(self, symbol: str, ts_ms: int, price: float, volume: float, db: bbDB):\n        self.stats[symbol].update(price, volume)\n        self.last_sec_price[symbol].append(price)\n        self._maybe_emit_signal(symbol, ts_ms, price, volume, db)\n\n    def _maybe_emit_signal(self, symbol: str, ts_ms: int, price: float, volume: float, db: bbDB):\n        rs = self.stats[symbol]\n        if not rs.ready() or len(self.last_sec_price[symbol]) < 2:\n            return\n        avg_v = rs.avg_volume()\n        if avg_v == 0:\n            return\n        last, curr = self.last_sec_price[symbol][0], self.last_sec_price[symbol][1]\n        price_delta = (curr - last) / last if last else 0.0\n        x_volume = volume / avg_v if avg_v > 0 else 0.0\n\n        # STRONG PUMP/DUMP\n        if x_volume > STRONG_VOLUME_MULT and abs(price_delta) > STRONG_PRICE_JUMP:\n            type_sig = \"PUMP\" if price_delta > 0 else \"DUMP\"\n            action = BUY if type_sig == \"PUMP\" else SELL\n            p_price = price_delta * 100.0\n            strength = x_volume * abs(price_delta)\n            reason = f\"strong {type_sig.lower()} Œîp={price_delta:.4f}, vol√ó={x_volume:.2f}\"\n            db.insert_signal(symbol, ts_ms, action, price, strength, reason, x_volume, p_price, type_sig)\n\n        # –û–±—ã—á–Ω—ã–π PUMP\n        elif x_volume > self.v_mult and price_delta > self.price_change:\n            p_price = price_delta * 100.0\n            strength = x_volume * price_delta\n            reason = f\"pump Œîp={price_delta:.4f}, vol√ó={x_volume:.2f}\"\n            db.insert_signal(symbol, ts_ms, BUY, price, strength, reason, x_volume, p_price, \"PUMP\")\n\n        # –û–±—ã—á–Ω—ã–π DUMP\n        elif x_volume > self.v_mult and price_delta < -self.price_change:\n            p_price = price_delta * 100.0\n            strength = x_volume * abs(price_delta)\n            reason = f\"dump Œîp={price_delta:.4f}, vol√ó={x_volume:.2f}\"\n            db.insert_signal(symbol, ts_ms, SELL, price, strength, reason, x_volume, p_price, \"DUMP\")"
    },
    {
      "name": "bb_page.py",
      "dir": "/",
      "lines": 162,
      "bytes": 5507,
      "updated": "2025-10-18T12:55:54Z",
      "content": "# bb_page.py\n\nclass TxPage:\n    def __init__(self):\n        self.src = \"\"  # —Ö–æ–ª—Å—Ç\n        self.style = \"\"\n\n    def set_style(self, style: str = \"\"):\n        \"\"\"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç CSS-—Å—Ç–∏–ª—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã.\"\"\"\n        self.style = style\n\n    # –±–∞–∑–æ–≤—ã–µ –∫–∏—Ä–ø–∏—á–∏\n    def tg(self, name, cls=None, attr=None):\n        \"\"\"–û—Ç–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥: tg('div', 'panel', 'id=\\\"main\\\"') -> <div class=\\\"panel\\\" id=\\\"main\\\">\"\"\"\n        attrs = []\n        if cls:\n            attrs.append(f'class=\"{cls}\"')\n        if attr:\n            # –¥–æ–ø—É—Å–∫–∞–µ–º –∏ —Å—Ç—Ä–æ–∫—É, –∏ dict\n            if isinstance(attr, dict):\n                attrs.extend(f'{k}=\"{v}\"' for k, v in attr.items())\n            else:\n                attrs.append(str(attr))\n        s = \" \".join(attrs)\n        self.src += f\"<{name}{(' ' + s) if s else ''}>\"\n\n    def etg(self, name):\n        \"\"\"–ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥: etg('div') -> </div>\"\"\"\n        self.src += f\"</{name}>\\n\"\n\n    def h(self, count=1, s=None, cls=None, attr=None):\n        \"\"\"–ó–∞–≥–æ–ª–æ–≤–æ–∫ <h1..h6>: h(2, 'Title', 'class', 'id=\"x\"')\"\"\"\n        try:\n            n = max(1, min(6, int(count)))\n        except Exception:\n            n = 1\n        self.tg(f\"h{n}\", cls, attr)\n        if s is not None:\n            self.text(s)\n        self.etg(f\"h{n}\")\n\n    def text(self, s):\n        self.src += str(s)\n\n    def br(self, count=1):\n        \"\"\"–í—Å—Ç–∞–≤–ª—è–µ—Ç <br/> count —Ä–∞–∑ (—Å –ø–µ—Ä–µ–≤–æ–¥–æ–º —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–Ω—Ü–µ).\"\"\"\n        try:\n            n = max(0, int(count))\n        except Exception:\n            n = 1\n        if n:\n            self.src += (\"<br/>\" * n) + \"\\n\"\n\n    # —Ñ–∞—Å–∞–¥—ã (—Å–∞—Ö–∞—Ä)\n    def div(self, cls=None, attr=None): self.tg(\"div\", cls, attr)\n    def ediv(self): self.etg(\"div\")\n\n    def table(self, cls=None, attr=None): self.tg(\"table\", cls, attr)\n    def etable(self): self.etg(\"table\")\n\n    def tr(self, cls=None, attr=None): self.tg(\"tr\", cls, attr)\n    def etr(self): self.etg(\"tr\")\n\n    def td(self, cls=None, attr=None): self.tg(\"td\", cls, attr)\n    def etd(self): self.etg(\"td\")\n\n    def _tg(self, tg: str, src: str):\n        \"\"\"–û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç src –≤ —Ç–µ–≥ tg.\"\"\"\n        self.tg(tg)\n        self.text(src)\n        self.etg(tg)\n\n    def html(self):\n        \"\"\"–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—ã–π HTML-–∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –æ–±—ë—Ä–Ω—É—Ç—ã–π –≤ –±–∞–∑–æ–≤—ã–π —Å–∫–µ–ª–µ—Ç.\"\"\"\n        src = self.html()  # —Å–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ –±–∞–∑–æ–≤—ã–π html()\n        self.src = []  # –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ö–æ–ª—Å—Ç\n        self.text(\"<!DOCTYPE html>\\n\")\n        self.tg(\"html\", None, 'lang=\"en\"')\n        self.tg(\"head\")\n        self.text('<meta charset=\"UTF-8\">\\n')\n        self._tg(\"title\", self.Title)\n        if getattr(self, \"style\", \"\"):\n            self._tg(\"style\", self.style)\n        self.etg(\"head\")\n        self._tg(\"body\", src)\n        self.etg(\"html\")\n        return \"\".join(self.src)\n\n    # bb_monitor.py\n\nclass TxMonitor:\n    def __init__(self, port=8081, element_id=\"log\"):\n        self.port = int(port)\n        self.element_id = element_id\n\n    def render(self, p):\n        # –ø–∞–Ω–µ–ª—å —Å—Ç–∞—Ç—É—Å–∞ + –∫–Ω–æ–ø–∫–∞\n        p.div(None, 'id=\"ws-panel\" style=\"display:flex;align-items:center;gap:12px;'\n                    'margin-bottom:10px;font-family:monospace;color:#00ff88;\"')\n        p.div(None, 'id=\"ws-status\"'); p.text(\"üî¥ offline\"); p.ediv()\n        p.tg(\"button\", None, (\n            'id=\"restart-btn\" '\n            'style=\"background:#1a1d29;color:#00ff88;border:1px solid #00ff88;'\n            'border-radius:6px;padding:6px 12px;cursor:pointer;'\n            'font-family:monospace;font-size:0.9em;\"'\n        ))\n        p.text(\"‚ü≥ Restart service\")\n        p.etg(\"button\")\n        p.ediv()\n\n        # –ª–æ–≥-–ø–∞–Ω–µ–ª—å\n        p.div(None, f'id=\"{self.element_id}\"')\n        p.text(\"Connecting...\")\n        p.ediv()\n\n        # JS\n        p.tg(\"script\"); p.text(f\"\"\"\nconst statusEl = document.getElementById('ws-status');\nconst logEl = document.getElementById('{self.element_id}');\nconst btn = document.getElementById('restart-btn');\nconst proto = (location.protocol === 'https:') ? 'wss' : 'ws';\nconst ws = new WebSocket(proto + '://' + location.hostname + ':{self.port}');\n\nfunction setOnline(on) {{\n  statusEl.textContent = on ? 'üü¢ online' : 'üî¥ offline';\n}}\n\nws.onopen = () => {{\n  setOnline(true);\n  logEl.textContent = '‚úÖ Connected to WS...\\\\n';\n}};\n\nws.onmessage = (e) => {{\n  try {{\n    const msg = JSON.parse(e.data);\n    if (msg.type === 'log') logEl.textContent += msg.text + '\\\\n';\n    if (msg.type === 'ping') logEl.textContent += 'üíì heartbeat ' + msg.time + '\\\\n';\n  }} catch(err) {{\n    logEl.textContent += '[parse error]\\\\n';\n  }}\n  logEl.scrollTop = logEl.scrollHeight;\n}};\n\nws.onclose = () => setOnline(false);\nws.onerror = () => setOnline(false);\n\nbtn.onclick = () => {{\n  fetch('/restart', {{ method: 'POST' }})\n    .then(r => logEl.textContent += '\\\\nüîÅ Restart command sent...\\\\n')\n    .catch(e => logEl.textContent += '\\\\n‚ö†Ô∏è Restart failed: ' + e + '\\\\n');\n}};\n\"\"\"); p.etg(\"script\")\n# =====================================================================\n# bb_page.py üúÇ The End ‚Äî See You Next Session 2025 ‚öôÔ∏è\n# =====================================================================\n\n\n\n\n\n\n"
    },
    {
      "name": "bb_scan_9.py",
      "dir": "/",
      "lines": 245,
      "bytes": 10147,
      "updated": "2025-10-18T12:55:54Z",
      "content": "# bb_scan_9.py ‚Äî SCAN v9\n# Refactored for Application / Module architecture\n# 2025-10-12 15:35 / –£—á–∏—Ç–µ–ª—å & GPT-5\n\nfrom collections import defaultdict, deque\nimport time\nimport json\nimport threading\nimport datetime as dt\nimport urllib.request\n\nfrom bb_sys import *\nfrom bb_db import *\nfrom bb_ws import *\n\nclass TmodScan9(TModule):\n    \"\"\"\n    SCAN v9 ‚Äî –ø–µ—Ä–≤—ã–π —Ä–∞–±–æ—á–∏–π –º–æ–¥—É–ª—å –Ω–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ Delphi.2025\n    - REST-–∑–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤\n    - –ë—É—Ñ–µ—Ä —Å–≤–µ—á–µ–π (deque, maxlen=150)\n    - –î–µ—Ç–µ–∫—Ç–æ—Ä —Ç–∏–∫–æ–≤ (–Ω–∞ —É—Ä–æ–≤–Ω–µ close)\n    - Flusher: –∑–∞–ø–∏—Å—å –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–≤–µ—á–µ–π –≤ –ë–î —á–µ—Ä–µ–∑ qr_foi\n    \"\"\"\n\n    # —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–≤–µ—á–µ–π (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Ñ–∏–≥)\n    TBL_CANDLES = 'ZZ$CANDLES'\n\n    # –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø—Ä–æ—Å–∞\n    MAX_SYMBOLS      = 10     # –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞\n    POLL_INTERVAL_S  = 60     # –ø–µ—Ä–∏–æ–¥ –æ–ø—Ä–æ—Å–∞ REST-—Å–≤–µ—á–µ–π\n    FLUSH_INTERVAL_S = 30     # –ø–µ—Ä–∏–æ–¥ –∑–∞–ø–∏—Å–∏ –≤ –ë–î\n\n    def __init__(self, app):\n        super().__init__(app, \"SCAN\", 9)\n\n        # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥—É–ª—è\n        self.symbols: list[str] = []\n        self.candles: dict[str, deque] = defaultdict(lambda: deque(maxlen=150))\n        self.last_price: dict[str, float] = defaultdict(lambda: None)\n        self._stop = False\n        self._flush_thread = None\n        self.log(\"__init__\", \"module initialized\")\n\n    # ------------------------------------------------------------------\n    # REST: –∑–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤\n    # ------------------------------------------------------------------\n    def load_symbols(self) -> list[str]:\n        \"\"\"–ë–µ—Ä—ë–º —Å–ø–∏—Å–æ–∫ –ª–∏–Ω–µ–π–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ Bybit –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ *USDT.\"\"\"\n        url = f\"{BYBIT_REST}/v5/market/instruments-info?category=linear\"\n        try:\n            with urllib.request.urlopen(url, timeout=10) as resp:\n                data = json.loads(resp.read().decode())\n            rows = (data or {}).get(\"result\", {}).get(\"list\", []) or []\n            symbols = [r[\"symbol\"] for r in rows if str(r.get(\"symbol\", \"\")).endswith(\"USDT\")]\n            symbols.sort()\n            if self.MAX_SYMBOLS and len(symbols) > self.MAX_SYMBOLS:\n                symbols = symbols[: self.MAX_SYMBOLS]\n            self.log(\"load_symbols\", f\"{len(symbols)} symbols loaded\")\n            return symbols\n        except Exception as e:\n            self.log(\"load_symbols\", f\"‚ö†Ô∏è failed: {e}\")\n            return []\n\n    # ------------------------------------------------------------------\n    # REST: –æ–ø—Ä–æ—Å –º–∏–Ω—É—Ç–Ω—ã—Ö —Å–≤–µ—á–µ–π –∏ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±—É—Ñ–µ—Ä–∞\n    # ------------------------------------------------------------------\n    def update_candles(self, symbol: str):\n        \"\"\"–ó–∞–≥—Ä—É–∂–∞–µ—Ç –º–∏–Ω—É—Ç–Ω—ã–µ —Å–≤–µ—á–∏ (interval=1) –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –±—É—Ñ–µ—Ä.\"\"\"\n        url = f\"{BYBIT_REST}/v5/market/kline?category=linear&symbol={symbol}&interval=1\"\n        try:\n            with urllib.request.urlopen(url, timeout=8) as resp:\n                data = json.loads(resp.read().decode())\n\n            items = (data or {}).get(\"result\", {}).get(\"list\", []) or []\n            for row in items:\n                if not isinstance(row, (list, tuple)) or len(row) < 6:\n                    continue\n                ts_ms = int(row[0])\n                o, h, l, c, v = row[1:6]\n                candle = {\n                    \"ts\": ts_ms,\n                    \"open\": float(o),\n                    \"high\": float(h),\n                    \"low\": float(l),\n                    \"close\": float(c),\n                    \"volume\": float(v),\n                }\n                self.candles[symbol].append(candle)\n\n            # Tick detector: –∏–∑–º–µ–Ω–µ–Ω–∏–µ close\n            if self.candles[symbol]:\n                last_close = self.candles[symbol][-1][\"close\"]\n                prev_close = self.last_price[symbol]\n                if prev_close is None or last_close != prev_close:\n                    self.last_price[symbol] = last_close\n                    self.log(\"tick\", f\"{symbol} close={last_close}\")\n\n            self.log(\"update_candles\", f\"{symbol}: {len(self.candles[symbol])} buffered\")\n\n        except Exception as e:\n            self.log(\"update_candles\", f\"‚ö†Ô∏è {symbol}: {e}\")\n\n    # ------------------------------------------------------------------\n    # Flusher: –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –∑–∞–ø–∏—Å—å –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–≤–µ—á–µ–π –≤ –ë–î\n    # ------------------------------------------------------------------\n    def flusher(self):\n        \"\"\"–†–∞–∑ –≤ FLUSH_INTERVAL_S –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–≤–µ—á—É –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –≤ –ë–î.\"\"\"\n        app = self.owner\n        while not self._stop:\n            saved = 0\n            try:\n                for sym, buf in list(self.candles.items()):\n                    if not buf:\n                        continue\n                    last = buf[-1]\n                    dt_msk = dt.datetime.fromtimestamp(last[\"ts\"] / 1000.0, tz=MSK)\n                    record = {\n                        FLD_SYMBOL: sym,\n                        FLD_DATE_TIME: dt_msk,\n                        FLD_PRICE: last[\"close\"],\n                        FLD_VOLUME: last[\"volume\"],\n                        FLD_TYPE: \"CANDLE_1M\",\n                        FLD_SOURCE: \"SCAN9\",\n                    }\n                    qr_foi(\n                        self.TBL_CANDLES,\n                        {FLD_SYMBOL: sym, FLD_DATE_TIME: dt_msk},\n                        record,\n                    )\n                    saved += 1\n                if saved:\n                    self.log(\"flusher\", f\"batch saved ({saved} rows)\")\n            except Exception as e:\n                self.log(\"flusher\", f\"‚ö†Ô∏è {e}\")\n            time.sleep(self.FLUSH_INTERVAL_S)\n\n    # ------------------------------------------------------------------\n    # Lifecycle\n    # ------------------------------------------------------------------\n    def do_open(self) -> bool:\n        \"\"\"–û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ –º–æ–¥—É–ª—è SCAN_9.\"\"\"\n        self.log(\"do_open\", \"starting WS tick scan...\")\n\n        # 1) –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ä–µ–¥—ã\n        app = self.owner\n        self.log(\"do_open\", f\"Active project: {app.project_tag}\")\n        self.log(\"do_open\", f\"Session active: {app.Session.active}\")\n        self.log(\"do_open\", f\"Database active: {app.Database.active}\")\n        self.log(\"do_open\", f\"Config vars loaded: {len(app.Config.env)}\")\n\n        # 2) –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤\n        self.symbols = self.load_symbols()\n        if not self.symbols:\n            self.log(\"do_open\", \"‚ö†Ô∏è no symbols loaded ‚Äî exiting do_open()\")\n            return False\n        self.log(\"do_open\", f\"{len(self.symbols)} symbols ready for WS subscription\")\n\n        # 3) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∏–∫-–¥–µ—Ç–µ–∫—Ç–æ—Ä–∞\n        self.tick_detector = TTickDetector(self)\n        self.tick_detector.bus.subscribe(\"tick_spike\", db_signal_writer)\n        self.log(\"do_open\", \"TickDetector and SignalBus initialized\")\n\n        # 4) –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ WebSocket\n        try:\n            self.ws = TBybitWS(self, self.symbols, self.tick_detector.feed)\n            self.ws.open()\n            self.log(\"do_open\", \"WebSocket connection started\")\n        except Exception as e:\n            self.log(\"do_open\", f\"‚ö†Ô∏è failed to start WebSocket: {e}\")\n            return False\n\n        # 5) –¶–∏–∫–ª heartbeat\n        threading.Thread(target=self._heartbeat_loop, daemon=True).start()\n        self._flush_thread = threading.Thread(target=self.flusher, daemon=True)\n        self._flush_thread.start()\n        return True\n\n    def _heartbeat_loop(self):\n        while not self._stop:\n            ws_state = getattr(self.ws, \"_connected\", False)\n            self.log(\"heartbeat\", f\"active symbols={len(self.symbols)}  ws_connected={ws_state}\")\n            time.sleep(30)\n\n    def do_close(self) -> bool:\n        \"\"\"–ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É SCAN_9.\"\"\"\n        self._stop = True\n        self.log(\"do_close\", \"stopping background threads...\")\n\n        try:\n            if self.ws:\n                self.ws.close()\n        except Exception as e:\n            self.log(\"do_close\", f\"‚ö†Ô∏è ws close error: {e}\")\n\n        # –¥–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è flusher\n        th = self._flush_thread\n        if th and th.is_alive():\n            try:\n                th.join(timeout=5)\n            except Exception:\n                pass\n\n        self.log(\"do_close\", \"module stopped gracefully\")\n        return True\n\n# ==============================================================\n#   MAIN ENTRY POINT\n# ==============================================================\n\ndef main():\n    app = Application()          # —Å–æ–∑–¥–∞—ë—Ç Database, Session, Config\n    app.echo('Hello world!))')\n    app.echo(\"üß† TSchema initialized\")\n    app.echo(\"<b>Loaded:</b> 37 tables\")\n    app.echo(\"‚öôÔ∏è Config vars: \" + str(len(app.Config.env)))\n    s = \"\"\n    s += \"<table border='1'>\"\n    s += \"<tr>\"\n    s += \"<td>\"\n    s += \"column_1\"\n    s += \"</td>\"\n    s += \"<td>\"\n    s += \"column_2\"\n    s += \"</td>\"\n    s += \"<td>\"\n    s += \"column_3\"\n    s += \"</td>\"\n    s += \"</tr>\"\n    s += \"</table>\"\n    app.echo(s)\n    mod = TmodScan9(app)\n    mod.open()                    # –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –º–æ–¥—É–ª—å\n    try:\n        # –¥–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å –∂–∏–≤—ã–º, –ø–æ–∫–∞ systemd –Ω–µ –ø—Ä–∏—à–ª—ë—Ç SIGTERM\n        while True:\n            time.sleep(1)\n    except KeyboardInterrupt:\n        pass\n    finally:\n        mod.close()               # –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥—É–ª—å\n        CloseApplication()       # graceful shutdown\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "name": "bb_scan_history_1d.py",
      "dir": "/",
      "lines": 248,
      "bytes": 9628,
      "updated": "2025-10-18T12:55:54Z",
      "content": "# bb_scan_history.py\n# ALIAS: BB_SCAN_HISTORY\n# Created: 2025-09-24\n# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫–∞–Ω–µ—Ä –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–≤–µ—á–µ–π (–ø–æ —Ä–∞–∑–Ω—ã–º —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º) –ø–æ –≤—Å–µ–º —Å–∏–º–≤–æ–ª–∞–º Bybit\n# –§–∏–ª—å—Ç—Ä—É–µ—Ç —Å–≤–µ—á–∏, –≥–¥–µ —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Ü–µ–Ω–æ–π –æ—Ç–∫—Ä—ã—Ç–∏—è –∏ high >= rate% –≤–≤–µ—Ä—Ö –∏–ª–∏ low <= rate% –≤–Ω–∏–∑\n# –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–Ω–æ–º—É –¥–∏–∞–ø–∞–∑–æ–Ω—É –ø–∞–∫–µ—Ç–∞–º–∏ –ø–æ 180 –∑–∞–ø–∏—Å–µ–π (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ –¥–ª—è –≤—Å–µ—Ö –¢–§)\n# –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–Ω–Ω—ã–µ —Å–≤–µ—á–∏ –≤ –æ–±—â—É—é —Ç–∞–±–ª–∏—Ü—É ZZ$CANDELS —Å –ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º TCOD, VENDOR –∏ DIRECTION\n\nimport requests\nfrom datetime import datetime, timezone, timedelta\nimport time\n\nfrom bb_db import DB\nfrom bb_vars import BYBIT_REST\n\n# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–ú–°–ö)\nMSK = timezone(timedelta(hours=3))\n\n# –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∫ API (—Å–µ–∫—É–Ω–¥—ã)\nREQUEST_DELAY = 0.2\n\n# --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è TCOD ---\ndef make_tcod(symbol: str, tf: str, when: datetime | None = None, *, vendor: str = \"BYBIT\") -> str:\n    vendor = (vendor or \"BYBIT\").upper()\n    symbol = symbol.strip().upper()\n    tf = tf.strip().upper()\n\n    if when is None:\n        when = datetime.now(tz=timezone.utc)\n    else:\n        if when.tzinfo is None:\n            when = when.replace(tzinfo=timezone.utc)\n        else:\n            when = when.astimezone(timezone.utc)\n\n    return f\"{vendor}_{when.strftime('%Y%m%d_%H%M%S')}_{symbol}_{tf}\"\n\n# --- –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤ ---\ndef fetch_all_symbols(only_usdt: bool = True):\n    url = f\"{BYBIT_REST}/v5/market/instruments-info\"\n    params = {\"category\": \"linear\", \"limit\": 1000}\n    symbols = []\n    cursor = None\n    try:\n        while True:\n            if cursor:\n                params[\"cursor\"] = cursor\n            r = requests.get(url, params=params, timeout=10)\n            r.raise_for_status()\n            result = r.json().get(\"result\", {})\n            chunk = result.get(\"list\", [])\n            if not chunk:\n                break\n            for d in chunk:\n                sym = d.get(\"symbol\")\n                if not sym:\n                    continue\n                if only_usdt and not sym.endswith(\"USDT\"):\n                    continue\n                symbols.append(sym)\n            cursor = result.get(\"nextPageCursor\")\n            if not cursor:\n                break\n            time.sleep(REQUEST_DELAY)\n    except requests.exceptions.RequestException as e:\n        print(f\"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤: {e}\")\n        return []\n\n    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –ø–æ–∫–∞–∂–µ–º —Ä–∞–∑–º–µ—Ä –∏ –ø–µ—Ä–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã\n    print(f\"‚ÑπÔ∏è fetch_all_symbols: –ø–æ–ª—É—á–µ–Ω–æ {len(symbols)} —Å–∏–º–≤–æ–ª–æ–≤\")\n    if symbols:\n        print(f\"   –ø—Ä–∏–º–µ—Ä—ã: {', '.join(symbols[:10])}{' ...' if len(symbols) > 10 else ''}\")\n    return symbols\n\n# --- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–∞—Ç—ã –≤ –±–∞–∑–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è 1D) ---\ndef get_last_date_from_db(symbol: str, tf: str):\n    if tf != \"1D\":\n        return None\n    db = DB()\n    sql = \"SELECT MAX(FLD$DATE_TIME) as last_date FROM ZZ$CANDELS WHERE FLD$SYMBOL=%s AND FLD$TIME_FRAME=%s\"\n    cur = db.conn.cursor(dictionary=True)\n    cur.execute(sql, (symbol, tf))\n    row = cur.fetchone()\n    cur.close()\n    if row and row[\"last_date\"]:\n        return row[\"last_date\"]\n    return None\n\n# --- –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–µ—á–µ–π —Å Bybit (—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π) ---\ndef fetch_all_candels(symbol: str, tf: str, rate: float, date_time_start: datetime | None = None, date_time_end: datetime | None = None):\n    url = f\"{BYBIT_REST}/v5/market/kline\"\n    limit = 180\n\n    # –∫–∞—Ä—Ç–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤ –ø–æ–¥ Bybit\n    tf_map = {\n        \"1S\": \"1\",\n        \"1M\": \"1\",\n        \"5M\": \"5\",\n        \"15M\": \"15\",\n        \"1H\": \"60\",\n        \"4H\": \"240\",\n        \"1D\": \"D\",\n    }\n    bybit_tf = tf_map.get(tf.upper())\n    if not bybit_tf:\n        raise ValueError(f\"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∞–π–º—Ñ—Ä–µ–π–º: {tf}\")\n\n    all_candels = []\n\n    if tf.upper() == \"1D\":\n        today_start = datetime.now(tz=MSK).replace(hour=0, minute=0, second=0, microsecond=0)\n        if date_time_start is None:\n            date_time_start = datetime(2017, 1, 1, tzinfo=MSK)\n        if date_time_end is None or date_time_end >= today_start:\n            date_time_end = today_start - timedelta(seconds=1)  # –Ω–µ —Ç—Ä–æ–≥–∞–µ–º —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å\n        end = int(date_time_end.timestamp()) * 1000\n    else:\n        end = int((date_time_end or datetime.now(tz=MSK)).timestamp()) * 1000\n\n    more_data = True\n\n    while more_data:\n        params = {\n            \"category\": \"linear\",\n            \"symbol\": symbol,\n            \"interval\": bybit_tf,\n            \"end\": end,\n            \"limit\": limit\n        }\n        if date_time_start:\n            params[\"start\"] = int(date_time_start.timestamp()) * 1000\n\n        try:\n            r = requests.get(url, params=params, timeout=10)\n            r.raise_for_status()\n        except requests.exceptions.RequestException as e:\n            print(f\"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ {symbol}: {e}\")\n            break\n\n        result = r.json().get(\"result\", {})\n        data = result.get(\"list\", [])\n\n        if not data:\n            more_data = False\n            break\n\n        data_sorted = sorted(data, key=lambda x: int(x[0]))\n\n        for k in data_sorted:\n            ts = datetime.fromtimestamp(int(k[0]) / 1000, tz=timezone.utc).astimezone(MSK).replace(hour=0, minute=0, second=0, microsecond=0)\n            open_price = float(k[1])\n            high_price = float(k[2])\n            low_price = float(k[3])\n            close_price = float(k[4])\n            volume = float(k[5])\n\n            if high_price >= open_price * (1 + rate / 100):\n                direction = \"UP\"\n                all_candels.append({\n                    \"datetime\": ts,\n                    \"open\": open_price,\n                    \"high\": high_price,\n                    \"low\": low_price,\n                    \"close\": close_price,\n                    \"volume\": volume,\n                    \"direction\": direction\n                })\n            elif low_price <= open_price * (1 - rate / 100):\n                direction = \"DOWN\"\n                all_candels.append({\n                    \"datetime\": ts,\n                    \"open\": open_price,\n                    \"high\": high_price,\n                    \"low\": low_price,\n                    \"close\": close_price,\n                    \"volume\": volume,\n                    \"direction\": direction\n                })\n\n        oldest_ts = int(data_sorted[0][0])\n        end = oldest_ts - 1\n\n        time.sleep(REQUEST_DELAY)\n\n    return all_candels\n\n# --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î ---\ndef save_candels_to_db(symbol: str, candels: list, tf: str, vendor: str = \"BYBIT\"):\n    db = DB()\n    for c in candels:\n        tcod = make_tcod(symbol, tf, c[\"datetime\"], vendor=vendor)\n        db.exec(\n            \"INSERT IGNORE INTO ZZ$CANDELS(FLD$VENDOR, FLD$SYMBOL, FLD$TIME_FRAME, FLD$DATE_TIME, FLD$P_OPEN, FLD$P_CLOSE, FLD$P_HIGH, FLD$P_LOW, FLD$VOLUME, FLD$DIRECTION, FLD$TCOD, FLD$DATE_OTP) \"\n            \"VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,NOW())\",\n            (\n                vendor,\n                symbol,\n                tf,\n                c[\"datetime\"].strftime(\"%Y-%m-%d %H:%M:%S\"),\n                c[\"open\"],\n                c[\"close\"],\n                c[\"high\"],\n                c[\"low\"],\n                c[\"volume\"],\n                c[\"direction\"],\n                tcod\n            )\n        )\n    print(f\"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(candels)} —Å–≤–µ—á–µ–π –¥–ª—è {symbol} –Ω–∞ TF {tf}\")\n\nif __name__ == \"__main__\":\n    tf = \"1D\"\n    vendor = \"BYBIT\"\n    rate = 25\n\n    date_time_start = None\n    date_time_end = None\n\n    if tf in (\"1S\", \"1M\"):\n        date_time_start = datetime(2025, 9, 1, 0, 0, 0, tzinfo=MSK)\n        date_time_end = datetime(2025, 9, 2, 0, 0, 0, tzinfo=MSK)\n\n    symbols = []\n    if not symbols:\n        symbols = fetch_all_symbols()\n\n    start_symbol = None\n    if tf == \"1D\" and start_symbol and start_symbol in symbols:\n        start_index = symbols.index(start_symbol)\n        symbols = symbols[start_index:]\n\n    print(f\"üîé –ù–∞–π–¥–µ–Ω–æ {len(symbols)} —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {symbols[:10]}...\")\n\n    for symbol in symbols:\n        print(f\"‚û°Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ {symbol} –Ω–∞ TF {tf}...\")\n\n        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–∞—Ç—É –≤ –±–∞–∑–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è 1D)\n        last_date = get_last_date_from_db(symbol, tf)\n        if tf == \"1D\" and last_date:\n            date_time_start = last_date + timedelta(days=1)\n            print(f\"‚ÑπÔ∏è –î–ª—è {symbol} –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –±–∞–∑–µ: {last_date}, –Ω–∞—á–∏–Ω–∞–µ–º —Å {date_time_start}\")\n\n        candels = fetch_all_candels(symbol, tf, rate, date_time_start, date_time_end)\n        if candels:\n            save_candels_to_db(symbol, candels, tf, vendor=vendor)\n            print(f\"üïí –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–≤–µ—á–∞ {symbol} ({tf}): {candels[-1]['datetime']}\")\n        else:\n            print(f\"‚ö†Ô∏è –ü–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–≤–µ—á–µ–π –¥–ª—è {symbol} ({tf}) –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\")"
    },
    {
      "name": "bb_scan_history_1s.py",
      "dir": "/",
      "lines": 94,
      "bytes": 3815,
      "updated": "2025-10-18T12:55:54Z",
      "content": "# bb_scan_history_1s.py\n# ALIAS: BB_SCAN_HISTORY_1S\n# Created: 2025-09-24\n# –°–∫–∞–Ω–µ—Ä –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ–∫—É–Ω–¥–Ω—ã—Ö —Å–≤–µ—á–µ–π (—Ü–µ–Ω–∞ + –æ–±—ä–µ–º) –ø–æ —Å–∏–º–≤–æ–ª—É ASPUSDT\n# –î–µ–ª–∏—Ç –∑–∞–¥–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞ –æ—Ç—Ä–µ–∑–∫–∏ –ø–æ 3 –º–∏–Ω—É—Ç—ã –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å–≤–µ—á–∏ –ø–∞–∫–µ—Ç–∞–º–∏ <200 —à—Ç—É–∫\n\nimport requests\nfrom datetime import datetime, timedelta, timezone\n\nfrom bb_db import DB\nfrom bb_vars import BYBIT_REST\n\n# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–ú–°–ö)\nMSK = timezone(timedelta(hours=3))\n\n# --- –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ–∫—É–Ω–¥–Ω—ã—Ö —Å–≤–µ—á–µ–π —Å Bybit ---\ndef fetch_candles(symbol: str, start_time: datetime, end_time: datetime, interval: str = \"1s\"):\n    url = f\"{BYBIT_REST}/v5/market/kline\"\n    params = {\n        \"category\": \"linear\",\n        \"symbol\": symbol,\n        \"interval\": interval,\n        \"start\": int(start_time.timestamp()) * 1000,\n        \"end\": int(end_time.timestamp()) * 1000,\n        \"limit\": 200\n    }\n    r = requests.get(url, params=params, timeout=10)\n    r.raise_for_status()\n    data = r.json().get(\"result\", {}).get(\"list\", [])\n\n    # Bybit –æ—Ç–¥–∞—ë—Ç —Å–≤–µ—á–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–æ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫ –ø–µ—Ä–≤—ã–º).\n    data_sorted = sorted(data, key=lambda x: int(x[0]))  # —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –≤—Ä–µ–º–µ–Ω–∏\n\n    candles = []\n    for k in data_sorted:\n        ts = datetime.fromtimestamp(int(k[0]) / 1000, tz=MSK)\n        candles.append({\n            \"datetime\": ts,\n            \"open\": float(k[1]),\n            \"high\": float(k[2]),\n            \"low\": float(k[3]),\n            \"close\": float(k[4]),\n            \"volume\": float(k[5])\n        })\n    return candles\n\n# --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î ---\ndef save_candles_to_db(symbol: str, candles: list):\n    db = DB()\n    for c in candles:\n        db.exec(\n            \"INSERT INTO ZZ$CANDELS_S1(FLD$SYMBOL, FLD$DATE_TIME, FLD$P_OPEN, FLD$P_CLOSE, FLD$P_HIGH, FLD$P_LOW, FLD$VOLUME, FLD$DATE_OTP) \"\n            \"VALUES(%s,%s,%s,%s,%s,%s,%s,NOW())\",\n            (\n                symbol,\n                c[\"datetime\"].strftime(\"%Y-%m-%d %H:%M:%S\"),\n                c[\"open\"],\n                c[\"close\"],\n                c[\"high\"],\n                c[\"low\"],\n                c[\"volume\"]\n            )\n        )\n    print(f\"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(candles)} —Å–≤–µ—á–µ–π –¥–ª—è {symbol}\")\n\n# --- –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –Ω–∞ –æ—Ç—Ä–µ–∑–∫–∏ –ø–æ 3 –º–∏–Ω—É—Ç—ã ---\ndef split_interval(start_time: datetime, end_time: datetime, chunk_minutes: int = 3):\n    intervals = []\n    current = start_time\n    while current < end_time:\n        chunk_end = min(current + timedelta(minutes=chunk_minutes), end_time)\n        intervals.append((current, chunk_end))\n        # —Å–¥–≤–∏–≥–∞–µ–º –Ω–∞ +1 —Å–µ–∫—É–Ω–¥—É, —á—Ç–æ–±—ã –Ω–µ –∑–∞–¥–≤–æ–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–≤–µ—á—É\n        current = chunk_end + timedelta(seconds=1)\n    return intervals\n\nif __name__ == \"__main__\":\n    symbol = \"INUSDT\"\n    start_time = datetime(2025, 9, 24, 10, 50, tzinfo=MSK)\n    end_time = datetime(2025, 9, 24, 11, 45, tzinfo=MSK)\n\n    print(f\"üîé –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–µ–∫—É–Ω–¥–Ω—ã–µ —Å–≤–µ—á–∏ {symbol} —Å {start_time} –ø–æ {end_time}...\")\n    all_candles = []\n\n    for chunk_start, chunk_end in split_interval(start_time, end_time, chunk_minutes=3):\n        print(f\"‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ {chunk_start} - {chunk_end}\")\n        candles = fetch_candles(symbol, chunk_start, chunk_end, interval=\"1s\")\n        if candles:\n            save_candles_to_db(symbol, candles)\n            all_candles.extend(candles)\n\n    if all_candles:\n        print(f\"üïí –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–≤–µ—á–∏: {all_candles[-1]['datetime']}\")\n"
    },
    {
      "name": "bb_tg.py",
      "dir": "/",
      "lines": 35,
      "bytes": 1167,
      "updated": "2025-10-18T12:55:54Z",
      "content": "# bb_tg.py\n# ALIAS: BB_TG\n# Created: 2025-09-18\n# –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram\n\nimport os\nimport asyncio\nfrom telegram import Bot\n\n# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram ---\nTG_TOKEN = os.getenv(\"TG_TOKEN\", \"7640786990:AAHFDfJy0iqwhxaO_nCLk-RCJpETH_7Fux8\")\nTG_USER_ID = int(os.getenv(\"TG_USER_ID\", 694169894))\n\nasync def _send_telegram_async(bot, chat_id, msg):\n    try:\n        await bot.send_message(chat_id=chat_id, text=msg, parse_mode=\"Markdown\")\n    except Exception as e:\n        print(\"Telegram error:\", e)\n\ndef send_telegram(msg):\n    tg_bot = init_bot()\n    if not tg_bot:\n        return\n    try:\n        loop = asyncio.get_running_loop()\n    except RuntimeError:\n        # —Ü–∏–∫–ª–∞ –Ω–µ—Ç ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π\n        asyncio.run(_send_telegram_async(tg_bot, TG_USER_ID, msg))\n    else:\n        # —Ü–∏–∫–ª –µ—Å—Ç—å ‚Äî —Å–æ–∑–¥–∞—ë–º –∑–∞–¥–∞—á—É –∏ –æ–Ω–∞ –±—É–¥–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ awaited\n        loop.create_task(_send_telegram_async(tg_bot, TG_USER_ID, msg))\n\n# –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞\ndef init_bot():\n    return Bot(TG_TOKEN) if TG_TOKEN else None"
    },
    {
      "name": "bb_trade.py",
      "dir": "/",
      "lines": 105,
      "bytes": 4167,
      "updated": "2025-10-18T12:55:54Z",
      "content": "# bb_trade.py ‚Äî –¥–µ–º–æ-—Ç—Ä–µ–π–¥–∏–Ω–≥ (PAPER) + –µ–¥–∏–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n# –°–æ–≤–º–µ—Å—Ç–∏–º–æ —Å Python 3.9\n\nimport os\nimport time\nimport math\nfrom datetime import datetime\nfrom typing import Dict, Any\n\nimport bb_db as db\nfrom bb_db import *\nfrom bb_vars import *\n\n# ========= —É—Ç–∏–ª–∏—Ç—ã –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –∫ —à–∞–≥—É =========\ndef _floor_step(x: float, step: float) -> float:\n    if step is None or step <= 0:\n        return float(x)\n    return math.floor(float(x) / float(step)) * float(step)\n\ndef _round_step(x: float, step: float) -> float:\n    if step is None or step <= 0:\n        return float(x)\n    # –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –∫ –±–ª–∏–∂–∞–π—à–µ–º—É —à–∞–≥—É\n    return round(round(float(x) / float(step)) * float(step), 12)\n\n# ========= –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ =========\nclass BaseTrader:\n    mode = \"BASE\"\n\n    def open_order_from_c(self, symbol: str, c: Dict[str, Any]) -> Dict[str, Any]:\n        raise NotImplementedError\n\n# ========= PAPER (–ª–æ–∫–∞–ª—å–Ω—ã–π –¥–µ–º–æ—Å—á—ë—Ç, –±–µ–∑ API) =========\nclass PaperTrader(BaseTrader):\n    mode = \"PAPER\"\n\n    def __init__(self):\n        # –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —à–∞–≥–∏ —á–µ—Ä–µ–∑ ENV\n        self.qty_step = float(os.getenv(\"PAPER_QTY_STEP\", \"0.001\"))\n        self.price_step = float(os.getenv(\"PAPER_PRICE_STEP\", \"0.0001\"))\n        db.init_db()\n\n    def _build_order(self, symbol: str, c: Dict[str, Any]) -> Dict[str, Any]:\n        side = \"Buy\" if c.get(\"OPERATION\") == \"BUY\" else \"Sell\"\n        price = float(c.get(\"close\", 0.0))\n        lev   = int(c.get(\"LEVERAGE\", 1) or 1)\n        usdt  = float(c.get(\"SUM\", 0.0) or 0.0)\n\n        # –ö–æ–ª-–≤–æ –ø–æ —Ñ–æ—Ä–º—É–ª–µ qty = (USDT * leverage) / price, –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–µ –∫ —à–∞–≥—É\n        qty_raw = (usdt * lev) / max(price, 1e-12)\n        qty = _floor_step(qty_raw, self.qty_step)\n\n        return {\n            \"side\": side,\n            \"price\": _round_step(price, self.price_step),\n            \"qty\": qty,\n            \"usdt\": usdt,\n            \"leverage\": lev,\n            \"tf\": str(c.get(\"TF\", \"1SEC\")),\n            \"direction\": c.get(\"D\", \"FLAT\"),\n            \"p_oc\": float(c.get(\"P_OC\", 0.0) or 0.0),\n        }\n\n    def open_order_from_c(self, symbol: str, c: Dict[str, Any]) -> Dict[str, Any]:\n        o = self._build_order(symbol, c)\n        if o[\"qty\"] <= 0:\n            return {\"status\": \"REJECT\", \"reason\": \"qty<=0\", \"mode\": self.mode}\n\n        ts_sec = int(time.time())\n        dt_str = datetime.fromtimestamp(ts_sec, tz=MSK).strftime(\"%Y-%m-%d %H:%M:%S\")\n\n        # –ó–∞–ø–∏—à–µ–º –∫–∞–∫ ¬´–±—É–º–∞–∂–Ω—ã–π¬ª –æ—Ä–¥–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É\n        row = {\n            FLD_SYMBOL: symbol,\n            FLD_DATE_TIME: dt_str,\n            FLD_PRICE: float(o[\"price\"]),\n            FLD_SUM: float(o[\"usdt\"]),\n            FLD_TCOD: mk_tcod(symbol, ts_sec, \"PAPER\", BYBIT),\n            \"FLD$TF\": \"PAPER\",\n            \"FLD$SIDE\": o[\"side\"],\n            \"FLD$QTY\": float(o[\"qty\"]),\n            \"FLD$LEVERAGE\": int(o[\"leverage\"]),\n            \"FLD$P_OC\": float(o[\"p_oc\"]),\n            \"FLD$DIRECTION\": o[\"direction\"],\n            \"FLD$MODE\": self.mode,\n            \"FLD$VERSION\": os.getenv(\"TRADE_VERSION\", \"AUDI_RS7\"),\n        }\n        db.qr_add(\"ZZ$PAPER_TRADES\", row)\n        return {\"status\": \"FILLED\", \"mode\": self.mode, \"qty\": o[\"qty\"], \"price\": o[\"price\"]}\n\n# ========= –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è TESTNET (–≤–∫–ª—é—á–∏–º –ø–æ –∫–æ–º–∞–Ω–¥–µ) =========\nclass TestnetTrader(BaseTrader):\n    mode = \"TESTNET\"\n\n    def __init__(self):\n        # –ó–∞–≥–æ—Ç–æ–≤–∫–∞ ‚Äî –ø–æ–¥–∫–ª—é—á–∏–º REST Bybit v5 –ø–æ —Ç–≤–æ–µ–π –∫–æ–º–∞–Ω–¥–µ (–∫–ª—é—á–∏/—Å–∏–≥–Ω–∞—Ç—É—Ä—ã/—ç–Ω–¥–ø–æ–∏–Ω—Ç—ã)\n        raise NotImplementedError(\"TESTNET –≤–∫–ª—é—á–∏–º –ø–æ —Ç–≤–æ–µ–π –∫–æ–º–∞–Ω–¥–µ, PAPER —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.\")\n\n# ========= —Ñ–∞–±—Ä–∏–∫–∞ =========\ndef trader() -> BaseTrader:\n    mode = os.getenv(\"TRADE_MODE\", \"PAPER\").upper()\n    if mode == \"TESTNET\":\n        return TestnetTrader()  # –ø–æ–¥–Ω–∏–º–µ–º –ø–æ –∫–æ–º–∞–Ω–¥–µ\n    return PaperTrader()\n"
    },
    {
      "name": "bb_utils.py",
      "dir": "/",
      "lines": 248,
      "bytes": 9311,
      "updated": "2025-10-18T12:55:54Z",
      "content": "# -------------------------------------------------------------------------------------\n# name        : bb_utils.py\n# created     : 16.10.2025 05:45\n# description : –§–∞—Å–∞–¥–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n# -------------------------------------------------------------------------------------\n\nfrom typing import Union, List, Any\nfrom bb_fmt import _formatter\n\n\ndef fmt(value: Any, **kwargs) -> str:\n    \"\"\"\n    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö\n\n    Args:\n        value: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ª—é–±–æ–π —Ç–∏–ø)\n        **kwargs: –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n    Returns:\n        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞\n\n    Examples:\n        >>> fmt(1000000)\n        '1 000 000'\n        >>> fmt(\"2023-12-25\")\n        '25-12-2023'\n        >>> fmt(0.15, format_type='%')\n        '15,0%'\n        >>> fmt(1500000, currency='USD')\n        '$1,500,000.00'\n    \"\"\"\n    return _formatter.format(value, **kwargs)\n\n\ndef fmt_currency(amount: Union[int, float, str], currency: str = 'RUB', **kwargs) -> str:\n    \"\"\"\n    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã (—É–¥–æ–±–Ω—ã–π –∞–ª–∏–∞—Å)\n\n    Args:\n        amount: –¥–µ–Ω–µ–∂–Ω–∞—è —Å—É–º–º–∞\n        currency: –∫–æ–¥ –≤–∞–ª—é—Ç—ã (RUB, USD, EUR, GBP, CNY)\n        **kwargs: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n    Returns:\n        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–µ–Ω–µ–∂–Ω–∞—è —Å—É–º–º–∞\n\n    Examples:\n        >>> fmt_currency(1500000)\n        '1 500 000,00 ‚ÇΩ'\n        >>> fmt_currency(1500000, 'USD')\n        '$1,500,000.00'\n    \"\"\"\n    if amount == 'show':\n        return _formatter._generate_help('fmt_currency')\n    return fmt(amount, currency=currency, **kwargs)\n\n\ndef fmt_date(date_str: str, format: str = 'dd-mm-yyyy', **kwargs) -> str:\n    \"\"\"\n    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã (—É–¥–æ–±–Ω—ã–π –∞–ª–∏–∞—Å)\n\n    Args:\n        date_str: –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD\n        format: —Ñ–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ –¥–∞—Ç—ã\n        **kwargs: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n    Returns:\n        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞\n\n    Examples:\n        >>> fmt_date(\"2023-12-25\")\n        '25-12-2023'\n        >>> fmt_date(\"2023-12-25\", \"dd.mm.yyyy\")\n        '25.12.2023'\n    \"\"\"\n    if date_str == 'show':\n        return _formatter._generate_help('fmt_date')\n    return fmt(date_str, format_type='date', date_format=format, **kwargs)\n\n\ndef fmt_number(number: Union[int, float, str], **kwargs) -> str:\n    \"\"\"\n    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ (—É–¥–æ–±–Ω—ã–π –∞–ª–∏–∞—Å)\n\n    Args:\n        number: —á–∏—Å–ª–æ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n        **kwargs: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n    Returns:\n        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ\n\n    Examples:\n        >>> fmt_number(1000000)\n        '1 000 000'\n        >>> fmt_number(1234567.89)\n        '1 234 567,89'\n    \"\"\"\n    if number == 'show':\n        return _formatter._generate_help('fmt_number')\n    return fmt(number, format_type='financial', **kwargs)\n\n\ndef fmt_list(items: List, separator: str = ', ', **kwargs) -> str:\n    \"\"\"\n    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ (—É–¥–æ–±–Ω—ã–π –∞–ª–∏–∞—Å)\n\n    Args:\n        items: —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n        separator: —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n        **kwargs: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n    Returns:\n        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–ø–∏—Å–∫–∞\n\n    Examples:\n        >>> fmt_list([1, 2, 3])\n        '1, 2, 3'\n        >>> fmt_list([1, 2, 3], ' - ')\n        '1 - 2 - 3'\n    \"\"\"\n    if items == 'show':\n        return _formatter._generate_help('fmt_list')\n    return fmt(items, array_separator=separator, **kwargs)\n\n\n# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\ndef fmt_percentage(value: Union[float, str], decimal_places: int = 1, **kwargs) -> str:\n    \"\"\"\n    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ (—É–¥–æ–±–Ω—ã–π –∞–ª–∏–∞—Å)\n\n    Args:\n        value: –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (0.15 –¥–ª—è 15%)\n        decimal_places: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π\n        **kwargs: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n    Returns:\n        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç\n\n    Examples:\n        >>> fmt_percentage(0.1567)\n        '15,7%'\n        >>> fmt_percentage(0.15, decimal_places=0)\n        '15%'\n    \"\"\"\n    if value == 'show':\n        return \"fmt_percentage(value, decimal_places=1) - —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤\"\n    return fmt(value, format_type='%', decimal_places=decimal_places, **kwargs)\n\n\ndef fmt_phone(phone: str, phone_format: str = 'auto', **kwargs) -> str:\n    \"\"\"\n    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ (—É–¥–æ–±–Ω—ã–π –∞–ª–∏–∞—Å)\n\n    Args:\n        phone: –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n        phone_format: —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (auto, ru, us, eu, international)\n        **kwargs: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n    Returns:\n        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n\n    Examples:\n        >>> fmt_phone('+79161234567')\n        '+7 (916) 123-45-67'\n        >>> fmt_phone('+441234567890', 'international')\n        '+44 1234567890'\n    \"\"\"\n    if phone == 'show':\n        return \"fmt_phone(phone, phone_format='auto') - —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤\"\n    return fmt(phone, format_type='phone', phone_format=phone_format, **kwargs)\n\n\ndef fmt_boolean(value: Any, boolean_format: str = 'true_false', **kwargs) -> str:\n    \"\"\"\n    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (—É–¥–æ–±–Ω—ã–π –∞–ª–∏–∞—Å)\n\n    Args:\n        value: –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ\n        boolean_format: —Ñ–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ (true_false, yes_no, 10, ru, checkmark)\n        **kwargs: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n    Returns:\n        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ\n\n    Examples:\n        >>> fmt_boolean(True)\n        'true'\n        >>> fmt_boolean(False, 'ru')\n        '–Ω–µ—Ç'\n        >>> fmt_boolean(1, 'checkmark')\n        '‚úì'\n    \"\"\"\n    if value == 'show':\n        return \"fmt_boolean(value, boolean_format='true_false') - —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π\"\n    return fmt(value, format_type='boolean', boolean_format=boolean_format, **kwargs)\n\n\n# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞–∫–µ—Ç–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\ndef fmt_batch(values: List[Any], **kwargs) -> List[str]:\n    \"\"\"\n    –ü–∞–∫–µ—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π\n\n    Args:\n        values: —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n        **kwargs: –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫–æ –≤—Å–µ–º –∑–Ω–∞—á–µ–Ω–∏—è–º)\n\n    Returns:\n        –°–ø–∏—Å–æ–∫ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫\n\n    Examples:\n        >>> fmt_batch([1000, '2023-12-25', 0.15])\n        ['1 000', '25-12-2023', '15,0%']\n    \"\"\"\n    return [fmt(value, **kwargs) for value in values]\n\n\n# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã\nif __name__ == \"__main__\":\n    print(\"=== –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ë–û–¢–´ BB_UTILS ===\")\n\n    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã\n    print(\"–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\")\n    print(f\"fmt(1000000): {fmt(1000000)}\")\n    print(f\"fmt('2023-12-25'): {fmt('2023-12-25')}\")\n    print(f\"fmt(0.15, format_type='%'): {fmt(0.15, format_type='%')}\")\n\n    print(\"\\n–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\")\n    print(f\"fmt_currency(1500000, 'USD'): {fmt_currency(1500000, 'USD')}\")\n    print(f\"fmt_date('2023-12-25', 'dd.mm.yyyy'): {fmt_date('2023-12-25', 'dd.mm.yyyy')}\")\n    print(f\"fmt_number(1234567.89): {fmt_number(1234567.89)}\")\n    print(f\"fmt_list([1, 2, 3], ' - '): {fmt_list([1, 2, 3], ' - ')}\")\n\n    print(\"\\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\")\n    print(f\"fmt_percentage(0.1567): {fmt_percentage(0.1567)}\")\n    print(f\"fmt_phone('+79161234567'): {fmt_phone('+79161234567')}\")\n    print(f\"fmt_boolean(True, 'ru'): {fmt_boolean(True, 'ru')}\")\n\n    print(\"\\n–ü–∞–∫–µ—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:\")\n    mixed_data = [1000, \"2023-12-25\", 0.15, True, \"+79161234567\"]\n    formatted_batch = fmt_batch(mixed_data)\n    print(f\"–ò—Å—Ö–æ–¥–Ω—ã–µ: {mixed_data}\")\n    print(f\"–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ: {formatted_batch}\")\n\n    print(\"\\n–°–ø—Ä–∞–≤–∫–∞:\")\n    print(\"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\")\n    print(\"fmt('show') - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏\")\n    print(\"fmt_currency('show') - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –≤–∞–ª—é—Ç\")\n    print(\"fmt_date('show') - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –¥–∞—Ç\")"
    },
    {
      "name": "bb_ws.py",
      "dir": "/",
      "lines": 296,
      "bytes": 11508,
      "updated": "2025-10-18T12:55:54Z",
      "content": "# ==============================================================\n# bb_ws.py ‚Äî WebSocket subsystem for Delphi.2025\n# Created: 2025-10-12 / –£—á–∏—Ç–µ–ª—å & GPT-5\n# ==============================================================\n\nimport json\nimport threading\nimport time\nfrom collections import defaultdict, deque\nimport websocket  # pip install websocket-client\n\nimport asyncio, subprocess\n\nfrom bb_sys import *\nfrom bb_db import *\n\n# ==============================================================\n#   SIGNAL BUS\n# ==============================================================\n\nclass TSignalBus(TComponent):\n    \"\"\"–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —à–∏–Ω–∞ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ–±–º–µ–Ω–∞ —Å–∏–≥–Ω–∞–ª–∞–º–∏ –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏.\"\"\"\n\n    def __init__(self, owner):\n        super().__init__(owner, \"SignalBus\")\n        self.subscribers: dict[str, list[callable]] = {}\n        self.log(\"__init__\", \"bus ready\")\n\n    def subscribe(self, event: str, callback: callable):\n        \"\"\"–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ.\"\"\"\n        if event not in self.subscribers:\n            self.subscribers[event] = []\n        self.subscribers[event].append(callback)\n        self.log(\"subscribe\", f\"{callback.__name__} ‚Üí {event}\")\n\n    def emit(self, event: str, *args, **kwargs):\n        \"\"\"–í—ã–∑—ã–≤–∞–µ—Ç –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏—è.\"\"\"\n        for cb in self.subscribers.get(event, []):\n            try:\n                cb(*args, **kwargs)\n            except Exception as e:\n                self.log(\"emit\", f\"‚ö†Ô∏è {event} {cb.__name__}: {e}\")\n\n# ==============================================================\n#   TBybitWS ‚Äî WebSocket –∫–æ–º–ø–æ–Ω–µ–Ω—Ç\n# ==============================================================\n\nclass TBybitWS(TLiveComponent):\n    \"\"\"\n    WebSocket-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∏–∫–æ–≤ Bybit (publicTrade.*).\n    –ú–æ–∂–µ—Ç –∂–∏—Ç—å –≤–Ω—É—Ç—Ä–∏ –ª—é–±–æ–≥–æ –º–æ–¥—É–ª—è, –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç TLiveComponent.\n    \"\"\"\n\n    def __init__(self, owner, symbols, on_tick):\n        super().__init__(owner, \"BybitWS\")\n        self.symbols = symbols\n        self.on_tick = on_tick  # callback ‚Üí TickDetector.feed()\n        self.ws = None\n        self._connected = False\n        self._stop = False\n        self.log(\"__init__\", f\"initialized for {len(symbols)} symbols\")\n\n    # ----------------------------------------------------------\n    # Lifecycle\n    # ----------------------------------------------------------\n    def do_open(self) -> bool:\n        \"\"\"–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ—Ç–æ–∫ WebSocket.\"\"\"\n        self._stop = False\n        threading.Thread(target=self._run_ws, daemon=True).start()\n        self.log(\"do_open\", \"WebSocket thread started\")\n        return True\n\n    def do_close(self) -> bool:\n        \"\"\"–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç WebSocket.\"\"\"\n        self._stop = True\n        if self.ws:\n            try:\n                self.ws.close()\n                self.log(\"do_close\", \"WebSocket closed\")\n            except Exception as e:\n                self.log(\"do_close\", f\"‚ö†Ô∏è close error: {e}\")\n        self._connected = False\n        return True\n\n    # ----------------------------------------------------------\n    # –û—Å–Ω–æ–≤–Ω–æ–π WS-—Ü–∏–∫–ª\n    # ----------------------------------------------------------\n    def _run_ws(self):\n        \"\"\"–ì–ª–∞–≤–Ω—ã–π reconnect-—Ü–∏–∫–ª WebSocket.\"\"\"\n\n        def on_open(ws):\n            self._connected = True\n            args = [f\"publicTrade.{s}\" for s in self.symbols]\n            ws.send(json.dumps({\"op\": \"subscribe\", \"args\": args}))\n            self.log(\"on_open\", f\"subscribed {len(args)} symbols\")\n\n        def on_message(ws, msg):\n            if self._stop:\n                return\n            try:\n                data = json.loads(msg)\n                topic = data.get(\"topic\", \"\")\n                if topic.startswith(\"publicTrade.\"):\n                    symbol = topic.split(\".\", 1)[1]\n                    for row in data.get(\"data\", []):\n                        tick = {\n                            \"symbol\": symbol,\n                            \"ts\": int(row.get(\"T\", 0)),\n                            \"price\": float(row.get(\"p\", 0)),\n                            \"side\": row.get(\"S\", \"\"),\n                            \"volume\": float(row.get(\"v\", 0)),\n                        }\n                        self.on_tick(tick)\n            except Exception as e:\n                self.log(\"on_message\", f\"‚ö†Ô∏è {e}\")\n\n        def on_error(ws, err):\n            self.log(\"on_error\", str(err))\n\n        def on_close(ws, code, msg):\n            self._connected = False\n            self.log(\"on_close\", f\"{code}: {msg}\")\n\n        while not self._stop:\n            try:\n                self.ws = websocket.WebSocketApp(\n                    BYBIT_WS_PUBLIC_LINEAR,\n                    on_open=on_open,\n                    on_message=on_message,\n                    on_error=on_error,\n                    on_close=on_close,\n                )\n                self.ws.run_forever(ping_interval=20, ping_timeout=10)\n            except Exception as e:\n                self.log(\"_run_ws\", f\"‚ö†Ô∏è {e}\")\n            if not self._stop:\n                time.sleep(5)\n\n\n# ==============================================================\n#   TLogEkranWS ‚Äî WebSocket —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –ª–æ–≥–æ–≤ TEkran\n#   –ü–æ—Ç–æ–∫–æ–≤–æ —à–ª—ë—Ç journalctl bbscan.service –≤ –±—Ä–∞—É–∑–µ—Ä (/logs)\n# ==============================================================\n\nclass TLogEkranWS(TLiveComponent):\n    \"\"\"–õ–æ–∫–∞–ª—å–Ω—ã–π WebSocket-—Å–µ—Ä–≤–µ—Ä, —Å—Ç—Ä–∏–º—è—â–∏–π journalctl –ª–æ–≥ —Å–µ—Ä–≤–∏—Å–∞ –≤ TEkran /logs.\"\"\"\n\n    def __init__(self, owner, port=8082, service=\"bbscan.service\", initial_tail=100):\n        super().__init__(owner, \"LogEkranWS\")\n        self.port = port\n        self.service = service\n        self.initial_tail = int(initial_tail)\n        self.clients: set = set()\n        self._stop = False\n        self._thread = None\n        self._proc: subprocess.Popen | None = None\n        self._server = None\n\n    # ----------------------- lifecycle ------------------------\n    def do_open(self) -> bool:\n        \"\"\"–°—Ç–∞—Ä—Ç—É–µ—Ç WS-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ (asyncio).\"\"\"\n        if self._thread and self._thread.is_alive():\n            return True\n        self._stop = False\n        self._thread = threading.Thread(target=self._run, daemon=True)\n        self._thread.start()\n        self.log(\"do_open\", f\"ws://0.0.0.0:{self.port} for {self.service}\")\n        return True\n\n    def do_close(self) -> bool:\n        \"\"\"–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç WS –∏ tail-–ø—Ä–æ—Ü–µ—Å—Å journalctl.\"\"\"\n        self._stop = True\n        if self._proc and self._proc.poll() is None:\n            self._proc.terminate()\n        self.log(\"do_close\", \"stop requested\")\n        return True\n\n    # ----------------------- asyncio core ---------------------\n    def _run(self):\n        asyncio.run(self._amain())\n\n    async def _amain(self):\n        self._server = await websockets.serve(self._ws_handler, \"0.0.0.0\", self.port)\n        self.log(\"run\", f\"listening ws://0.0.0.0:{self.port}\")\n        pump_task = asyncio.create_task(self._pump_journal())\n        while not self._stop:\n            await asyncio.sleep(0.5)\n        pump_task.cancel()\n        await self._server.wait_closed()\n\n    async def _ws_handler(self, ws):\n        self.clients.add(ws)\n        async for _ in ws:\n            pass\n        self.clients.discard(ws)\n\n    async def _pump_journal(self):\n        \"\"\"\n        –ó–∞–ø—É—Å–∫–∞–µ—Ç `journalctl -fu <service> -n <initial_tail>` –∏ —Ä–µ—Ç—Ä–∞–Ω—Å–ª–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤—Å–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º.\n        \"\"\"\n        cmd = [\"journalctl\", \"-fu\", self.service, \"-n\", str(self.initial_tail)]\n        self.log(\"journalctl\", \" \".join(cmd))\n        self._proc = subprocess.Popen(\n            cmd,\n            stdout=subprocess.PIPE,\n            stderr=subprocess.STDOUT,\n            text=True,\n            bufsize=1,  # –ø–æ—Å—Ç—Ä–æ—á–Ω–æ\n        )\n\n        while not self._stop and self._proc.stdout:\n            line = self._proc.stdout.readline()\n            if not line:\n                await asyncio.sleep(0.05)\n                continue\n            await self._broadcast_json(\"log\", line.rstrip(\"\\n\"))\n\n        if self._proc and self._proc.poll() is None:\n            self._proc.terminate()\n\n    async def _broadcast_json(self, event: str, data):\n        if not self.clients:\n            return\n        msg = json.dumps({\"event\": event, \"data\": data})\n        dead = []\n        for ws in self.clients:\n            try:\n                await ws.send(msg)\n            except Exception:\n                dead.append(ws)\n        for ws in dead:\n            self.clients.discard(ws)\n\n# ==============================================================\n#   TTickDetector ‚Äî –∞–Ω–∞–ª–∏–∑ —Ç–∏–∫–æ–≤ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π\n# ==============================================================\n\nclass TTickDetector(TComponent):\n    \"\"\"–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Ç–∏–∫–∏, –∏—â–µ—Ç –∞–Ω–æ–º–∞–ª–∏–∏ (price spikes).\"\"\"\n\n    def __init__(self, owner):\n        super().__init__(owner, \"TickDetector\")\n        self.last_price = defaultdict(lambda: None)\n        self.history = defaultdict(lambda: deque(maxlen=500))\n        self.threshold = 0.003  # 0.3%\n        self.bus = TSignalBus(self)\n        self.log(\"__init__\", \"detector ready\")\n\n    def feed(self, tick: dict):\n        \"\"\"–ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–∏–∫ –æ—Ç WebSocket.\"\"\"\n        sym = tick[\"symbol\"]\n        price = tick[\"price\"]\n        ts = tick[\"ts\"]\n        prev = self.last_price[sym]\n\n        self.history[sym].append((ts, price))\n        self.last_price[sym] = price\n\n        if prev is not None:\n            delta = (price - prev) / prev if prev else 0\n            if abs(delta) >= self.threshold:\n                self._trigger(sym, ts, price, delta)\n\n    def _trigger(self, symbol, ts, price, delta):\n        \"\"\"–°–æ–∑–¥–∞—ë—Ç —Å–æ–±—ã—Ç–∏–µ tick_spike —á–µ—Ä–µ–∑ SignalBus.\"\"\"\n        msg = f\"{symbol} Œî={delta:+.3%} ‚Üí {price}\"\n        self.log(\"trigger\", msg)\n        self.bus.emit(\"tick_spike\", symbol, price, delta, ts)\n\n# ==============================================================\n#   –ü—Ä–∏–º–µ—Ä –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ –¥–ª—è SignalBus\n# ==============================================================\n\ndef db_signal_writer(symbol, price, delta, ts):\n    \"\"\"–ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ ‚Äî –∑–∞–ø–∏—Å—å –≤ ZZ$SIGNALS.\"\"\"\n    try:\n        record = {\n            FLD_SYMBOL: symbol,\n            FLD_DATE_TIME: time.strftime(\"%Y-%m-%d %H:%M:%S\", time.gmtime(ts / 1000)),\n            FLD_PRICE: price,\n            FLD_VOLUME: 0.0,\n            FLD_TYPE: \"TICK_SPIKE\",\n            FLD_SOURCE: \"WS\",\n        }\n        qr_add(\"ZZ$SIGNALS_2\", record)\n        print(f\"[SignalBus] saved tick_spike {symbol} ‚Üí {price}\")\n    except Exception as e:\n        print(f\"[db_signal_writer] ‚ö†Ô∏è {e}\")\n\n# ==============================================================\n#   Public exports\n# ==============================================================\n\n__all__ = [\"TBybitWS\", \"TTickDetector\", \"TSignalBus\", \"db_signal_writer\"]\n\n"
    },
    {
      "name": "bb_ws_2.py",
      "dir": "/",
      "lines": 133,
      "bytes": 5352,
      "updated": "2025-10-18T12:55:54Z",
      "content": "# bb_ws.py\n# ALIAS: BB_WS\n# Created: 2025-09-19\n# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–æ–¥—É–ª—å —Ä–∞–±–æ—Ç—ã —Å Bybit WebSocket v5 –¥–ª—è –º–∏–Ω—É—Ç–Ω—ã—Ö —Å–≤–µ—á–µ–π\n\nimport asyncio\nimport json\nfrom typing import Callable, List, Dict\n\nimport requests\nimport websockets\nimport contextlib\n\nfrom bb_vars import BYBIT_REST\n\n# ------------------------\n# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–û–ï\n# ------------------------\n\ndef _chunk(lst: List[str], size: int) -> List[List[str]]:\n    return [lst[i:i + size] for i in range(0, len(lst), size)]\n\n\ndef get_usdt_linear_symbols() -> List[str]:\n    \"\"\"–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ –ª–∏–Ω–µ–π–Ω—ã–µ USDT-—Å–∏–º–≤–æ–ª—ã –∏–∑ Bybit REST v5.\n    –û–±—Ö–æ–¥–∏—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏—é (cursor).\n    \"\"\"\n    url = f\"{BYBIT_REST}/v5/market/instruments-info\"\n    params = {\"category\": \"linear\"}\n    out: List[str] = []\n    cursor = None\n    while True:\n        if cursor:\n            params[\"cursor\"] = cursor\n        r = requests.get(url, params=params, timeout=20)\n        r.raise_for_status()\n        j = r.json()\n        result = j.get(\"result\", {})\n        items = result.get(\"list\", [])\n        for it in items:\n            # —Ñ–∏–ª—å—Ç—Ä –ø–æ USDT-–∫–æ—Ç–∏—Ä–æ–≤–∫–µ –∏ –∞–∫—Ç–∏–≤–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º\n            if it.get(\"quoteCoin\") == \"USDT\":\n                # –º–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å—Ç–∞—Ç—É—Å: it.get(\"status\") == \"Trading\"\n                out.append(it.get(\"symbol\"))\n        cursor = result.get(\"nextPageCursor\") or result.get(\"cursor\")\n        if not cursor:\n            break\n    return out\n\n\nasync def subscribe_symbols(ws, topics: List[str], batch: int = 50):\n    \"\"\"–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç WS –Ω–∞ —Å–ø–∏—Å–æ–∫ topics –ø–æ—Ä—Ü–∏—è–º–∏.\"\"\"\n    for grp in _chunk(topics, batch):\n        payload = {\"op\": \"subscribe\", \"args\": grp}\n        await ws.send(json.dumps(payload))\n        await asyncio.sleep(0.05)\n\n\n# ------------------------\n# –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ WS\n# ------------------------\nasync def ws_loop(ws_url: str, category: str, tf_str: str,\n                  on_candle: Callable[[str, Dict, Dict[str, int]], asyncio.Future]):\n    \"\"\"\n    –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ Bybit WS, –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–∞ kline.<tf_str>.<symbol> –¥–ª—è –≤—Å–µ—Ö USDT –ª–∏–Ω–µ–π–Ω—ã—Ö —Ñ—å—é—á–µ—Ä—Å–æ–≤\n    –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –∑–∞–∫—Ä—ã—Ç—ã–µ —Å–≤–µ—á–∏ –≤ –∫–æ–ª–±—ç–∫ on_candle(symbol, candle_dict, k_counter).\n    \"\"\"\n    backoff = 1\n    while True:\n        try:\n            symbols = get_usdt_linear_symbols()\n            topics = [f\"kline.{tf_str}.{s}\" for s in symbols]\n            k_counter: Dict[str, int] = {s: 0 for s in symbols}\n\n            async with websockets.connect(ws_url, ping_interval=None) as ws:\n                # –ø–æ–¥–ø–∏—Å–∫–∞\n                await subscribe_symbols(ws, topics, batch=50)\n                print(f\"‚úÖ WS –ø–æ–¥–∫–ª—é—á–µ–Ω. –ü–æ–¥–ø–∏—Å–∞–Ω–æ {len(topics)} —Ç–æ–ø–∏–∫–æ–≤ ({len(symbols)} —Å–∏–º–≤–æ–ª–æ–≤)\")\n\n                # –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π ping, —á—Ç–æ–±—ã —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ—Å—Ç–∞–∏–≤–∞–ª–æ\n                async def _pinger():\n                    while True:\n                        try:\n                            await ws.ping()\n                        except Exception:\n                            return\n                        await asyncio.sleep(15)\n\n                pinger_task = asyncio.create_task(_pinger())\n\n                try:\n                    async for raw in ws:\n                        try:\n                            msg = json.loads(raw)\n                        except Exception:\n                            continue\n\n                        # ignore service acks/ops\n                        if not isinstance(msg, dict):\n                            continue\n                        topic = msg.get(\"topic\")\n                        data = msg.get(\"data\")\n                        if not topic or not data:\n                            continue\n\n                        # –æ–∂–∏–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç kline.<tf>.<symbol>\n                        parts = topic.split('.')\n                        if len(parts) != 3 or parts[0] != 'kline':\n                            continue\n                        _tf, symbol = parts[1], parts[2]\n                        if _tf != tf_str:\n                            continue\n\n                        # Bybit –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å–≤–µ—á–µ–π, –±–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω—é—é\n                        candle = data[-1] if isinstance(data, list) else data\n                        # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∞–º –ø—Ä–æ–≤–µ—Ä–∏—Ç confirm –∏–ª–∏ –º—ã –º–æ–∂–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∑–¥–µ—Å—å\n                        if not candle or not candle.get(\"confirm\"):\n                            continue\n\n                        await on_candle(symbol, candle, k_counter)\n                finally:\n                    pinger_task.cancel()\n                    with contextlib.suppress(Exception):\n                        await pinger_task\n\n            # –µ—Å–ª–∏ –≤—ã—à–ª–∏ –∏–∑ with –±–µ–∑ –∏—Å–∫–ª—é—á–µ–Ω–∏—è ‚Äî –æ–±–Ω—É–ª—è–µ–º backoff\n            backoff = 1\n        except Exception as e:\n            print(f\"WS error: {e}\")\n            await asyncio.sleep(backoff)\n            backoff = min(backoff * 2, 30)\n\n"
    },
    {
      "name": "_bb_ws.py",
      "dir": "/",
      "lines": 146,
      "bytes": 5624,
      "updated": "2025-10-18T12:55:54Z",
      "content": "import asyncio\nimport json\nimport logging\nimport websockets\n\nfrom bb_sys import *\n\n# ==============================================================\n#  TWebSocketServer\n# ==============================================================\n\nclass TWebSocketServer(TLiveComponent):\n    \"\"\"\n    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π WebSocket-—Å–µ—Ä–≤–µ—Ä.\n    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤, —Ä–∞—Å—Å—ã–ª–∞–µ—Ç –∏–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã.\n    \"\"\"\n\n    def __init__(self, owner, host=\"0.0.0.0\", port=8081):\n        super().__init__(owner, \"WebSocketServer\")\n        self.host = host\n        self.port = port\n        self.clients: set = set()\n        self._server = None\n        self._task_heartbeat = None\n        self.log(\"__init__\", f\"initialized on ws://{host}:{port}\")\n\n    # ----------------------------------------------------------\n    # Lifecycle\n    # ----------------------------------------------------------\n    def do_open(self) -> bool:\n        asyncio.create_task(self._amain())\n        self.log(\"do_open\", f\"server task started ({self.host}:{self.port})\")\n        return True\n\n    def do_close(self) -> bool:\n        self.log(\"do_close\", \"closing...\")\n        for ws in list(self.clients):\n            asyncio.create_task(ws.close(code=1001, reason=\"server shutdown\"))\n        return True\n\n    # ----------------------------------------------------------\n    # Main loop\n    # ----------------------------------------------------------\n    async def _amain(self):\n        self._server = await websockets.serve(self._handler, self.host, self.port)\n        self.log(\"_amain\", f\"listening on ws://{self.host}:{self.port}\")\n\n        self._task_heartbeat = asyncio.create_task(self._heartbeat())\n\n        await self._server.wait_closed()\n        self.log(\"_amain\", \"server stopped\")\n\n    async def _handler(self, ws):\n        self.clients.add(ws)\n        addr = getattr(ws, \"remote_address\", None)\n        self.log(\"_handler\", f\"client connected: {addr}\")\n        try:\n            await ws.send(json.dumps({\"type\": \"hello\", \"msg\": \"welcome\"}))\n            async for msg in ws:\n                await self._on_message(ws, msg)\n        except Exception as e:\n            self.log(\"_handler\", f\"‚ö†Ô∏è {e}\")\n        finally:\n            self.clients.discard(ws)\n            self.log(\"_handler\", f\"client disconnected: {addr}\")\n\n    # ----------------------------------------------------------\n    # Event handling\n    # ----------------------------------------------------------\n    async def _on_message(self, ws, msg: str):\n        \"\"\"–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.\"\"\"\n        try:\n            data = json.loads(msg)\n        except json.JSONDecodeError:\n            await ws.send(json.dumps({\"type\": \"echo\", \"msg\": msg}))\n            return\n\n        cmd = data.get(\"cmd\")\n        if cmd == \"ping\":\n            await ws.send(json.dumps({\"type\": \"pong\"}))\n        elif cmd == \"broadcast\":\n            text = data.get(\"text\", \"\")\n            await self.broadcast({\"type\": \"broadcast\", \"text\": text})\n        else:\n            await ws.send(json.dumps({\"type\": \"unknown\", \"data\": data}))\n\n    async def broadcast(self, payload: dict):\n        \"\"\"–†–∞—Å—Å—ã–ª–∞–µ—Ç JSON –≤—Å–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º.\"\"\"\n        if not self.clients:\n            return\n        msg = json.dumps(payload)\n        await asyncio.gather(*(ws.send(msg) for ws in list(self.clients)), return_exceptions=True)\n\n    async def _heartbeat(self):\n        \"\"\"–†–µ–≥—É–ª—è—Ä–Ω–æ –ø–∏–Ω–≥—É–µ—Ç –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –¥–µ—Ä–∂–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.\"\"\"\n        while True:\n            dead = []\n            for ws in list(self.clients):\n                try:\n                    pong_waiter = await ws.ping()\n                    await asyncio.wait_for(pong_waiter, timeout=5)\n                except Exception:\n                    dead.append(ws)\n            for ws in dead:\n                self.clients.discard(ws)\n            await asyncio.sleep(10)\n\n# ==============================================================\n#  TWebSocketClient\n# ==============================================================\n\nclass TWebSocketClient(TLiveComponent):\n    \"\"\"\n    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π WebSocket-–∫–ª–∏–µ–Ω—Ç.\n    –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –≤–Ω–µ—à–Ω–µ–º—É —Å–µ—Ä–≤–µ—Ä—É, —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ.\n    \"\"\"\n\n    def __init__(self, owner, url, on_message=None, reconnect_delay=5):\n        super().__init__(owner, \"WebSocketClient\")\n        self.url = url\n        self.on_message = on_message\n        self.reconnect_delay = reconnect_delay\n        self._stop = False\n        self.log(\"__init__\", f\"ready for {url}\")\n\n    def do_open(self) -> bool:\n        asyncio.create_task(self._amain())\n        self.log(\"do_open\", f\"connecting to {self.url}\")\n        return True\n\n    def do_close(self) -> bool:\n        self._stop = True\n        self.log(\"do_close\", \"stop requested\")\n        return True\n\n    async def _amain(self):\n        while not self._stop:\n            try:\n                async with websockets.connect(self.url, ping_interval=20) as ws:\n                    self.log(\"_amain\", f\"connected to {self.url}\")\n                    async for msg in ws:\n                        if self.on_message:\n                            self.on_message(msg)\n            except Exception as e:\n                self.log(\"_amain\", f\"‚ö†Ô∏è {e}\")\n                await asyncio.sleep(self.reconnect_delay)"
    }
  ]
}